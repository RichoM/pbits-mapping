:INCLUDE?,:doi,:title,:description,:subtype,:coverDate,:publicationName,:authkeywords,:eid,:pii,:pubmed_id,:subtypeDescription,:creator,:afid,:affilname,:affiliation_city,:affiliation_country,:author_count,:author_names,:author_ids,:author_afids,:coverDisplayDate,:issn,:source_id,:eIssn,:aggregationType,:volume,:issueIdentifier,:article_number,:pageRange,:openaccess,:fund_acr,:fund_no,:fund_sponsor,:citedby_count,:YEAR,:URL,:FULL_ARTICLE,:NOTES,:HERRAMIENTAS,:EDADES_OBJETIVO,:PORTABILIDAD_HW,:TIPO_PAPER,:CUSTOM_TOOL?,:TIPO_DE_LENGUAJE,:CONCURRENCY?,:LIVENESS?,:DEBUGGING?,:MONITORING?,:AUTONOMY?
SI,10.5755/j01.eee.18.9.2825,The LEGO NXT robot-based e-learning environment to teach computer science topics,"It is difficult to motivate learners to learn abstract Computer Science topics (e.g., data structures, algorithms and programming) with the adequate level of engagement. We present the process of constructing a LEGO robot, called the DRAWBOT (drawing robot), which enables to create the e-learning environment to demonstrate visually the solution of graph-based Computer Science tasks through teaching programming. Our research has confirmed the importance of using robot-based environments for teaching that was known so far in the literature on e-learning. We have extended the known approaches: a) by providing technical characteristics for the process to create the e-learning environment for the real setting; b) by smoothly integrating different phases of the process and considering it into entirety to support the constructivist learning model. © Kauno technologijos universitetas, 2012.",ar,2012-12-01,Elektronika ir Elektrotechnika,Computer science e-learning | Learning task visualization | LEGO NXT robot | Robot control program.,2-s2.0-84872723602,,,Article,Burbaite R.,60042282,Kaunas University of Technology,Kaunas,Lithuania,3,"Burbaite, R.;Stuikys, V.;Marcinkevicius, R.",54897970900;6603106159;8681721200,60042282;60042282;60042282,2012,13921215,19900193212,,Journal,18,9,,113-116,1,,undefined,,12,2012,https://eejournal.ktu.lt/index.php/elt/article/view/2825,https://drive.google.com/file/d/1wuVbnoa5vwSq_oA1JNbPN4ZrgsqHL7iZ/view?usp=sharing,"Proponen el uso de un robot basado en Lego NXT al que llaman DRAWBOT. En el paper plantean una actividad donde construyen el robot, y lo programan. El robot tiene un diseño específico con un lapicito que le permite dibujar. No parecen estar usando sensores, por lo que vi los ejercicios se basan principalmente en dibujar patrones geométricos (tipo logo)","Testearon 3 lenguajes: NXT-G, RobotC and LeJOS NXJ.
Al final se quedaron con RobotC","secondary school classes for the advanced students.
the approach is applicable also at the university level.",Lego NXT,"Propone una actividad con Lego.
Mencionan que hicieron una experiencia con alumnos de secundaria pero no dicen mucho más (lo único que midieron fue el tiempo medio de resolucion de cada tarea en la actividad).",No,Textual,Sí,No,No,No,Sí
SI,10.1007/s00779-011-0404-2,Tangible interaction and learning: The case for a hybrid approach,"Research involving tangible interaction and children has often focused on how tangibles might support or improve learning compared to more traditional methods. In this paper, we review three of our research studies involving tangible computer programming that have addressed this question in a variety of learning environments with a diverse population of children. Through these studies, we identify situations in which tangible interaction seems to offer advantages for learning; however, we have also identify situations in which tangible interaction proves less useful and an alternative interaction style provides a more appropriate medium for learning. Thus, we advocate for a hybrid approach-one that offers teachers and learners the flexibility to select the most appropriate interaction style to meet the needs of a specific situation. © Springer-Verlag London Limited 2011.",ar,2012-04-01,Personal and Ubiquitous Computing,Children | Computer programming | Education | Hybrid tangible interface | Robotics | Tangible interaction | TUIs,2-s2.0-84860883413,,,Article,Horn M.,60023143;60007363,Tufts University;Northwestern University,Medford;Evanston,United States;United States,3,"Horn, Michael S.;Crouser, R. Jordan;Bers, Marina U.",35931772700;24773306500;57203655429,60007363;60023143;60023143,April 2012,16174909,22315,,Journal,16,4,,379-389,0,NSF,DRL-0735657,National Science Foundation,131,2012,https://link.springer.com/article/10.1007%2Fs00779-011-0404-2,https://drive.google.com/file/d/1qTADn7iZSXAtzVoVlttHbkX7nDh0-6Pc/view?usp=sharing,"Mencionan ventajas y desventajas (interesante) de la programación tangible. Acá puede servir para justificar porqué no fuimos para ese lado (además de que parece ser muy limitada y más para chicos chicos esa interfaz de programación)

Hicieron 3 estudios midiendo diferentes cosas: el primero en un museo donde algunos días pusieron los bloques de madera y otros una GUi; el segundo estudio en un jardín de infantes donde trabajaron con Legoo RCX; y el tercero en un campamento de robótica para chicos de 5 a 7 años donde probaron un entorno híbrido (tangible y visual)","Tern, un lenguaje tangible que usa bloques de madera","Desde los 4 años...
El tercer estudio lo hicieron con pibes de 5 a 7 años",Lego RCX,Review de otros tres estudios de casos acerca de los lenguajes tangibles vs visuales.,Hicieron una versión híbrida de Tern con componentes gráficos,"Tangible
Híbrida (tangible y visual)",No,No,No,No,Sí
SI,10.1109/TLT.2011.28,Using Haptic and Auditory Interaction Tools to Engage Students with Visual Impairments in Robot Programming Activities,"The robotics field represents the integration of multiple facets of computer science and engineering. Robotics-based activities have been shown to encourage K-12 students to consider careers in computing and have even been adopted as part of core computer-science curriculum at a number of universities. Unfortunately, for students with visual impairments, there are still inadequate opportunities made available for teaching basic computing concepts using robotics-based curriculum. This outcome is generally due to the scarcity of accessible interfaces to educational robots and the unfamiliarity of teachers with alternative (e.g., nonvisual) teaching methods. As such, in this paper, we discuss the use of alternative interface modalities to engage students with visual impairments in robotics-based programming activities. We provide an overview of the interaction system and results on a pilot study that engaged nine middle school students with visual impairments during a two-week summer camp. © 2012 IEEE",ar,2012-01-01,IEEE Transactions on Learning Technologies,Education | functional programming | haptic I/O | robotics,2-s2.0-85008525642,,,Article,Howard A.,60021508;60019647,University of Notre Dame;Georgia Institute of Technology,Notre Dame;Atlanta,United States;United States,3,"Howard, Ayanna M.;Park, Chung Hyuk;Remy, Sekou",26643170000;36080995200;23980969400,60019647;60019647;60021508,January/March 2012,19391382,19700167026,,Journal,5,1,,87-95,1,,940146,,30,2012,https://ieeexplore.ieee.org/document/6095498,https://drive.google.com/file/d/1iJOdry1Cff009jcwv2ldPpuc5Ap4L2JG/view?usp=sharing,"Mencionan interfaces especiales para facilitar la programación de robots para chicos con problemas de visión, no sé si hay alguna mención específica a un entorno de programación para robótica educativa.

Sí, mencionan Lego NXT con BricxCC con algunas modificaciones para poder dar feedback a los chicos con problemas de visión. El feedback se puede analizar en 3 formas separadas: al momento de la programación, al momento de la ejecución del programa, y luego de ejecutar el programa. Por lo que cuentan, usaron distintas estrategias en cada caso. 

Es interesante también la evaluación que hicieron con alumnos ciegos. El objetivo es evaluar qué tan bien pueden incorporarlos en las actividades y así motivarlos a meterse en esta disciplina. Separaron la cuestión en cosas objetivas que pueden medir y luego cosas subjetivas (una encuesta, básicamente).
Capaz está bueno para tomar como referencia porque hicieron el experimento con sólo 9 chicos, les dieron a todos el mismo robot pre-armado, cada uno hizo 4 tareas.",Lego NXT con BricxCC (NQC),"En el experimento participaron de ""middle school"", pero Lego NXT puede usarse con chicos más grandes",Lego NXT,Experimento con chicos ciegos,Agregaron sistemas de feedback háptico y sonoro para que lo puedan usar los pibes ciegos,Textual,"Sí, NQC soporta multitasking",No,No,"Más o menos, como es un sistema para chicos ciegos implementaron un sistema con feedback háptico y auditivo que le dice a los pibes cómo se está moviendo el robot, si tiene obstáculos adelante, si el sensor de tacto está activado, y si el robot alcanzó el objetivo.","Sí, es LEGO NXT"
SI,10.1109/TE.2012.2190071,Algorithmic Bricks: A tangible robot programming tool for elementary school students,"Tangible programming tools enable children to easily learn the programming process, previously considered to be difficult for them. While various tangible programming tools have been developed, there is still a lack of available tools to help students experience the general programming process. This study therefore developed a tool called Algorithmic Bricks (A-Bricks), to improve the programming language experience by considering and utilizing characteristics of procedural language. Specifically, elements such as sequence, repetition, condition, function, and parameter were used to develop A-Bricks. In addition, this study observed the benefits of A-Bricks and confirmed its potential as a tangible educational programming tool by comparing and analyzing elementary school students using A-Bricks to control groups using Scratch. © 2012 IEEE.",ar,2012-01-01,IEEE Transactions on Education,Computer science education | Educational robot | Procedural programming | Tangible user interface,2-s2.0-84898802347,,,Article,Kwon D.,60005273,Korea University,Seoul,South Korea,4,"Kwon, Dai Young;Kim, Han Sung;Shim, Jae Kwoun;Lee, Won Gyu",15520920800;57203629768;56118822900;56164989400,60005273;60005273;60005273;60005273,November 2012,189359,17344,,Journal,55,4,,474-479,0,NRF,NRF-2011-358-B00037,National Research Foundation of Korea,26,2012,https://ieeexplore.ieee.org/document/6172535,https://drive.google.com/file/d/1KHZhcYFOgp2gmznMsx_e-meH3cCQXhOe/view?usp=sharing,"Desarrollaron una herramienta tangible y la probaron con alumnos en un experimento comparando con Scratch.
Las métricas que compararon son: (1) convenience, understandability, and enjoyment of using the tool; (2) frequency of errors while using the tool; (3) level of achievement in
the programming activity.
10 alumnos en grupo experimental y 14 en grupo de control",Algorithmic Bricks (A-Bricks),first-grade elementary school,The robot used in this study is similar to Line-Tracers (robot de desarrollo propio?),"Presenta una herramienta nueva
Hace un experimento de usabilidad (compara con Scratch)",Desarrollo propio,Tangible,No,No,No,No,Si?
SI,10.1080/08993408.2013.847152,Mindstorms robots and the application of cognitive load theory in introductory programming,"This paper reports on a series of introductory programming workshops, initially targeting female high school students, which utilised Lego Mindstorms robots. Cognitive load theory (CLT) was applied to the instructional design of the workshops, and a controlled experiment was also conducted investigating aspects of the interface. Results indicated that a truncated interface led to better learning by novice programmers as measured by test performance by participants, as well as enhanced shifts in self-efficacy and lowered perception of difficulty. There was also a transfer effect to another programming environment (Alice). It is argued that the results indicate that for novice programmers, the mere presence on-screen of additional (redundant) entities acts as a form of tacit distraction, thus impeding learning. The utility of CLT to analyse, design and deliver aspects of computer programming environments and instructional materials is discussed. © 2013 Taylor & Francis.",ar,2013-12-01,Computer Science Education,cognitive load theory | instructional design | introductory programming | Mindstorms NXT | robots,2-s2.0-84889605432,,,Article,Mason R.,60170278,School of Business and Tourism,Lismore,Australia,2,"Mason, Raina;Cooper, Graham",51864277800;7402356040,60170278;60170278,December 2013,8993408,19700201422,17445175,Journal,23,4,,296-314,0,,undefined,,13,2013,https://www.tandfonline.com/doi/abs/10.1080/08993408.2013.847152,https://drive.google.com/file/d/1EYcmjqe31VU25ajqt--gczV7jm8KXWgb/view?usp=sharing,,Lenguaje visual de Lego Mindstorms NXT (NXT-G),"De 9 a 10 el primer workshop
De 11 a 13 el experimento",Lego NXT,Describen un workshop con alumnas y un experimento controlado,No,Visual,"Entiendo que el lenguaje del NXT soporta concurrency, pero no lo mencionan en el paper",No,No,"Creo que sí, de una forma un poco limitada pero podés ver los valores de los sensores en el IDE",Sí
SI,10.1080/08993408.2013.847165,The role of physicality in rich programming environments,"Computer science proficiency continues to grow in importance, while the number of students entering computer science-related fields declines. Many rich programming environments have been created to motivate student interest and expertise in computer science. In the current study, we investigated whether a recently created environment, Robot Virtual Worlds (RVWs), can be used to teach computer science principles within a robotics context by examining its use in high-school classrooms. We also investigated whether the lack of physicality in these environments impacts student learning by comparing classrooms that used either virtual or physical robots for the RVW curriculum. Results suggest that the RVW environment leads to significant gains in computer science knowledge, that virtual robots lead to faster learning, and that physical robots may have some influence on algorithmic thinking. We discuss the implications of physicality in these programming environments for learning computer science. © 2013 Taylor & Francis.",ar,2013-12-01,Computer Science Education,algorithmic thinking | computer programming | physicality | programming environments | robotics | virtual simulations,2-s2.0-84889566370,,,Article,Liu A.,60104841;60015543,The Robotics Institute;University of Pittsburgh,Pittsburgh;Pittsburgh,United States;United States,4,"Liu, Allison S.;Schunn, Christian D.;Flot, Jesse;Shoop, Robin",55893525700;7004260796;55893535300;25655529500,60015543;60015543;60104841;60104841,December 2013,8993408,19700201422,17445175,Journal,23,4,,315-331,0,NSF,1029404,National Science Foundation,14,2013,https://www.tandfonline.com/doi/abs/10.1080/08993408.2013.847165,https://drive.google.com/file/d/1AtiQAP2DlHfAe12Ih4t2jSGzto7ZrjeC/view?usp=sharing,"Interesante, estudia el impacto de la virtualidad en la robótica educativa? Puede servir para justificar ya sea mendieta, el laboratorio remoto, o physical bits (dependiendo de las conclusiones)
No sé si menciona alguna herramienta específica

Comparan el impacto en el aprendizaje de usar robots virtuales con robots físicos. Interesantes conclusiones. El uso de robots virtuales significó una reducción en el tiempo que tardaron en cubrir los mismos temas que con los robots físicos (""working with the virtual VEX robots allowed students to learn and complete the course more efficiently in the RvW environment when compared to the physicalo VEX robots""). La razón parece ser que los estudiantes que usaron los robots físicos se encontraron con varios problemas adicionales de comunicación, eléctricos, y mecánicos que requirieron tiempo del instructor para resolverlos.
Otra cosa interesante es que parece que el uso de robots físicos no tuvo impacto en el proceso de aprendizaje.

Algunas citas: 
""in a physical environment, students may not be able to stop their programs as quickly or easy, leading to more delayed feedback and delayed error correction"".
""physical environments provide a perceptual space to ground abstract concepts, and they provide experience with errors caused by physical artefacts""
""the physical environment may allow students to more clearly see the connection between their program code and the actions of the robot itself""
""physical robot may also provide more motivation for students whose interests lie in robotics, as working with a virtual simulation may feel less authentic""
""Other literature in the programming and computer science education field has emphasized the importance of short code execute debug cycles, which aid the learning process and may also prove less frustrating for students""
""studies in other fields suggest that immediate feedback can actually be detrimental (because it) may encourage students to engage in trial and error rather than thinking fully through their program and its behaviours""
""Thus, it appears that the physicality of the VEX robot did not provide any affordances to the learning process, and instead produced issues that distracted from the robot programming course""


Entra porque usan RobotC tanto para manejar robots virtuales como físicos.",RobotC,"freshman or sophomore year,
high school students",VEX robot,Experimento con alumnos,No,Textual,"Sí. RobotC tiene soporte para multitask (dependiendo del robot, supongo) pero en el paper no lo mencionan en ningún momento",No,Supuestamente RobotC tiene un debugger pero no mencionan nada de esto en el paper,No. Por lo que leí en el manual de RobotC sólo podés ver los valores de motores y sensores cuando estás debuggeando,Sí
SI,10.1007/s13384-013-0094-z,The architecture of children's use of language and tools when problem solving collaboratively with robotics,"This paper demonstrates, following Vygotsky, that language and tool use has a critical role in the collaborative problem-solving behaviour of school-age children. It reports original ethnographic classroom research examining the convergence of speech and practical activity in children’s collaborative problem solving with robotics programming tasks. The researchers analysed children’s interactions during a series of problem solving experiments in which Lego Mindstorms toolsets were used by teachers to create robotics design challenges among 24 students in a Year 4 Australian classroom (students aged 8.5–9.5 years). The design challenges were incrementally difficult, beginning with basic programming of straight line movement, and progressing to more complex challenges involving programming of the robots to raise Lego figures from conduit pipes using robots as pulleys with string and recycled materials. Data collection involved micro-genetic analysis of students’ speech interactions with tools, peers, and other experts, teacher interviews, and student focus group data. Coding the repeated patterns in the transcripts, the authors outline the structure of the children’s social speech in joint problem solving, demonstrating the patterns of speech and interaction that play an important role in the socialisation of the school-age child’s practical intellect",ar,2013-08-01,Australian Educational Researcher,,2-s2.0-84881572388,,,Article,Mills K.,,Queensland University of Technology,Brisbane,Australia,,,,,August 2013,3116999,29540,22105328,Journal,40,3,,315-337,0,,,,19,2013,https://link.springer.com/article/10.1007/s13384-013-0094-z,https://drive.google.com/file/d/1ujZ1fv6xC9MRD-AF2cIvzina0WAKwgMr/view,"Parece que usan LEGO NXT para enseñar, hicieron un estudio con chicos",NXT-G,entre 8 y 9,Lego Mindstorms NXT,Experiencia con alumnos,No,,,,,,
SI,10.1109/TLA.2013.6502866,Actions towards the application of intelligent systems in computer education,"In this work we present two courses of action as part of a research project which is focused in the use of intelligent tutoring systems and robots to improve the learning process of programming for the engineering field. The first method we use is the application of neural networks to the prediction of academic performance of students of programming and, on the other hand, we are developing practical activities based in robot programming for the same student universe as a motivational tool. These actions are the first steps to a learning strategy based on feedback and motivation, by applying intelligent systems in the process of teaching and learning programming applied to engineering field. © 2003-2012 IEEE.",ar,2013-05-02,IEEE Latin America Transactions,Educational Robots | Engineering Education | Intelligent Tutoring Systems,2-s2.0-84876815936,,,Article,Diaz L.,60000658,Universidad Nacional de Córdoba,Cordoba,Argentina,4,"Diaz, Laura C.;Algorry, Aldo;Eschoyez, Maximiliano;Barto, Carlos",57197162471;55667676100;36561402700;55667620300,60000658;60000658;60000658;60000658,2013,15480992,19700181218,,Journal,11,1,6502866,591-595,0,,undefined,,4,2013,https://ieeexplore.ieee.org/document/6502866,https://drive.google.com/file/d/1MLuHtPPqowxpUWZwrSnglkr3xTtsUrB8/view?usp=sharing,"ACAACA Técnicamente lo tendría que excluir porque está en español peeeero lo que voy a hacer es incluirlo por ahora y después voy a chequear los excluidos, si encuentro alguno en español excluido por no estar en inglés entonces este también lo excluyo (o capaz incluyo el otro, veo).

Este paper tiene 2 partes: una sobre una red neuronal que no tiene nada relevante, y otra sobre el uso de robots como elemento motivacional. Esta última es la parte interesante...
Hicieron un estudio con un grupo de pibes donde a unos les dieron un entorno de python con un robot virtual en pantalla (Rur-ple) y a los otros les dieron el robot de Lego.","PyNXC (para programar en Python)
https://drive.google.com/file/d/1g4vP_9_UgMF4Ht1edigx53dId23o4YOd/view?usp=share_link",No aclara pero creo que apunta a primeros años de universidad,Lego NXT,Experimento con alumnos,"No, usaron PyNXC",Textual,Sí,No,No,No,Si
SI,10.1080/15391523.2013.10782614,"Let's dance the ""Robot Hokey-Pokey!"": Children's programming approaches and achievement throughout early cognitive development","Young learners today generate, express, and interact with sophisticated ideas using a range of digital tools to explore interactive stories, animations, computer games, and robotics. In recent years, new developmentally appropriate robotics kits have been entering early childhood classrooms. This paper presents a retrospective analysis of one study within a design-based robotics research program. We examine how patterns of cognition throughout early childhood relate to programming approaches and achievement in a robotics context. The findings lay a foundation for applying cognitive developmental theory to early technology education and inform the evaluation of the study's programming and robotics technologies and curriculum. © 2013 ISTE.",ar,2013-01-01,Journal of Research on Technology in Education,Cognitive development | Computer programming | Early childhood education | Robotics | STEM,2-s2.0-84897482407,,,Article,Flannery L.,60023143,Tufts University,Medford,United States,2,"Flannery, Louise P.;Bers, Marina Umaschi",55800325500;57203655429,60023143;60023143,2013,15391523,21100301445,19450818,Journal,46,1,,81-101,0,NSF,-735657,National Science Foundation,37,2013,https://www.tandfonline.com/doi/abs/10.1080/15391523.2013.10782614,https://drive.google.com/file/d/15lxEa9gUXcM-RbujhXraPOEHZfv3BNnR/view?usp=sharing,"La pregunta que trata de responder este paper es por qué hay tanta disparidad entre la capacidad de los pibes para resolver problemas de robótica.
""The purpose of this article is to explore a preliminary hypothesis that cognitive development, which drives dramatic changes in reasoning throughout early childhood, might also influence achievement in learning to program robots.""",CHERP (Creative Hybrid Environment for Robotic Programming),4.4 years to 6.6 years; mean age was 5.6 years,LEGO robotics construction kits,"Es un análisis retrospectivo de un ""experimento"" con pibes de jardín de infantes (Kindergarteners and preschoolers): ""Age at the time of each child's first session ranged from 4.4 years to 6.6 years; mean age was 5.6 years.""","No, entiendo que usaron CHERP así como venía. CHERP forma parte del TangibleK curriculum",Híbrido (tangible y visual),No,No,No,No,Si
SI,10.1016/j.actaastro.2012.09.006,Collaborative gaming and competition for CS-STEM education using SPHERES Zero Robotics,"There is widespread investment of resources in the fields of Computer Science, Science, Technology, Engineering, Mathematics (CS-STEM) education to improve STEM interests and skills. This paper addresses the goal of revolutionizing student education using collaborative gaming and competition, both in virtual simulation environments and on real hardware in space. The concept is demonstrated using the SPHERES Zero Robotics (ZR) Program which is a robotics programming competition. The robots are miniature satellites called SPHERES - an experimental test bed developed by the MIT SSL on the International Space Station (ISS) to test navigation, formation flight and control algorithms in microgravity. The participants compete to win a technically challenging game by programming their strategies into the SPHERES satellites, completely from a web browser. The programs are demonstrated in simulation, on ground hardware and then in a final competition when an astronaut runs the student software aboard the ISS. ZR had a pilot event in 2009 with 10 High School (HS) students, a nationwide pilot tournament in 2010 with over 200 HS students from 19 US states, a summer tournament in 2010 with ∼150 middle school students and an open-registration tournament in 2011 with over 1000 HS students from USA and Europe. The influence of collaboration was investigated by (1) building new web infrastructure and an Integrated Development Environment where intensive inter-participant collaboration is possible, (2) designing and programming a game to solve a relevant formation flight problem, collaborative in nature - and (3) structuring a tournament such that inter-team collaboration is mandated. This paper introduces the ZR web tools, assesses the educational value delivered by the program using space and games and evaluates the utility of collaborative gaming within this framework. There were three types of collaborations as variables - within matches (to achieve game objectives), inter-team alliances and unstructured communication on online forums. Simulation competition scores, website usage statistics and post-competition surveys are used to evaluate educational impact and the effect of collaboration. © 2012 Elsevier Ltd. All rights reserved.",ar,2013-01-01,Acta Astronautica,Collaborative gaming | Educational robotics | Programming competitions | Social science research,2-s2.0-84869099801,S0094576512003633,,Article,Nag S.,60022195,Massachusetts Institute of Technology,Cambridge,United States,3,"Nag, Sreeja;Katz, Jacob G.;Saenz-Otero, Alvar",37102206600;35847606900;6508302909,60022195;60022195;60022195,2013,945765,12372,,Journal,83,,,145-174,0,NASA,NNX10AJ90A,National Aeronautics and Space Administration,26,2013,https://www.sciencedirect.com/science/article/abs/pii/S0094576512003633?via%3Dihub,https://drive.google.com/file/d/1h0rtCPwCbYvrPSgDdB2bsx_3oCV1FVdF/view?usp=sharing,"Este paper describe una compentencia de programación y robótica muy interesante donde los pibes programan unos robots que primero prueban en un simulador y después los prueban en gravedad cero en la ISS.
Las herramientas de programación son web y aparentemente están pensadas para fomentar la colaboración (y gamificación??). En el paper se describen estas herramientas.","C
MATLAB? (lo mencionan al principio pero pareciera que la programación de los robots la hacen en C)
ZR graphical editor (una GUI de programación visual)","high school students or middle school
13 a 17",SPHERES,Describe las herramientas usadas en varias competencias de programación y robótica espacial,"Sí, armaron herramientas web para poder programar, probar en simulación, submitear programas, hacerlos competir automáticamente, etc.
Armaron también una interfaz gráfica (bloques) para los que no saben C ","Textual
Visual","No dice. Yo imagino que sí, pero pareciera que no.","No (usan un simulador para poder probar el código antes de pasarlo a los robots reales que están en la ISS, pero los robots posta sólo los usan en la última parte de la compentencia)",No,"No. Por lo que ví, el ACAACA es: los pibes submitean su programa, y luego corre la simulación, y después se arma como una animación que les permite ver el resultado. Ahí capaz tienen toda la info de variables y eso, pero no es en ""tiempo real""",Sí
SI,10.1016/j.compedu.2013.10.020,Computational thinking and tinkering: Exploration of an early childhood robotics curriculum,"By engaging in construction-based robotics activities, children as young as four can play to learn a range of concepts. The TangibleK Robotics Program paired developmentally appropriate computer programming and robotics tools with a constructionist curriculum designed to engage kindergarten children in learning computational thinking, robotics, programming, and problem-solving. This paper documents three kindergarten classrooms' exposure to computer programming concepts and explores learning outcomes. Results point to strengths of the curriculum and areas where further redesign of the curriculum and technologies would be appropriate. Overall, the study demonstrates that kindergartners were both interested in and able to learn many aspects of robotics, programming, and computational thinking with the TangibleK curriculum design. © 2013 Elsevier Ltd. All rights reserved.",ar,2014-03-01,Computers and Education,Early childhood | Elementary education | Interactive learning environments | Pedagogical issues | Programming | robotics | Teaching/learning strategies,2-s2.0-84889690867,S0360131513003059,,Article,Bers M.,60023143,Tufts University,Medford,United States,4,"Bers, Marina Umaschi;Flannery, Louise;Kazakoff, Elizabeth R.;Sullivan, Amanda",57203655429;55800325500;55388494500;55214724100,60023143;60023143;60023143;60023143,March 2014,3601315,17645,,Journal,72,,,145-157,0,NSF,DRL-0735657,National Science Foundation,373,2014,https://www.sciencedirect.com/science/article/abs/pii/S0360131513003059?via%3Dihub,https://drive.google.com/file/d/1YRReafoxjPGTD8kw8b0CeuusWpNAoENc/view?usp=sharing,"Revisar, no sé si menciona alguna herramienta de programación

Usan el lenguaje CHERP (Creative Hybrid Environment for Robotics Programming), no lo conozco...
Supuestamente es un lenguaje tangible Y gráfico. Esto es importante.

""CHERP is a hybrid tangible and graphical computer language designed to provide young children with an engaging introduction to computer programming in a developmentally appropriate way. The software allows children to create programs to control their robots from tangible wooden blocks and/or graphical, on-screen icons. The design of CHERP avoids the technical and syntax-related challenges of text-based programming languages. Furthermore, the hybrid interface allows children to choose the interface that best suits their changing preferences as physical abilitites, perceived social appeal, and the level of challenge of the activity at hand evolve (..) because both tangible and graphical interfaces can represent the same concepts""",CHERP,"kindergarten (4.9–6.5 years, and their average age at the start of the curriculum was 5.7 years old)",Lego robotics kits (no especifican cuál),Experimento con alumnos,No,Híbrido (tangible y visual),,,"No.
En el paper se menciona debugging pero refiriéndose al concepto de forma general como un mecanismo para resolver problemas, no a la capacidad del lenguaje...",,
SI,10.5772/58249,LEGO-based robotics in higher education: 15 years of student creativity,"Our goal in this article is to reflect on the role LEGO robotics has played in college engineering education over the last 15 years, starting with the introduction of the RCX in 1998 and ending with the introduction of the EV3 in 2013. By combining a modular computer programming language with a modular building platform, LEGO Education has allowed students (of all ages) to become active leaders in their own education as they build everything from animals for a robotic zoo to robots that play children's games. Most importantly, it allows all students to develop different solutions to the same problem to provide a learning community. We look first at how the recent developments in the learning sciences can help in promoting student learning in robotics. We then share four case studies of successful college-level implementations that build on these developments. © 2014 The Author(s).",ar,2014-02-26,International Journal of Advanced Robotic Systems,Constructionism | Educational Robotics | LEGO Robotics | Student-led Learning,2-s2.0-84897490466,,,Article,Danahy E.,60023143;60021508;60003892;60001769,"Tufts University;University of Notre Dame;Arizona State University;University of Nevada, Reno",Medford;Notre Dame;Tempe;Reno,United States;United States;United States;United States,6,"Danahy, Ethan;Wang, Eric;Brockman, Jay;Carberry, Adam;Shapiro, Ben;Rogers, Chris B.",9038628400;7403414587;7006525601;23093156400;56096411400;7402364162,60023143;60001769;60021508;60003892;60023143;60023143,26 February 2014,17298806,144749,17298814,Journal,11,1,27,,1,,undefined,,56,2014,https://journals.sagepub.com/doi/10.5772/58249,https://drive.google.com/file/d/1lIdU79qngGUEtGRgM3XfwRLmMJFCdj0a/view?usp=sharing,"Es una perspectiva histórica del uso de robots de lego desde el Control Lab hasta el EV3.
Presentan 4 casos de estudio usando el software en universidades.  No cuenta como experimento para mí, solo cuentan las experiencias","LabView y LabView Education (ControlLab)
RoboLab (ControlLab, RCX y NXT) 
NXT-G (NXT)
Mencionan también RobotC y NQC","Caso 1: First year students (university)
Caso 2: freshmen level
Caso 3: no me quedó claro pero creo que es 1ro y 2do año
Caso 4: first year","Lego ControlLab, RCX, NXT, y EV3","Revisión histórica y presentación de casos con estudiantes (no cuenta como experimento porque no están midiendo nada ni proponiendo hipótesis, solo cuentan los casos)",No,"Visual
Textual",Del RCX en adelante sí,No,No,"Limitada, describen el uso de los robots de lego como data loggers y visualizando los sensores en pantalla. No estoy seguro de si calificarlo con Sí o No. ACAACA revisar los productos de LEGO y decidir si cuenta como monitoring o no...",Sí
SI,10.5755/j01.eee.20.1.6169,Reflections on using robots and visual programming environments for project-based teaching,"Visual programming languages provide a more natural approach to specifying software/hardware systems with complex behaviour such as robots. They are especially important in education because they do not require formal knowledge of programming language syntax and are attractive to users. We present an analysis and comparison of two visual programming environments, Lego NXT-G and Microsoft Visual Programming Language, based on the cognitive and usability requirements, evaluate their application in roboticsbased Computer Science education, identify main problems and propose solutions for using visual programming languages in the Internet-of-Things domain.",ar,2014-01-20,Elektronika ir Elektrotechnika,Electronic learning | Graphical models | Programming environments | Robot programming,2-s2.0-84892414586,,,Article,Plauska I.,60042282,Kaunas University of Technology,Kaunas,Lithuania,3,"Plauska, I.;Lukas, R.;Damasevicius, R.",55365547800;56001457400;6603451290,60042282;60042282;60042282,2014,13921215,19900193212,,Journal,20,1,,71-74,1,,undefined,,5,2014,https://eejournal.ktu.lt/index.php/elt/article/view/6169,https://drive.google.com/file/d/1ztNK7t8Zr-aLdrhPuw4NRzhiyDR07I1S/view?usp=sharing,"Es un ""análisis y comparación"" de 2 entornos de programación visual: Lego NXT-G y Microsoft Visual Programming Language.
Hicieron un curso con alumnos de ""4th year bachelor"" en el que podían elegir cualquiera de las 2 opciones visuales o Arduino C. En cada caso usaban un robot diferente (eso podría influir en la decisión?).

Las conclusiones son interesantes para poner respecto de los problemas de los lenguajes visuales y podría servirme para justificar por qué soportar un lenguaje híbrido visual/textual. En resumen: problema de scalability (un programa grande ocupa mucha pantalla); readability (relacionado con el problema anterior, algunos pibes ven el lenguaje visual más difícil de leer, también puede ser que usaron lenguajes muy icónicos); y the speed of input (siempre gana el textual).","Lego NXT-G (es el lenguaje oficial de lego NXT)
Microsoft Visual Programming Language (MVPL)
Arduino C",El curso (experimento?) se hizo con 4th year bachelor students.,"Para NXT-G usaron Lego NXT.
Para MVPL usaron: Arduino 4WD Mobile Platform.
Después también usaron un lenguaje textual (Arduino C): Lynxmotion 5LA Robotic Arm","Comparación de herramientas visuales
Experiencia con alumnos durante un curso",No,"Visual
Textual","Sí en el caso NXT-G, no sé en MVPL, y no en Arduino C.
Igual en ningún momento mencionan este tema en el paper, y por los temas cubiertos por el curso no creo que entre.
En MVPL Sí (""As a result VPL is well suited to programming a variety of concurrent or distributed processing scenarios"")",No,No,"No?
No sé el caso de MVPL, en NXT-G es medio limitado según recuerdo, y en Arduino C lo que tenés es el serial monitor y plotter.",Sí
SI,10.3233/TAD-140404,Programming and controlling robots using scanning on a speech generating communication device: A case study,"Background:Programming Lego Mindstorms robots is used for problem-based learning in science. Children with physical disabilities and complex communication needs may be limited in their ability to participate. Objectives:To involve a 12 year old student with cerebral palsy in programming Lego robots in the classroom by using her speech generating device (SGD). To evaluate the effectiveness and efficiency of using the two-switch scanning mode on the SGD for programming. Methods:The participant tested classmates’ robot programs using infrared on her SGD, and she accessed the programming software via a customized mouse manipulation page. Her participation in programming activities was measured with Goal Attainment Scaling, descriptive observations, and measures of effectiveness and efficiency. Results:The participant progressed from observing classmates to independently testing robot programs in the classroom. In individualized sessions she wrote a simple program, with support. Limitations in scanning led to unwanted cursor movements and long task times. Conclusions:The participant actively participated in the robot programming activity. Actually programming was better suited to individual instruction because of her scanning inefficiency. Using the SGD for robot control affords the potential to also discuss concepts, but this novice user did not yet have the skills to utilize this aspect.",ar,2014-01-01,Technology and Disability,,2-s2.0-84940933703,,,Article,Adams K.,,University of Alberta;Glenrose Rehabilitation Hospital,Edmonton;Edmonton,Canada;Canada,,,,,2014,10554181,14446,1878643X,Journal,26,1,,49-59,0,,,,7,2014,https://content.iospress.com/articles/technology-and-disability/tad00404,https://drive.google.com/file/d/1bi3vtwOKUbYo3O_CUbUtvmzkNEACZ-ZA/view?usp=share_link,"Describe un caso de estudio de un alumno con discapacidad que usó a ""speech generating device"" para programar el LEGO",RoboLab,"12 años

entre 12 y 13",Lego RCX,Experiencia con un alumno (una chica discapacitada),No,,,,,,
SI,10.1007/s10798-014-9287-7,"“I want my robot to look for food”: Comparing Kindergartner’s programming comprehension using tangible, graphic, and hybrid user interfaces","In recent years, educational robotics has become an increasingly popular research area. However, limited studies have focused on differentiated learning outcomes based on type of programming interface. This study aims to explore how successfully young children master foundational programming concepts based on the robotics user interface (tangible, graphical, hybrid) taught in their curriculum. Thirty-five Kindergarten students participated in a 9-week robotics curriculum using the LEGO WeDo robotics construction kit and the Creative Hybrid Environment for Robotic Programming (CHERP) programming language. A mixed methods data collection approach was employed, including qualitative observational data from the classrooms, as well as quantitative mid- and post-test assessments of students’ programming knowledge using CHERP. The findings show little association between user interface and programming comprehension, although there may be an order-affect when introducing user interfaces. Implications for best practices when introducing programming in early childhood settings are discussed.",ar,2015-08-01,International Journal of Technology and Design Education,Early childhood education | Kindergarten | Robotics | Tangible programming | User interfaces for education,2-s2.0-84957961553,,,Article,Strawhacker A.,60023143,Tufts University,Medford,United States,2,"Strawhacker, Amanda;Bers, Marina U.",55800719700;57203655429,60023143;60023143,1 August 2015,9577572,21389,15731804,Journal,25,3,,293-319,0,NSF,DRL- 111897,National Science Foundation,60,2015,https://link.springer.com/article/10.1007%2Fs10798-014-9287-7,https://drive.google.com/file/d/1tXJJGeuVkK0pH6rQoX88Xxi79PSaUA76/view?usp=sharing,"Interesante que comparan la efectividad de la robótica educativa dependiendo de la ""interfaz de programación"" (tangible, graphic, y hybrid). No sé a qué llaman hybrid, será a la mezcla entre tangible y gráfica? Supongo que sí porque los sujetos son chicos de jardín...",CHERP,kindergarten (entre 5 y 6 años),Lego WeDo,Experimento con alumnos,No,Híbrido (tangible y visual),No,No,No,No,Sí
SI,10.1109/RITA.2015.2452692,MODEBOTS: Environment for Programming Robots for Children between the Ages of 4 and 6,"Learning how to program in early age helps children to develop some capabilities as logical thinking, problem solving, and creativity. Incorporating robotics in programming children can help to learn in a concrete and funny way, collaborating with each other. The research project presented in this paper describes the first prototype that implements a programming environment for robots using mobile devices, for children in early childhood - 4 to 6 years old. This prototype is fully functional and allows Bluetooth communication one by one. We expect that our research will contribute to human-computer interface field, providing a new nontraditional interface to support the learning process of programming in preschoolers.",ar,2015-08-01,Revista Iberoamericana de Tecnologias del Aprendizaje,early childhood | first prototype | mobile devices | programming environment | programming learning process | robotics,2-s2.0-84946219634,,,Article,Ramirez-Benavides K.,60071929,Universidad de Costa Rica,San Jose,Costa Rica,2,"Ramirez-Benavides, Kryscia;Guerrero, Luis A.",56943477500;7006029401,60071929;60071929,1 August 2015,,19700201532,19328540,Journal,10,3,7155494,152-159,0,,undefined,,6,2015,https://ieeexplore.ieee.org/document/7155494,https://drive.google.com/file/d/1f_HgOI4bsMrpuRdFHbl1qXR2M0cc9zt6/view?usp=sharing,"""The research project presented in this paper describes the first prototype that implements a programming environment for robots using mobile devices, for children in early childhood—4 to 6 years old. This prototype is fully functional and allows Bluetooth communication one by one""",MODEBOTS,entre 4 y 6 años,Lego NXT,Presenta una herramienta para programar robots con dispositivos móbiles,Sí,Visual (iconográfico),No,No,No,No,"No.
Por lo que entendí, programan el robot desde el cel y luego el cel manda los comandos al robot via bluetooth. En el robot tienen un firmware que interpreta los comandos y los ejecuta"
SI,10.1016/j.cag.2015.04.008,Design exploration through interactive prototypes using sensors and microcontrollers,"Smart products, adaptive designs, and intelligent spaces are in the forefront of current artistic discourse. Regardless of one's field - design or science - interaction design projects often benefit from efficient production methods for prototypes for beginners. This paper presents an educational case study and its pedagogical lessons from a project-based course for beginning design students to produce interactive prototypes using sensors, actuators, and microcontrollers. A series of short project-based modules using scaffolding of code templates in conjunction with toolkits for physical prototypes were introduced in order to learn fundamental technical knowledge and skills in the first half; then more open-ended investigation of project-based individual creative final projects followed. Each module can be completed in one day with instructions on prototyping and programming in pairs, allowing students to build and see abstract logic in programming through the physical behaviors of prototypes without overpowering student creativity and motivation. Students can reinterpret given materials and modify them to produce custom tools that can realize their original project goals. This strategy allows students to acquire extensible knowledge that does not rely on higher-level software functions or specialized but inflexible plug-ins. This paper is an extended and revised version of a paper presented at the EUROGRAPHICS 2014 conference [30].",ar,2015-06-23,Computers and Graphics (Pergamon),Computer uses in education | Digital fabrication | Physical computing | Smart products,2-s2.0-84935010857,S0097849315000473,,Article,Narahara T.,60022904,New Jersey Institute of Technology,Newark,United States,1,"Narahara, Taro",55132284100,60022904,23 June 2015,978493,25028,,Journal,50,,,25-35,0,,undefined,,2,2015,https://www.sciencedirect.com/science/article/abs/pii/S0097849315000473?via%3Dihub,https://drive.google.com/file/d/1XJGqhLxr0mgs4WwzqBk1zIG5j787azK0/view?usp=sharing,"Revisar porque no se si proponen algún entorno específico o programan en C directamente.
Los proyectos que muestran están muy copados igual, probablemente vale la pena leerlo.
En el paper indican que usan Arduino y Processing. Yo creo que cuenta Arduino como herramienta de programación para robótica educativa. 
No sé si la experiencia cuenta como robótica educativa. O sea, técnicamente no están aprendiendo robótica sino arte + diseño, en ese caso debería entrar...
Bueno, lo meto y después vemos.",Arduino C y Processing,"undergraduate course (2nd, 3rd, and 4th year but mostly 3rd)",Arduino microcontrollers (ACAACA which ones?),Describe experiencia con alumnos (no experimento),No,Textual,No,No,No,No,Sí
SI,10.17485/ijst/2015/v8i26/80723,Learning effects of pedagogical robots with programming in elementary school environments in Korea,"The purpose of this study was to develop systematic and effective robot-based learning with programming to improve learner’s creativity and understand class satisfaction at the elementary school level. In the study, an instructional strategy was developed to help learners express learning contents including Korean, mathematics, and music in the movement of the educational robot. The robot was developed by a telecommunication company in Korea and Scratch-type programming was adopted for the learners to program the robot. A total of 27 third-grade students at an elementary school in Korea participated in the treatment for 12 weeks. In the results, two sub categories of creativity were found to be significantly improved and the class satisfaction was relatively high. Suggestions were made based on the results.",ar,2015-01-01,Indian Journal of Science and Technology,,2-s2.0-84949949988,,,Article,Park I.,,Korea University,Seoul,South Korea,,,,,2015,9746846,21100201522,9745645,Journal,8,26,IPL0479,,1,,,,13,2015,https://indjst.org/articles/learning-effects-of-pedagogical-robots-with-programming-in-elementary-school-environments-in-korea,https://drive.google.com/file/d/1SEJjBoO4geE3tQ9g-wTNP_1UBJiEHAr_/view?usp=share_link,Hicieron un estudio con alumnos,Scratch,"""attended “A” elementary school
located in Seoul, Korea.""

entre 8 y 13 (aprox)",Robot comercial,Experiencia con alumnos,No,,,,,,
SI,10.1007/s00779-014-0774-3,Evaluating children performance with graphical and tangible robot programming tools,"This paper presents a cross-age study exploring children’s performance on robot introductory programming activities with one tangible and one isomorphic graphical system. Both subsystems are parts of an innovative system, namely the PROTEAS kit. The tangible subsystem consists of cube-shaped blocks that represent simple and more advanced programming structures. Users may interconnect the cubic-shaped commands and so create the robot programming code. The graphical subsystem presents onscreen an isomorphic to the tangible programming space. Children (N = 109) of five different aged groups were let to interact in pairs with the two operationally equivalent programming subsystems with the scope to program a NXT Lego robot. Three variables associated with children performance upon tasks and four variables related with performance during free interaction were studied. Data analysis based on computer logs and video recordings showed that children produced fewer errors, made more effective debugging and younger children in particular needed less time to accomplish the robot programming tasks with the tangible subsystem. Moreover, during free interaction, elder children were more engaged, created more complicated programs and explored different commands and parameters more actively in the tangible case. Finally, interpretation of the findings is provided and the advantages of tangible user interfaces in children’s introductory programming are discussed.",ar,2015-01-01,Personal and Ubiquitous Computing,Computer science education | Educational robot | Educational technology | Introductory programming | Tangible programming | Tangible user interface,2-s2.0-84944673528,,,Article,Sapounidis T.,60015331,Aristotle University of Thessaloniki,Thessaloniki,Greece,3,"Sapounidis, Theodosios;Demetriadis, Stavros;Stamelos, Ioannis",54397561000;6506681303;6604041235,60015331;60015331;60015331,1 January 2015,16174909,22315,,Journal,19,1,,225-237,0,,undefined,,41,2015,https://link.springer.com/article/10.1007%2Fs00779-014-0774-3,https://drive.google.com/file/d/1uOSvdqaVBjtM1n9lUbKXdLDJmoMMEEZW/view?usp=sharing,,"PROTEAS kit
""PROTEAS (PROgramming TangiblE Activity System) is an assembly including one graphical (V-ProRob) and two tangible robot programming tools (T_Butterfly) [46] and (T-ProRob).""","De 6 a 12. Hicieron un experimento con chicos de muchas edades y después agruparon por edad para comparar (6-7, 7-8, 9-10, 10-11, 11-12)",Lego NXT,Experimento con alumnos,"Sí, entiendo que desarrollaron el lenguaje para la investigación (""To reduce the cost and simultaneously achieve high portability, we developed an active tangible programming language based on reliable microcontrollers and low cost D9 and D25 connectors"")",Híbrido (tangible y visual),"No.
Si bien el Lego Nxt soporta multitasking, ninguno de los lenguajes presentados (ya sea visual o tangible) parecen aprovecharlo",No,"No.
Mencionan debugging en forma general, no como feature del lenguaje","Limitada.
Mencionan la importancia de ver los efectos del programa de forma inmediata resaltando el hecho de que el robot y el programa (tangible) están en el mismo espacio físico. Pero la naturaleza del lenguaje tangible hace difícil el monitoreo de variables y sensores... lo que hicieron es aprovechar la naturaleza bidireccional de la comunicación bluetooth, de forma que si el robot chequea una condición puede informar luego a los bloques si la condición fue verdadera o falsa y el bloque if prende o apaga una luz en consecuencia.",Sí
SI,10.1109/MRA.2016.2533002,Teaching Introductory Robotics Programming: Learning to Program with National Instruments' LabVIEW,"This article considers strategies for teaching beginning students how to program mobile robots for autonomous operation. Many high school and beginning undergraduate students desire to learn about robotics, but they may lack the required knowledge. Experiences from an undergraduate course are described to illustrate the robot, its programming environment, software design, and algorithms, which faculty can use to guide beginning students from a place of no prior experience to writing impressive, autonomous mobile-robot programs. Autonomous algorithms that perform well and are appropriate for beginning students, including a new wall-following algorithm, are reviewed.",ar,2016-06-01,IEEE Robotics and Automation Magazine,,2-s2.0-84968928092,,,Article,Bower T.,60018348,Kansas State University Polytechnic Campus,Salina,United States,1,"Bower, Timothy",23093098800,60018348,June 2016,10709932,18027,,Journal,23,2,7469301,67-73,0,,undefined,,8,2016,https://ieeexplore.ieee.org/document/7469301,https://drive.google.com/file/d/11pCLtx9SIUifqF4xio89mi_MlAlYvBeZ/view?usp=sharing,,LabView,lower-level undergraduate students,"LabVIEW Robotics Starter Kit, also called the DaNI Robot.",Experiencia con alumnos (no sé si llamarlo experimento),No,Visual (data flow),"Sí.
El paper menciona que el modelo de data-flow de LabView implica que un nodo se ejecuta cuando todas sus terminales de input están disponibles, lo cual implica una secuencia. Sin embargo, si hay caminos paralelos el orden de ejecución no está especificado y se pueden considerar como threads independientes. Dice también que LabView incluye ""capabilities"" para controlar el orded de ejecución.","Sí? No estoy seguro, en el paper no lo mencionan explícitamente.","Sí.
Según la wiki de labview: https://labviewwiki.org/wiki/Breakpoints","Sí.
Mencionan que en el modo ""interactivo"" de LabView el robot está conectado con la computadora y los datos del robot se pueden ver desde la compu.","Sí.
Además del modo interactivo, LabView soporta bajar el programa al robot y ejecutarlo de forma autónoma."
SI,10.1007/s10798-015-9304-5,Robotics in the early childhood classroom: learning outcomes from an 8-week robotics curriculum in pre-kindergarten through second grade,"In recent years there has been an increasing focus on the missing “T” of technology and “E” of engineering in early childhood STEM (science, technology, engineering, mathematics) curricula. Robotics offers a playful and tangible way for children to engage with both T and E concepts during their foundational early childhood years. This study looks at N = 60 children in pre-kindergarten through second grade who completed an 8-week robotics curriculum in their classrooms using the KIWI robotics kit combined with a tangible programming language. Children were assessed on their knowledge of foundational robotics and programming concepts upon completion of the curriculum. Results show that beginning in pre-kindergarten, children were able to master basic robotics and programming skills, while the older children were able to master increasingly complex concepts using the same robotics kit in the same amount of time. Implications for developmentally appropriate design of technology, as well as structure and pace of robotics curricula for young children are addressed.",ar,2016-02-01,International Journal of Technology and Design Education,Early childhood | Education | Engineering | Programming | Robotics,2-s2.0-84954383441,,,Article,Sullivan A.,60023143,Tufts University,Medford,United States,2,"Sullivan, Amanda;Bers, Marina Umaschi",55214724100;57203655429,60023143;60023143,1 February 2016,9577572,21389,15731804,Journal,26,1,,3-20,0,,undefined,,139,2016,https://link.springer.com/article/10.1007%2Fs10798-015-9304-5,https://drive.google.com/file/d/1SAeRKfeqXi-3wKv1_phh8XJZSEcuy59d/view?usp=sharing,"Programación tangible, no sé si más...",CHERP,"A sample of N = 60 children in pre-kindergarten through 2nd grade participated in this
research (N = 15 pre-kindergarteners, N = 18 kindergarteners, N = 16 first graders,
N = 11 second graders)",Kiwi,Experimento con alumnos,No,"Tangible (aunque CHERP es híbrido, acá usaron sólo los bloques tangibles)",,,,,
SI,10.1155/2016/1714350,A Mobile Application That Allows Children in the Early Childhood to Program Robots,"Children born in the Information Age are digital natives; this characteristic should be exploited to improve the learning process through the use of technology. This paper addresses the design, construction, and evaluation process of TITIBOTS, a programming assistance tool for mobile devices that allows children in the early childhood to create programs and execute them using robots. We present the results of using TITIBOTS in different scenarios with children between 4 and 6 years old. The insight obtained in the development and evaluation of the tool could be useful when creating applications for children in the early childhood. The results were promising; children liked the application and were willing to continue using it to program robots to solve specific tasks, developing the skills of the 21st century.",ar,2016-01-01,Mobile Information Systems,,2-s2.0-85006136272,,,Article,Ramírez-Benavides K.,60071929,Universidad de Costa Rica,San Jose,Costa Rica,3,"Ramírez-Benavides, Kryscia;López, Gustavo;Guerrero, Luis A.",56943477500;56029419400;7006029401,60071929;60071929;60071929,2016,1574017X,19700174653,1875905X,Journal,2016,,1714350,,1,,undefined,,8,2016,https://www.hindawi.com/journals/misy/2016/1714350/,https://drive.google.com/file/d/18m2wn-nv6nX68ncsdXrSCX5-WPFtUUjt/view?usp=sharing,Desarrollaron un entorno de programación visual para Android y lo probaron con pibes.,TITIBOTS (a programming assistance tool for mobile devices that allows children in the early childhood to create programs and execute them using robots),entre 4 y 6 años,Lego NXT,Presenta la herramienta y describe una experiencia con alumnos,Sí,Visual (icon-based),No,No,No,No,"No.
Por lo que leí, el entorno manda los comandos via bluetooth y el programa en el robot los ejecuta"
SI,10.20965/jrm.2017.p0980,Development of a programming teaching-aid robot with intuitive motion instruction set,"A robot that consists of a compact disc (CD) and an embedded microcomputer has been developed as a robotics learning tool for elementary and junior high school students. The students can program the robot to draw a variety of shapes by placing a pen in the center hole of the CD. As the movement track of the robot can be recorded, the students can preserve their devised program execution results. In addition, intuitive instructions can be used to control the robot. This allows to input the program by operating several push-button switches. The program instructions can be viewed on the robot’s 8 LEDs-display interface. This robot is a unique teaching tool, which can be used to learn the mechanism of the robot composed of sensors, actuators, and a computer, without using a personal computer.",ar,2017-12-01,Journal of Robotics and Mechatronics,Computer education | Machine language | Measurement and control | Programming education | Teaching-aid robot,2-s2.0-85038836328,,,Article,Noguchi T.,60194542;60014729,"National Institute of Technology, Kushiro College;Muroran Institute of Technology",Kushiro;Muroran,Japan;Japan,4,"Noguchi, Takafumi;Kajiwara, Hidekazu;Chida, Kazunori;Inamori, Sakae",57203331650;36011713700;57206546752;57200033824,60194542;60014729;60194542;60194542,December 2017,9153942,21100197345,18838049,Journal,29,6,,980-991,0,,undefined,,4,2017,https://www.fujipress.jp/jrm/rb/robot002900060980/,https://drive.google.com/file/d/1DKLUoNJyJ5tycCD4qwwKyl2QeXM-vjuI/view?usp=sharing,"Revisar qué herramienta de programación proponen.
No sé qué significa ""intuitive motion instruction set""

Ah por lo visto la programación es como con Bee-bot, con botones en el robot mismo. A diferencia de bee-bot este parece mucho más complejo, tenés como una serie de leds que te indican la instrucción a cargar en la memoria del robot:
""Program input and execution can be performed by operating the two slide switches and five push-button switches on the computer board: the two slide switches are located at the lower right side of the computer board (at the robot’s back side) and the two push-button switches 1 and 2 are set at the back of the two slide switches, as shown in Fig. 2.""

Me copa el diseño del robot usando un cd y una placa circular. El agujero que deja el cd es útil para meter un sharpie.",No tiene herramienta de programación (es una programación estilo bee-bot),"""elementary school students""
""elemen- tary schools, junior high schools, engineering institutions for higher education, and for training new employees""",Es un robot personalizado (con un PIC18F2523),"Describen la implementación del robot.
Describen también algunas experiencias con alumnos de diferentes edades",Sí,estilo Bee-bot,No,No,No,No,Sí
SI,10.1166/asl.2017.10252,Early childhood educational robotic system (C-Block): A design methodology,"Critical thinking is important in developing creative and innovative minds. Project-based learning (PBL) curriculum is introduced for students to allow active participation which involves scientific inquiry and application of mathematics in the context of technological designing or problem-solving. Programmable Tangible Blocks Robotic System for Early Childhood Education (C-Block) is proposed as a tool for children aged 4 to 7 to engage in PBL activity. C-Block is a kit which comprises of instruction blocks, programming mat and a mobile robot. This paper is aimed to describe the design methodology of the C-Block kits. The first prototype of the programming mat was fabricated and the results is discussed.",ar,2017-11-01,Advanced Science Letters,Block programming | C-Block | Early childhood | Educational robotic system,2-s2.0-85040860192,,,Article,Mariappan M.,60017880,Universiti Malaysia Sabah,Kota Kinabalu,Malaysia,4,"Mariappan, Muralindran;Sing, Jong Chia;Nadarajan, Manimehala;Wee, Choo Chee",35810741900;57150708500;56035545400;36019507900,60017880;60017880;60017880;60017880,November 2017,19366612,19700181106,19367317,Journal,23,11,,11206-11210,0,UMS,undefined,Universiti Malaysia Sabah,0,2017,https://www.ingentaconnect.com/content/asp/asl/2017/00000023/00000011/art00169;jsessionid=758i968aju3dj.x-ic-live-03,https://drive.google.com/file/d/1ADG6xpfR1CbSBzXM4ITpWRNKxj782n7B/view?usp=share_link,"Describen el diseño e implementación de un set de programación tangible compuesto por una serie de bloques (instrucciones), un controlador principal, y un robot.",C-Block,"""above 3 years old""
""early childhood""
No aclaran un rango preciso pero siendo una interfaz de programación tangible, se puede suponer que es para chicos chicos (aunque algunos de los bloques avanzados se me hacen medio complicados para un pibe de 3 años)",El robot de C-Block (no dicen qué características tiene excepto que es un robot móbil),Presentación y propuesta de entorno de programación tangible (C-Block),Sí,Tangible,"No, pero no aclara","No, pero no aclara","No, pero no aclara","No, pero no aclara",Sí
SI,10.1109/TLT.2016.2627565,Web environment for programming and control of a mobile robot in a remote laboratory,"Remote robotics laboratories have been successfully used for engineering education. However, few of them use mobile robots to to teach computer science. This article describes a mobile robot Control and Programming Environment (CPE) and its pedagogical applications. The system comprises a remote laboratory for robotics, an online programming tool, and a virtual learning environment. It allows experiments with a mobile robot to be carried out, tested and validated remotely, using a simple graphic interface via web browser, without additional software installation on the user's computer. Students can control and manipulate the robot with simple commands without worrying about hardware details or use C/C)) programming language to develop complex programs. The robot has been built with inexpensive components and has sensors that enable its use in several experiments. CPE can be used in contextualized teaching in various subjects of computer science, both in class and at distance. A practical application of the whole system using CPE, introducing programming concepts, is also described in this paper. The initial assessment of the environment as an educational tool shows high levels of interest among our students, an improvement in their academic scores, and potential for application in the context of computing education, when properly introduced as a learning tool.",ar,2017-10-01,IEEE Transactions on Learning Technologies,Bistance learning | Computing education | Mobile robots | Online programming | Remote laboratories,2-s2.0-85044304242,,,Article,Dos Santos Lopes M.S.,60013710;112612440,Universidade Federal da Bahia;State University of Southwest Bahia (UESB),Salvador;Salvador,Brazil;Brazil,5,"Dos Santos Lopes, Maísa Soares;Gomes, Iago Pacheco;Trindade, Roque M.P.;Da Silva, Alzira F.;Lima, Antonio C.De C.",57201312434;57201314844;36807201600;57213535474;24328775100,112612440;112612440;112612440;112612440;60013710,October-December 2017,19391382,19700167026,,Journal,10,4,,526-531,0,,undefined,,16,2017,https://ieeexplore.ieee.org/document/7740908,https://drive.google.com/file/d/1XEU3rppIbY94k6B7is5Z7wnvI_0alJ5_/view?usp=sharing,Describe un laboratorio remoto de robótica educativa? Parece interesante para el futuro de mendieta,Arduino C,"""The students’ age ranged from 17 to 24 years""","Arduino 
""An Arduino Mega 2560 microcontroller is responsible for the control of the robot.""","Presentación de entorno de programación y control de un laboratorio remoto.
Experiencia con alumnos en un workshop.",Sí (armaron un entorno pero la programación se hace con el lenguaje de Arduino y se basa en el Arduino IDE),Textual,,,,,
SI,10.1016/j.compedu.2017.03.001,Assessing elementary students’ computational thinking in everyday reasoning and robotics programming,"Based on a framework of computational thinking (CT) adapted from Computer Science Teacher Association's standards, an instrument was developed to assess fifth grade students' CT. The items were contextualized in two types of CT application (coding in robotics and reasoning of everyday events). The instrument was administered as a pre and post measure in an elementary school where a new humanoid robotics curriculum was adopted by their fifth grade. Results show that the instrument has good psychometric properties and has the potential to reveal student learning challenges and growth in terms of CT.",ar,2017-06-01,Computers and Education,Computational thinking | Evaluation methodologies | Programming and programming languages | Robotics education,2-s2.0-85014423231,S0360131517300490,,Article,Chen G.,60029251;60025488;60014966,University of Miami;The University of Utah;Peking University,Coral Gables;Salt Lake City;Beijing,United States;United States;China,6,"Chen, Guanhua;Shen, Ji;Barth-Cohen, Lauren;Jiang, Shiyan;Huang, Xiaoting;Eltoukhy, Moataz",57226068797;55903576800;36994439400;57191191820;55787259400;50461249000,60029251;60029251;60025488;60029251;60014966;60029251,1 June 2017,3601315,17645,,Journal,109,,,162-175,1,,undefined,,141,2017,https://www.sciencedirect.com/science/article/abs/pii/S0360131517300490?via%3Dihub,https://drive.google.com/file/d/1RFnD3hF1Dta9wD94ZabJCl6keFPj6tK-/view?usp=sharing,"Describen una experiencia con alumnos usando un robot humanoide. Eran muchos pibes y 1 sólo robot, por lo que tenían que ir turnándose para testear los programas. Ah, y la programación era visual durante las actividades del curso pero en el pre-test los separaron random en 2 grupos y a un grupo le dieron preguntas con una sintaxis visual y al otro textual (creo que entendí eso)

""During the session, each student worked on his or her own laptop using the visual programming platform. And due to the cost, only one physical robot was used. Thus, students had to write the program and test it on a virtual robot first, and then take turns to run their tested programs on the physical robot. Except for the initial and final sessions, our curriculum was organized around specific topics that are common to humanoid robotics, such as basic actions (say words, waving hands, sit down, etc.), voice recognition, tactile sensors, walking motion, and animation. Furthermore, several key computer science concepts were introduced along the way, such as algorithms, variables, conditionals, loops, serial execution, and multitasking.""

No me queda muy claro el paper, como que se concentra en los pre/post test pero no describen mucho la actividad en sí.

Claro, en realidad el paper NO es sobre la experiencia en sí sino sobre el instrumento para hacer la medición del ""computational thinking"" bla bla bla",El lenguaje del NAO (no lo conozco),Fifth grade students,NAO by Aldebaran robotics,Experimento con alumnos,No,Visual (nodos?),Sí,,,,
SI,10.1016/j.chb.2017.01.018,Educational Robotics intervention on Executive Functions in preschool children: A pilot study,"Educational Robotics (ER) is known for its effects on academic achievement and scientific concepts. Few studies have demonstrated ER effects on cognitive skills and no evidence exists on the role of ER in promoting Executive Functions, key elements in early school readiness and cognitive milestone achievements. The aim of this study was to evaluate, for the first time, the short-term effects in Preschool children of an intensive ER training on Executive Functions. A sample of 12 children (age range: 5–6 years) took part to an intensive ER-Lab for 13 sessions (6 weeks) by using a bee-shaped robot, called Bee-Bot®. The children were tested three times (baseline, pre and post ER-Lab) with a neuropsychological battery. The main finding was a significant improvement in both visuo-spatial working memory and inhibition skills after the ER-Lab period, with a significant effect also on robot programming skills. These data provide scientific support to the hypothesis that ER is suitable in progressively improving abilities in planning and controlling complex tasks in early childhood, fostering executive functions development.",ar,2017-06-01,Computers in Human Behavior,Education | Educational Robotics | Evaluation methodologies | Interactive learning environments,2-s2.0-85010886903,S0747563217300195,,Article,Di Lieto M.,60083545;60028868;60028039,IRCCS Fondazione Stella Maris;Università di Pisa;Sant'Anna Scuola Universitaria Superiore Pisa,San Miniato;Pisa;Pisa,Italy;Italy;Italy,11,"Di Lieto, Maria Chiara;Inguaggiato, Emanuela;Castro, Emanuela;Cecchi, Francesca;Cioni, Giovanni;Dell'Omo, Marta;Laschi, Cecilia;Pecini, Chiara;Santerini, Giacomo;Sgandurra, Giuseppina;Dario, Paolo",57076709800;56033320900;57193112531;26422839700;7005561897;57193114105;6603776567;7801368517;57193110974;16025762200;36040468400,60083545;60028039;60028039;60028039;60083545-60028868;60028868;60028039;60083545;60028039;60083545;60028039,1 June 2017,7475632,19419,,Journal,71,,,16-23,0,,undefined,,68,2017,https://www.sciencedirect.com/science/article/abs/pii/S0747563217300195?via%3Dihub,https://drive.google.com/file/d/10mCgN6HATqXhLpL5HqU_tcMLx9fSxQlp/view?usp=sharing,"Revisar si en algún momento programan el robot y con qué herramienta

Sí, el robot es BeeBot, que se programa mediante la grabación de instrucciones en su memoria que luego se ejecutan cuando apretás el botón de GO. Es un poco limitado y casi casi que no califica como programacion de verdad porque lo único que podés hacer es apretar los botones para cargar las acciones que querés que haga el robot y listo. No creo que tengas sensores o instrucciones más complejas como flujo de control o subrutinas. No sé si incluirlo...

Entra porque a fin de cuentas lo están programando (y además ya lo incluí en otros papers). Capaz cuando haga el análisis tenga que señalar las limitaciones de bee-bot y hasta capaz ponerlo en una categoría aparte (¿porque no sería programación tangible, o sí?)","Bee-Bot (no tiene lenguaje de programación, el robot registra comandos y los repite)",Entre 5 y 6,Bee-bot,Experiencia con alumnos,No,Bee-bot,No,No,No,No,Sí
SI,10.1109/RITA.2017.2697739,Introduction to Robotics: Importance of a Summer Camp as a Recruiting Tool for Future University Students,"This paper describes a robotics summer camp that was held at the University of Puerto Rico at Aguadilla Campus (UPR-Aguadilla) during the summer of 2015. This camp gave high school students the opportunity to collaborate with their peers, in a university setting, in the building and programing of robots. The main contribution of this paper is the evaluation of the camp's influence on student enrollment at the UPR-Aguadilla. The impact was evaluated by using pre- and post-test surveys that included content and interest questions. In addition, the pre- and the post-test surveys included questions on whether or not the camp influenced student enrollment at the UPR-Aguadilla. The camp survey results suggest that attendance to the camp had a significant effect on the enrollment of participating students at the UPR-Aguadilla.",ar,2017-05-01,Revista Iberoamericana de Tecnologias del Aprendizaje,algorithms | computing education | robotics education | STEM | student recruitment | summer camp,2-s2.0-85028763348,,,Article,Balaguer Alvarez I.J.,60197280,Universidad de Puerto Rico en Aguadilla,Aguadilla,Puerto Rico,1,"Balaguer Alvarez, Irvin J.",26421994100,60197280,May 2017,,19700201532,19328540,Journal,12,2,7913578,71-75,0,UPR,undefined,Universidad de Puerto Rico,10,2017,https://ieeexplore.ieee.org/document/7913578,https://drive.google.com/file/d/1AdfZE6O2KAl9FB8NvEUbnT9Yhhc7QQLV/view?usp=sharing,"Describe un summer camp para high-school students donde construyen y programan robots.

El artículo casi no menciona la programación","Lego NXT-G (supongo, porque no lo mencionan explícitamente)",entre 15 y 17,Lego NXT,Experiencia con alumnos,No,,,,,,
SI,10.1145/3025013,Teaching programming in secondary education through embodied computing platforms: Robotics and wearables,"Pedagogy has emphasized that physical representations and tangible interactive objects benefit learning especially for young students. There are many tangible hardware platforms for introducing computer programming to children, but there is limited comparative evaluation of them in the context of a formal classroom. In this work, we explore the benefits of learning to code for tangible computers, such as robots and wearable computers, in comparison to programming for the desktop computer. For this purpose, 36 students participated in a within-groups study that involved three types of target computer platform tangibility: (1) desktop, (2) wearable, and (3) robotic. We employed similar blocks-based visual programming environments, and we measured emotional engagement, attitudes, and computer programming performance. We found that students were more engaged by and had a higher intention of learning programming with the robotic rather than the desktop computer. Furthermore, tangible computing platforms, either robot or wearable, did not affect the students' performance in learning basic computational concepts (e.g., sequence, repeat, and decision). Our findings suggest that computer programming should be introduced through multiple target platforms (e.g., robots, smartphones, wearables) to engage children.",ar,2017-05-01,ACM Transactions on Computing Education,Children | Embodiment | Experiment | Learning | Robot | Ubiquitous computing | Wearable,2-s2.0-85027054261,,,Article,Merkouris A.,60067711;60013925,Hellenic Open University;Ionian Panepistimion,Patra;49100 Corfu,Greece;Greece,3,"Merkouris, Alexandros;Chorianopoulos, Konstantinos;Kameas, Achilles",57147763100;20336592900;6603112443,60013925;60067711;60067711,May 2017,,19700183047,19466226,Journal,17,2,9,,0,,undefined,,27,2017,https://dl.acm.org/doi/10.1145/3025013,https://drive.google.com/file/d/1dJDNbV3htUacCOAC3HBc9izttGSABTlk/view?usp=sharing,,"Enchanting (para controlar LEGO Mindstorms)
Modkit (para controlar Arduino LilyPad)",entre 12 y 13,"Lego Mindstorms NXT (con Enchanting)
Arduino LilyPad (con Modkit)",Experimento con alumnos,No,"Visual (bloques)
En el caso de Modkit también es textual, te permite ver el código generado y si querés pasar a modificarlo (no sé si después podés volver a los bloques)","Sí (ambos)


No lo mencionan en el paper","No

No lo mencionan en el paper","No

No lo mencionan en el paper","Sí (enchanting)
No (Modkit)

No lo mencionan en el paper","Sí (ambos)

No lo mencionan en el paper"
SI,10.1109/TE.2016.2622227,The effects of a robot game environment on computer programming education for elementary school students,"In the past, computer programming was perceived as a task only carried out by computer scientists; in the 21st century, however, computer programming is viewed as a critical and necessary skill that everyone should learn. In order to improve teaching of problem-solving abilities in a computing environment, extensive research is being done on teaching-learning methods, types of teaching software, the educational environment, and related tools. This paper, based on diverse experimental results, proposes an environment where elementary students can easily learn and practice computer programming. The proposed robot game environment used a tangible programming tool with which students can easily create robot programs, without learning syntax, and then validate their programming results; it can also provide various game activities to incite students' interest. Observation of elementary school students placed in the robot game environment confirmed the tool's usability and entertainment aspects, and students' attitudes toward programming and their understanding of programming concepts improved.",ar,2017-05-01,IEEE Transactions on Education,Computer engineering | elementary school | games | problem solving,2-s2.0-84995581966,,,Article,Shim J.,60005273,Korea University,Seoul,South Korea,3,"Shim, Jaekwoun;Kwon, Daiyoung;Lee, Wongyu",56118822900;15520920800;56164989400,60005273;60005273;60005273,May 2017,189359,17344,,Journal,60,2,7742384,164-172,0,,undefined,,24,2017,https://ieeexplore.ieee.org/document/7742384,https://drive.google.com/file/d/19HDvE_zw8ANb7XLKSCoWzmgOtn_zkpNO/view?usp=sharing,"No sé si proponen usar un robot físico o uno virtual, revisar...

Por lo visto sí proponen un robot físico pero con programación tangible.

Interesante para tener de ejemplo el experimento que hacen donde miden usabilidad, aprendizaje de conceptos de programación y otras cosas.
Acá lo interesante es cómo definen los cuestionarios para medir usabilidad, “edutainment”, “programming attitude”, and “understanding of programming concepts”. Usan también una medida de “reliability que capaz sea bueno entender: https://en.wikipedia.org/wiki/Cronbach%27s_alpha
No sé si servirá de mucho porque acá tenían bastantes alumnos (bah, relativamente hablando: 47) de distintas edades pero también es interesante el punto de “understanding of programming concepts” porque hicieron una medición pre y post para comparar cuánto aprendieron con la experiencia.

Entra en programación tangible",Algorithmic Bricks (A-Bricks),entre 10 y 12,"No aclaran el tipo de robot, sólo dicen que usa 2 motores paso a paso y sensores infrarrojos",Experimento con alumnos,Desarrollo propio (este paper es de los mismos autores que el anterior sobre A-Bricks),Tangible,,,,,
SI,10.1145/3043950,Teaching physical computing in family workshops,"Family workshops in which children together with a parent learn basic physical computing concepts and programming have proven very successful in popularizing computing in Santa Catarina/Brazil. During the hands-on workshops, participants learn step-by-step how to ""give life"" to an interactive superhero robot through a simple, lowcost, platform-independent, reliable, and stable strategy integrating a microcontroller, a few hardware parts and block-based visual programming languages. The results of several of these family workshops in Santa Catarina indicate that the workshops enable the learning of basic computing concepts (specifically programming) besides providing additional benefits through the involvement of the families.",ar,2017-03-01,ACM Inroads,,2-s2.0-85014156989,,,Article,Von Wangenheim C.,60017609;109626449,Universidade Federal de Santa Catarina;Federal Institute of Santa Catarina (IFSC),Florianopolis;Florianopolis,Brazil;Brazil,5,"Von Wangenheim, Christiane Gresse;Von Wangenheim, Aldo;Pacheco, Fernando S.;Hauck, Jean C.R.;Ferreira, Miriam Nathalie F.",7801373211;6602002506;56405284900;14045055000;57193487871,60017609;60017609;109626449;60017609;60017609,March 2017,21532184,19700201136,21532192,Trade Journal,8,1,,48-51,0,,undefined,,2,2017,https://doi.org/10.1145/3043950,https://drive.google.com/file/d/1oDxpcSZJB5DSsK6gsSpbpBh6zjiCCeXH/view?usp=sharing,"Describe los resultados después de llevar a cabo workshops de robótica con chicos de entre 10 y 14 años acompañados por algún pariente adulto. Es interesante que la experiencia está diseñada para que cada chico esté acompañado por algún adulto de su flia.

""We created a simple, low-cost, platform-independent, reliable, and stable strategy integrating a microcontroller and block-based visual programming languages""

Desarrollaron un servidor para conectar Scratch/Snap! con Arduino usando firmata. Es un poco raro que no hayan usado Scratch4Arduino o Snap4Arduino, siendo que es un paper del 2017","Scratch 2
Snap!",entre 10 y 14 años,Arduino Nano,Experiencia con alumnos,"Sí, desarrollaron una herramienta llamada Scratchduino (a Scratch/Snap! to Arduino communication server).
""It is an easy to use, multiplatform GUI-based program that acts as a bidirectional protocol translator, providing interoperability between the Scratch/Snap! Extension Protocol and the traditional Firmata microcontroller protocol""",Visual (bloques),"Sí, pero no lo mencionan","Sí, pero no lo mencionan",No,"Sí, pero no lo mencionan",No
SI,10.1109/MRA.2016.2636372,Bringing Robotics to Formal Education: The Thymio Open-Source Hardware Robot,"Mobile robots are valuable tools for education because of both the enthusiasm they raise and the multidisciplinary nature of robotics technology. Mobile robots give access to a wide range of fields, such as complex mechanics, sensors, wireless transmission, mathematics, and computer science. However, despite their potential as educational tools, robots are still not as widespread in schools as they could be. In this article, we identify five key reasons: lack of diversity, high cost, noninclusive design, lack of educational material, and lack of stability over time. Then, we describe our answers to these problems, as we implemented them in the Thymio project: a mature mass-produced open-hardware robot, at a low price, with a multiage and gender-neutral feature set, and with a design promoting creativity, facilitating learning, and providing a wide range of interaction possibilities from built-in behaviors to text programming, passing through different visual programming environments. We highlight some neglected key issues that differentiate open-source hardware from open-source software, for instance the legal uncertainty of designing open hardware using professional computer-aided design (CAD) tools and the difficulty to distribute the development. Our solution to these being to increase the awareness of CAD editors to open-source hardware and to provide a two-layer development model for hardware.",ar,2017-03-01,IEEE Robotics and Automation Magazine,,2-s2.0-85013649120,,,Article,Mondada F.,60028186;60025858;119675527,Ecole Polytechnique Fédérale de Lausanne;ETH Zürich;Mobsya,"Lausanne;Zurich ZH,;",Switzerland;Switzerland;Switzerland,7,"Mondada, Francesco;Bonani, Michael;Riedo, Fanny;Briod, Manon;Pereyre, Lea;Retornaz, Philippe;Magnenat, Stephane",6603066571;6506907928;55307457100;57193409707;57193411904;34168303400;13005513200,60028186;119675527;119675527;60028186;60028186;60028186;60025858,March 2017,10709932,18027,,Journal,24,1,7859350,77-85,0,,undefined,,57,2017,https://ieeexplore.ieee.org/document/7859350,https://drive.google.com/file/d/19ThtbbqxYYtQL4sAd2j-vVTMTea7zIuB/view?usp=sharing,"Describe el diseño y la implementación del robot Thymio.

""At the software level, we provide a set of programming environments (see the “Programming Environment” section) that enable beginners to discover programming progressively. First, we teach them the basic rules of programming using a purely visual interface, then they discover the construction of syntax trees by assembling graphical blocks, and finally, we provide a full text-based coding environment with advanced debugging tools, such as real-time inspection of the variables of the robot and plotting features, providing a visual way to understand time-related concepts""

""On the robot side, it provides a lightweight virtual machine that runs on microcontrollers such as the PIC24F inside Thymio. A virtual machine allows instantaneous upload and safe execution of programs""

""Aseba provides an integrated development environment (IDE) featuring a visual programming language (VPL) (Figure 3); a scripting language (Figure 4); and a mixed language, Blockly (https://developers.google.com/blockly/), to assemble scripts graphically (Figure 5)","Aseba
Thymio VPL
Blockly","""accessible to girls and boys of different age groups from kindergarten to university""",Thymio,Descripción de un proyecto de robot de bajo costo con entorno de programación incluido,Sí?,"Textual y visual.
Aseba soporta programación textual y visual (con un lenguaje basado en íconos y otro que usa blockly)",,,Sí,Sí,Sí
SI,10.13187/ejced.2017.3.390,Innovative methods in teaching programming for future informatics teachers,"In the training of future informatics teachers the students obtain experience with different methods of programming. As well, the students become familiar with programming by using the robotic system Lego Mindstorms. However, the small number of Lego systems available is a limiting factor for the teaching process. Use of virtual robotic environments seems to be a suitable alternative for dealing with an insufficient quantity of hardware tools. The resulting programs are created and tested in the virtual laboratory and can be subsequently implemented into a real robot model. In such cases, teaching no longer depends on the available number of hardware kits and the form of teaching can be changed from group to individual. This paper describes our experiences with students' learning with the robotic system Lego Mindstorms, programming environments Bricx and virtual educational environment ROBOTC. One approach to making teaching programming language attractive is the use of robotic kits and virtual environments in the classroom",ar,2017-01-01,European Journal of Contemporary Education,,2-s2.0-85029509710,,,Article,Majherová J.,,Katolícka univerzita v Ružomberku,Ruzomberok,Slovakia,,,,,2017,23049650,21100790713,23056746,Journal,6,3,,390-400,0,,,,7,2017,https://www.semanticscholar.org/paper/Innovative-Methods-in-Teaching-Programming-for-Majherov%C3%A1-Kr%C3%A1l%C3%ADk/591f4aca94bd191e3fd050e2c77267edc4722f95,https://drive.google.com/file/d/1ydbusUm0WLgM-68o-fBkwugyZKF1Q9xa/view?usp=share_link,"Describen experiencias con alumnos en las que usaron robots físicos y virtuales. Los robots físicos los programaron con NXT-G y NQC, los virtuales con NQC usando Brixcc","NXT-G
Bricx (NQC en realidad)
RobotC (sólo para los robots virtuales)","""bachelor degree""
Creo que apunta a futuros profesores?

18+",Lego NXT,Experiencia con alumnos,No,,,,,,
SI,10.1007/978-3-319-55553-9_15,The combined use of lego mindstorms NXT and app inventor for teaching novice programmers,"Both in Greece and abroad, students in school and in introductory computer science courses perceive programming as a difficult task. Introductory programming courses are often disappointing both for students and for teachers. One of the major factors to which these difficulties in learning programming has been attributed is the traditional approach to teaching the fundamentals of programming, which is unable to provide students with an interesting and richly stimulating environment through which problems and concepts are the subject of investigation in a creative and enjoyable way. In contrast, several studies claim that teachings robotics is suitable to students regardless of age and background and is a way of encouraging learning. This paper presents an alternative use of robotic Lego Mindstorms constructions and the visual programming environment App Inventor for teaching programming with the goal of understanding basic programming structures.",ar,2017-01-01,Advances in Intelligent Systems and Computing,App inventor | Lego mindstorms | Programming | Robotics,2-s2.0-85015794799,,,Article,Papadakis S.,60001524;118123171,University of Crete;1st Vocational School of Agios Nikolaos,Rethymnon;,Greece;Greece,2,"Papadakis, Stamatios;Orfanakis, Vasileios",57038471800;57191191654,60001524;118123171,2017,21945357,5100152904,,Book Series,560,,,193-204,0,,undefined,,24,2017,https://link.springer.com/chapter/10.1007%2F978-3-319-55553-9_15,https://drive.google.com/file/d/1BSyP1LOq8ZF_c3LzYbPSm0Ek5WSIjpYF/view?usp=sharing,,AppInventor,entre 15 y 16,Lego NXT,Experiencia con alumnos,No,Visual (bloques),"No sé si AppInventor soporta multitasking, calculo que sí pero igual en lo que respecta a la programación del robot no están haciendo uso de la concurrencia del NXT",No? Revisar cómo es el workflow con AppInventor pero estoy casi seguro que no,No,No,"No, en la actividad propuesta lo que hicieron es un programa para Android que permite mandar comandos al robot para moverlo"
SI,10.1007/978-3-319-55553-9_6,The effectiveness of integrating educational robotic activities into higher education computer science curricula: A case study in a developing country,"In this paper, we present a case study to investigate the effects of educational robotics on a formal undergraduate Computer Science education in a developing country. The key contributions of this paper include a longitudinal study design, spanning the whole duration of one taught course, and its focus on continually assessing the effectiveness and the impact of robotic-based exercises. The study assessed the students’ motivation, engagement and level of understanding in learning general computer programming. The survey results indicate that there are benefits which can be gained from such activities and educational robotics is a promising tool in developing engaging study curricula. We hope that our experience from this study together with the free materials and data available for download will be beneficial to other practitioners working with educational robotics in different parts of the world.",ar,2017-01-01,Advances in Intelligent Systems and Computing,Education in developing countries | Educational robotics | Effectiveness of teaching methods | Tertiary education,2-s2.0-85015794173,,,Article,Gyebi E.,60026830,University of Lincoln,Lincoln,United Kingdom,3,"Gyebi, Ernest B.B.;Hanheide, Marc;Cielniak, Grzegorz",57193686352;6507632075;6508366670,60026830;60026830;60026830,2017,21945357,5100152904,,Book Series,560,,,73-87,0,,undefined,,3,2017,https://link.springer.com/chapter/10.1007%2F978-3-319-55553-9_6,https://drive.google.com/file/d/11WmEoOxAyMV4X3roPg5niKBcslrecCe1/view?usp=sharing,"Revisar si mencionan alguna herramienta concreta

""we have selected an affordable robot Thymio II to conduct the robot-based activities.""
""a simple two-wheel differential platform equipped with an array of LEDs and a number of simple sensors including odometry, proximity and temperature sensors, a microphone, etc.""
""The robot comes with a dedicated programming environment called Aseba, which is an open-source scripting language""

El paper describe un curso de introducción a CS para universidad en el que usaron actividades con robots y otras en papel y compararon los resultados.
Este lenguaje Aseba está muy interesante, por lo que leí está pensado para controlar múltiples robots en red, usa una VM en los robots, tiene la capacidad de meter breakpoints, ejecutar paso a paso, visualizar los valores de variables, etc. http://aseba.wikidot.com/en:asebausermanual",Aseba (a dedicated programming environment for the Thymio II),formal undergraduate Computer Science education (first year students at the university of ghana),Thymio II educational robot,Experimento con alumnos,No,Textual,"Sí?
El paper no dice nada de esto pero buscando en el sitio de Aseba dice que el lenguaje está basado en eventos. Yo asumo que como los eventos son asincrónicos la ejecución concurrente está contemplada.","No?
Si bien destacan la ""instant compilation"" del IDE, no parece que actualizar el código mientras corre el programa tenga el mismo efecto.","Sí.
El paper no lo menciona pero en el sitio de aseba: ""Studio has an integrated debugger; for each node, it gives the current execution status. It supports continuous execution, step by step, and breakpoints. A right click inside the program editor allows to set or clear a breakpoint on a specific line. After a breakpoint or a step, the values of the variables are updated""","Sí.
El entorno de Aseba tiene unos paneles donde muestra los valores de variables, sensores, etc. El paper igual no menciona nada de esto","Sí.
Por lo que leí en la página de Aseba, tienen una tiny VM que corre en microcontroladores (interesante)"
SI,10.1007/978-3-319-55553-9_14,The use of robotics in introductory programming for elementary students,"Studies have shown that teaching programming to students is often a difficult task. The programming language itself is not as much a challenge as the concepts and structures, which define it. This paper explores the use of educational robotics to introduce basic programming concepts through meaningful teaching and learning activities with the hands-on use of bee-bots. The results from an empirical study show that students can successfully develop algorithmic thinking and programming skills based on their knowledge acquired by the bee-bots. Thanks to the tactile interaction with robots, students developed their creativity and imagination as built systems with Lego WeDo, all the while enjoying the course through teamwork activities.",ar,2017-01-01,Advances in Intelligent Systems and Computing,Educational robotics | Programming | Programming structures,2-s2.0-85015779509,,,Article,Athanasiou L.,60004716,University of Ioannina,Ioannina,Greece,3,"Athanasiou, Lito;Topali, Paraskevi;Mikropoulos, Tassos A.",57193680173;57193685517;6603399630,60004716;60004716;60004716,2017,21945357,5100152904,,Book Series,560,,,183-192,0,,undefined,,3,2017,https://link.springer.com/chapter/10.1007%2F978-3-319-55553-9_14,https://drive.google.com/file/d/1qrVp2cBmfGIHkbneHcp7d0xmKagWn66k/view?usp=sharing,"Mencionan BeeBots y Lego WeDO.
""This paper explores the use of educational robotics to introduce basic programming concepts through meaningful teaching and learning activities with the hands-on use of bee-bots. The results from an empirical study show that students can successfully develop algorithmic thinking and programming skills based on their knowledge acquired by the bee-bots""

Aparentemente hicieron una semana de actividades de robótica como introducción a la programación con 7 pibes de entre 9 y 12 años. La actividad inicial la hicieron con bee-bots como para introducir la idea de controlar un robot mediante una secuencia de instrucciones. Luego pasaron a trabajar con Lego WeDo programándolo con Scratch.",Scratch,Entre 9 y 12,Lego WeDo,Experiencia con alumnos (empirical study le llaman),No,Visual (bloques),"Scratch soporta concurrencia, pero en el paper no lo mencionan",Scratch lo soporta pero no lo mencionan,No,Scratch lo soporta pero no lo mencionan,"No.
Creo que WeDo con Scratch funciona mandando comandos"
SI,10.1007/978-3-319-55553-9_7,Educational robotics and STEM education in primary education: A pilot study using the H&amp;S electronic systems platform,"In this paper an attempt is made to utilize educational robotics applications in Primary Education in order to teach basic principles of Automatic Control Systems and Programming. For this purpose, the robotic package H&S Electronic Systems was used in the frame of the STEM education approach. According to the latter, emphasis is given to the connection of the four subjects, Science, Technology, Engineering and Mathematics (STEM). Educational robotics can be proven to be an important tool to achieve these goals, but also to develop students’ motivation to participate in an active way in learning. Within this work the students are asked to work in groups to design, develop and implement their programs to control the behavior of their robotic constructions, following specially designed worksheets. This work, finally, aims to investigate and highlight educational benefits emerging from the data analysis of students’ work.",ar,2017-01-01,Advances in Intelligent Systems and Computing,Educational robotics | H&amp;S electronic systems | Programming fundamentals | STEM education,2-s2.0-85015777229,,,Article,Stergiopoulou M.,60031155,University of Patras,Rio,Greece,3,"Stergiopoulou, Maria;Karatrantou, Anthi;Panagiotakopoulos, Chris",57193678196;22333957400;24491869600,60031155;60031155;60031155,2017,21945357,5100152904,,Book Series,560,,,88-103,0,,undefined,,2,2017,https://link.springer.com/chapter/10.1007%2F978-3-319-55553-9_7,https://drive.google.com/file/d/1lrklrZ3GJEwU6abDS1wWZ0Mz4_Eihx_l/view?usp=sharing,,PICAXE Programming Editor,sixth grade students from primary school in Patras,Basic Robotic System platform from H&S Electronic Systems,Experiencia con alumnos,No,Visual (flowchart) y Textual (BASIC),No lo mencionan en el paper pero por los conceptos que plantean y la edad de los pibes no creo que lo necesiten,No lo mencionan pero pareciera que no,"No lo mencionan pero pareciera que la herramienta tiene algo de simulación porque en una de las screenshots se ve que hay un botón de ""Simular""",No lo mencionan,Creería que sí
SI,10.1007/978-3-319-55553-9_17,Learning programming with educational robotics: Towards an integrated approach,"Despite the fact that it has been a few years since robotics entered the school and offered new learning opportunities, educational robotics usually is offered in the context of extra-curricular activity (e.g. a “club”) which addresses a limited number of students and participation is based on student personal interest. In this paper we explore the potential of ER when it is integrated in the typical school curriculum. In the study we report here, we integrated ER in the computer science curriculum and all students of a 9th grade class engaged with robotics activities. The rationale underlying the study is that robotics can be used as a medium to motivate students in engaging with programming and support them to negotiate real life problems. Analysis of the data collected, indicate that ER when integrated with the computer science curriculum, can create a rich learning environment where programming is contextualized and students are highly motivated to engage and negotiate important STEM concepts.",ar,2017-01-01,Advances in Intelligent Systems and Computing,Constructionism | Educational robotics | Programming,2-s2.0-85015775218,,,Article,Xenos M.,60028900,Ethnikó ke Kapodistriakó Panepistímio Athinón,Athens,Greece,5,"Xenos, Marios;Yiannoutsou, Nikoleta;Grizioti, Marianthi;Kynigos, Chronis;Nikitopoulou, Sofia",57193682083;43461953000;57193686423;23091199800;57191727683,60028900;60028900;60028900;60028900;60028900,2017,21945357,5100152904,,Book Series,560,,,215-222,0,EC,undefined,European Commission,1,2017,https://link.springer.com/chapter/10.1007%2F978-3-319-55553-9_17,https://drive.google.com/file/d/1zTw_vt9LrWWCrXKO05spoPa0WsRd6k_Y/view?usp=sharing,,NXT-G,9th grade,Lego NXT,Experiencia con alumnos,No,Visual,Sí,No,No,Sí,Sí
SI,10.1007/978-3-319-55553-9_22,Programming constructs in curriculum for educational robotics at lower secondary school,"In this article we present programming constructs taught to lower secondary school pupils in the context of educational robotics curriculum. It consists of eleven activities with robotic kit LEGO WeDo. Students develop many important skills, such as problem solving skills, programming skills, design and ICT competencies. The development of this curriculum was a part of our dissertation research. The students were in 5th and 6th grade (10–12 years old), studying the school subject Informatics. We used qualitative methods of data collection and data analysis. In this article we present programming constructs such as count loop, conditions, variables and parameters that most of the pupils in our classes acquired. These constructs were based on analysis of programming environment for robotic kit LEGO WeDo.",ar,2017-01-01,Advances in Intelligent Systems and Computing,Educational robotics | LEGO WeDo | Lower secondary school | Programming constructs,2-s2.0-85015760348,,,Article,Veselovská M.,60001987,Univerzita Komenského v Bratislave,Bratislava,Slovakia,2,"Veselovská, Michaela;Mayerová, Karolína",57191729757;57193676160,60001987;60001987,2017,21945357,5100152904,,Book Series,560,,,242-245,0,,undefined,,0,2017,https://link.springer.com/chapter/10.1007%2F978-3-319-55553-9_22,https://drive.google.com/file/d/1P0pzf9g0F1h-9HTUE5C2973gky3yu9X3/view?usp=sharing,"Mencionan Lego WeDo. 
Es un paper muy cortito (4 páginas) que casi no dice nada, es como la presentación de una investigación donde cuentan brevemente cómo desarrollaron un ""curriculum for educational robotics"" para pibes de entre 10 y 12 años. 
El objetivo de la investigación es responder la pregunta: ""What should be specific objectives, content and form of curriculum for educational robotics for 10-12 years old pupils in compulsory school subject Informatics?""",Lego WeDo software,entre 10 y 12,Lego WeDo,Describen muy brevemente el plan para un curso de robótica educativa,No,Visual,,,,,
SI,10.1007/978-3-319-55553-9_13,Assessment of lower secondary school pupils’ work at educational robotics classes,"This paper presents our proposal for assessment of lower secondary pupils working with educational robotics LEGO WeDo, using the curriculum we have designed. The curriculum consisted of eleven activities with complex methodical materials that the teachers can incorporate into their ordinary classes. Teachers can use this curriculum within compulsory subject Informatics and therefore it was necessary to create a way to assess pupils’ work. We have created evaluation through rubrics, because working with robotic kits encompasses several aspects. The assessment focuses on three main aspects: (a) the construction of the robotic model, (b) program to control it and (c) the presentation of mentioned program. In this paper we also describe the concrete example of assessment of pupils’ work using our rubrics.",ar,2017-01-01,Advances in Intelligent Systems and Computing,Assessment | Educational robotics | Lower secondary school | Rubrics,2-s2.0-85015747010,,,Article,Veselovská M.,60001987,Univerzita Komenského v Bratislave,Bratislava,Slovakia,2,"Veselovská, Michaela;Mayerová, Karolína",57191729757;57193676160,60001987;60001987,2017,21945357,5100152904,,Book Series,560,,,170-179,0,,undefined,,0,2017,https://link.springer.com/chapter/10.1007%2F978-3-319-55553-9_13,https://drive.google.com/file/d/12e3zzHEg2tj6hj6yAdph8Y44KAjAmmDA/view?usp=sharing,Mencionan Lego WeDO,Eenguaje de Lego WeDO (no sé cómo se llama),entre 10 y 12,Lego WeDO,Experiencia con alumnos,No,Visual (iconos),Lego WeDO soporta multitasking. Pero en el paper no lo mencionan ni lo usan (a juzgar por los programas de ejemplo),Creo que WeDo soporta cambiar el programa mientras está corriendo pero no estoy seguro,No.,"Sí. 
El software de We Do tiene una opción para mostrar valores de motores y sensores. En el paper no lo mencionan igual","Creo que No, que WeDo necesitaba estar conectado siempre al entorno para funcionar (pero no estoy seguro)"
SI,10.1007/978-3-319-55553-9_2,Primary level young makers programming &amp; making electronics with snap4arduino,"The main goal of this study is to show that young makers (8–12 years old) are able to start programming & making electronics with Snap4Arduino, and that this is a way to have (already trained) Makers for secondary level education. We have performed a feasibility study of the Snap4Arduino as an educational tool for elementary school students. The study has been conducted as part of a certified course carried out by the Pamplona’s Planetarium where different skills such as learning to learn or sense of initiative and entrepreneurship were evaluated through a PrBL project based learning methodology. Cooperative learning was achieved focusing on teamwork attitude and behavior.",ar,2017-01-01,Advances in Intelligent Systems and Computing,Primary education | Snap4Arduino | Young makers,2-s2.0-85015743306,,,Article,Pina A.,60033019,Universidad Pública de Navarra,Pamplona,Spain,2,"Pina, Alfredo;Ciriza, Iñaki",7004767320;57193680855,60033019;60033019,2017,21945357,5100152904,,Book Series,560,,,20-33,0,,undefined,,3,2017,https://link.springer.com/chapter/10.1007%2F978-3-319-55553-9_2,https://drive.google.com/file/d/1JuaIY4VzCsoMb_VxEf0VVgYSg0xChORh/view?usp=sharing,Mencionan Snap4Arduino,Snap4Arduino,entre 8 y 12,Arduino,Experiencia con alumnos,No,Visual (bloques),Sí,Sí,"No.
Pero tiene una feature muy copada que te permite visualizar la ejecución. Cuando la activás se iluminan los bloques actualmente en ejecución y podés controlar cuán rápido se ejecutan con un slider. No es lo mismo que ejecución paso a paso pero está muy piola.","Sí.
Cuando estás conectado al arduino podés activar como watchers individuales para pines digitales o analógicos","No.
Snap4Arduino usa Firmata para comunicarse con la placa"
SI,10.1016/j.ijcci.2018.03.004,BlockyTalky: New programmable tools to enable students’ learning networks,"Networked systems like social media and games are ubiquitous in the lives of young people. Yet no currently available programming tools exist that have been specifically created to enable youth to create such systems. Similarly, industrial and academic programming practices often involve the simultaneous production and subsequent integration of code by multiple collaborators. But few youth-focused programming tools have been designed to support this form of authentic participation in computing. We describe the design of a new programming environment that addresses both of these needs. It empowers adolescents to design, make, and program interactive, tangible networked technologies, indicating the feasibility of networked technology as a design and programming genre for youth. We show how distributed programming tools can offer young people agency to work within a variety of collaboration structures. We present results from two U.S. middle school classroom implementations. Students created a wide variety of projects that included interaction design, physical artifact design and making, and network programming. Students enacted a variety of collaboration approaches that were responsive to their creative goals and inter-personal relationships. They programmed a system of small single-board computers that process input and output information from connected sensors, actuators, or synthesizers, and communicate over a network. Students constructed different collaborative structures, from pair to jigsaw programming. Our contribution is to show what the technical content and social structure of future computing education environments for youth could be.",ar,2018-11-01,International Journal of Child-Computer Interaction,Collaboration | Computer science education | Networking,2-s2.0-85047199837,S2212868918300394,,Article,Kelly A.,60000221,University of Colorado Boulder,Boulder,United States,4,"Kelly, Annie;Finch, Lila;Bolles, Monica;Shapiro, R. Benjamin",57194276149;57202111810;57202112531;9240655600,60000221;60000221;60000221;60000221,November 2018,22128689,21100228541,,Journal,18,,,8-18,0,NSF,1562030,National Science Foundation,9,2018,https://www.sciencedirect.com/science/article/abs/pii/S2212868918300394?via%3Dihub,https://drive.google.com/file/d/1uTlwIx1GjzrVfIU7IQBaInENs71h-FHK/view?usp=sharing,"Me gusta el nombre ""BlocklyTalky"" :)

No es exactamente robótica educativa pero el lenguaje me parece que cuenta porque permite programar dispositivos con sensores y actuadores: ""BlockyTalky enables students to rapidly construct physical devices with various sensors and actuators, and then program those devices to respond to inputs and communicate with other devices over a Wi-Fi network.""

¿Podría caracterizarse como un DSL gráfico (usa Blockly) para programación distribuida de dispositivos físicos?

No sé, creo que cuenta. Usan un entorno de programación personalizado y dispositivos físicos (robots de LEGO NXT) para enseñar programación de redes.",BlocklyTalky,entre 12 y 14,"Cada device es una Raspberry Pi.
LEGO Mindstorms (pero creo que sólo usan sensores/actuadores, no el brick)","Presentan una herramienta.
Experiencia con alumnos",SÍ,Visual (bloques),Sí (event-based),"No?
El paper no menciona cómo se mandan los programas a los devices. Pero en la screenshot hay un menú con 2 botones ""Stop Code"" y ""Run Code"", así que asumo que para ejecutar el programa tenés que hacer click en ""Run code"". No sé qué pasa si cambiás el programa mientras está corriendo, ¿tendrás que apretar de nuevo ""Run"" para que se actualice? O se actualizará sólo? Dado que no mencionan este tema asumo que es la primera","No.
Lo que mencionan para ayudar en el debugging es que cada device guarda el log de mensajes recibidos.",Sí,Sí
SI,10.1002/cae.21966,European Robotics Week to introduce robotics and promote engineering,"We present an activity framed within the European Robotics Week event. Robotics and computational practice are ideal tools for developing science, technology, engineering, and mathematics (STEM) pedagogy. A modular and adaptive hands-on workshop is described in detail. The workshop is based on multiplatform educational robotics content as a first step into the robotics world. Three educational tools are used to introduce examples of robotics applications. The operational details, materials, and examples of activities for selected modules are presented with the expectation that all teachers can adapt these activities to their classes. Despite the small number of students, the experience delivered results that might be useful for other instructors to promote workshops with similar or identical content to generate further benefits. This study demonstrates that it is important to combine theory and practice and include fun tasks that intertwine the challenges of applying theory to problem solving. Furthermore, the results show how the same content can be deployed using three different robotics education tools.",ar,2018-09-01,Computer Applications in Engineering Education,education | programming | robotics | STEM,2-s2.0-85053839343,,,Article,Plaza P.,60028711,Universidad Nacional de Educacion a Distancia,Madrid,Spain,6,"Plaza, Pedro;Sancristobal, Elio;Carro, German;Garcia-Loro, Felix;Blazquez, Manuel;Castro, Manuel",57191608645;6508164379;36245883600;56141440900;34871348500;26643374700,60028711;60028711;60028711;60028711;60028711;60028711,September 2018,10613773,18156,10990542,Journal,26,5,,1068-1080,0,ICTS,561727-EPP-1-2015-1-BG-EPPKA2-CBHE-JP,International Centre for Theoretical Sciences,18,2018,https://onlinelibrary.wiley.com/doi/10.1002/cae.21966,https://drive.google.com/file/d/1ZXmPMgrRTJyopqHNn-hMQb1eDhWu8l4a/view?usp=sharing,"Pareciera que mencionan varias herramientas, revisar...
Los ejercicios parecen medio demasiado sencillos, creo que lo más complicado fue un semáforo

Usaron Scratch, Crumble (creo que es un kit de robótica con interfaz de programación propia), y Arduino:
""This operating system was chosen for its compatibility with Scratch, Crumble, and Arduino because these items do not require resources such as high microprocessor speeds or large amounts of random access memory (RAM).""
""In conclusion, this work shows that Scratch, Crumble, and Arduino are well-suited choices for introducing robotics in an inexpensive, simple, and convenient manner such that users can develop scalable concepts. Moreover, the participants find programming with Scratch, Crumble, and Arduino to be an enjoyable activity while they acquire familiarity with STEM concepts.""

Pareciera que usaron Scratch sólo como una introducción a los elementos básicos de la programación, pero no para programar robots.","Crumble (un kit de robótica que tiene su propio lenguaje visual)
Arduino IDE?","Muy variado
""One attendee was under 18 years old; another attendee was between the ages of 26 and 36. More than half of the attendees were between the ages of 37 and 55, and one attendee was between the age of 56 and 65.""","Crumble robot
Arduino",Experiencia con alumnos,No,"Crumble: Visual (bloques)
Arduino: Textual","En el paper no lo mencionan pero buscando por otro lado...
Crumble: No.
Arduino: No.","En el paper no lo mencionan pero buscando por otro lado...
Crumble: No.
Arduino: No.","En el paper no lo mencionan pero buscando por otro lado...
Crumble: No.
Arduino: No.","En el paper no lo mencionan pero buscando por otro lado...
Crumble: No.
Arduino: No.","En el paper no lo mencionan pero buscando por otro lado...
Crumble: Si.
Arduino: Sí."
SI,10.1016/j.ijcci.2018.03.002,Physical computing with plug-and-play toolkits:Key recommendations for collaborative learning implementations,"Physical computing toolkits have long been used in educational contexts to learn about computational concepts by engaging in the making of interactive projects. This paper presents a comprehensive toolkit that can help educators teach programming with an emphasis on collaboration, and provides suggestions for its effective pedagogical implementation. The toolkit comprises the Talkoo kit with physical computing plug-and-play modules and a visual programming environment. The key suggestions are inspired by the results of the evaluation studies which show that children (aged 14–18 in a sample group of 34 students) are well motivated when working with the toolkit but lack confidence in the kit's support for collaborative learning. If the intention is to move beyond tools and code in computer education to community and context, thus encouraging computational participation, collaboration should be considered as a key aspect of physical computing activities. Our approach expands the field of programming with physical computing for teenage children with a focus on empowering teachers and students with not only a kit but also its appropriate classroom implementation for collaborative learning.",ar,2018-09-01,International Journal of Child-Computer Interaction,Collaborative learning | Education | Motivation | Physical computing | Programming | Toolkit,2-s2.0-85045182549,S2212868917300351,,Article,Katterfeldt E.S.,60008293;60007905;60006242;120513014,Universität Bremen;Malmö Högskola;UCL Institute of Education;Arduino Verkstad AB Malmö,Bremen;Malmo;London;,Germany;Sweden;United Kingdom;Sweden,4,"Katterfeldt, Eva Sophie;Cukurova, Mutlu;Spikol, Daniel;Cuartielles, David",35183217100;56904209900;24345016200;16238266600,60008293;60006242;60007905;120513014,September 2018,22128689,21100228541,,Journal,17,,,72-82,0,FP7,619738,Seventh Framework Programme,14,2018,https://www.sciencedirect.com/science/article/abs/pii/S2212868917300351?via%3Dihub,https://drive.google.com/file/d/1kq2lLj8RM6qshB8qrxC9KbbfjA0kwDyj/view?usp=sharing,"El kit que armaron es interesante porque está compuesto por distintas plaquitas que llaman ""hardware module"" y que son cada una un microcontrolador aparte
""The program does not need to be uploaded but runs immediately on the modules while the virtual blocks display the flow of incoming/outgoing values in real time and thus facilitates debugging.""",Talkoo toolkit,"""14 to 18""",Talkoo kit,Experiencia con alumnos,"Sí.
Ellos diseñaron el kit ",Visual (nodos),Sí,Sí,No,Sí,No
SI,10.1007/s10639-017-9677-z,"Lines, roamers, and squares: Oh my! using floor robots to enhance Hispanic students’ understanding of programming","Teaching programming and coding skills in K-12 classrooms is becoming a part of science, technology, engineering, and math (STEM) programs across the United States. Often, these opportunities are available through extra-curricular activities such as Robotics club, math club, STEM club, etc. Increasing STEM opportunities for students who are English language learners, culturally and linguistically diverse learners, and/or students from underserved backgrounds is vital. In a pilot study prior to a larger, grant-funded study on the effects of metacognitive strategy instruction on elementary students’ academic performance, the principal investigator (PI) developed an activity with a corresponding assessment instrument. The PI initially incorporated floor-robots into an activity in two fifth grade science classrooms. Pre/post survey analysis provided encouraging results. To follow up on the initial results, the PI and co-principal investigators (co-PIs) introduced floor-robots into eight additional fourth and fifth grade science classrooms over an additional school year, as well as in an after-school setting, to determine how floor-robots might be used effectively to engage elementary students in STEM learning. The investigators introduced over 257 elementary students to three types of floor-robots, and this provided students with opportunities to have hands-on access to programming and coding robots for specific purposes. Of the 257 students who interacted with the floor-robots, approximately 103 were provided with pre/post surveys on Roamer®, one of the floor-robots. Additional data analysis provided surprising and encouraging results.",ar,2018-07-01,Education and Information Technologies,,2-s2.0-85048915703,,,Article,Elizabeth Casey J.,,Texas A and M International University,Laredo,United States,,,,,1 July 2018,13602357,144955,15737608,Journal,23,4,,1531-1546,0,,,,12,2018,https://doi.org/10.1007/s10639-017-9677-z,https://drive.google.com/file/d/1Mu_M4Luw1AloC9oJyp4aPeT1ynaES019/view?usp=share_link,"Es una experiencia con alumnos usando un robot tipo BeeBot, mencionan otros robots pero parece que esos no los programaron",El roamer se programa tipo BeeBot...,"""elementary students""

entre 9 y 11",Roamer (es como un beebot),Experiencia con alumnos,No,tipo BeeBot,,,,,
SI,10.1145/3211332.3211335,MakeCode and CODAL: Intuitive and efficient embedded systems programming for education,"Across the globe, it is now commonplace for educators to engage in the making (design and development) of embedded systems in the classroom to motivate and excite their students. This new domain brings its own set of unique requirements. Historically, embedded systems development requires knowledge of low-level programming languages, local installation of compilation toolchains, device drivers, and applications. For students and educators, these requirements can introduce insurmountable barriers. We present the motivation, requirements, implementation, and evaluation of a new programming platform that enables novice users to create software for embedded systems. The platform has two major components: 1) Microsoft MakeCode (www.makecode.com), a web app that encapsulates an entire beginner IDE for microcontrollers; and 2) CODAL, an efficient component-oriented C++ runtime for microcontrollers. We show how MakeCode and CODAL provide an accessible, cross-platform, installation-free programming experience for the BBC micro:bit and other embedded devices.",ar,2018-06-19,ACM SIGPLAN Notices,classroom | education | embedded systems,2-s2.0-85084177795,,,Article,Devine J.,60026532;60023643,Microsoft Corporation;Lancaster University,Redmond;Lancaster,United States;United Kingdom,6,"Devine, James;Finney, Joe;De Halleux, Peli;Moskal, Michał;Ball, Thomas;Hodges, Steve",57202452071;7101854678;24461416400;23486057200;7102130944;15044574300,60023643;60023643;60026532;60026532;60026532;60026532,19 June 2018,15232867,19700185000,,Journal,53,6,,19-30,1,,undefined,,3,2018,https://dl.acm.org/doi/10.1145/3211332.3211335,https://drive.google.com/file/d/1_75upoGgnddf_FbuHi4xK5v4FktrWba3/view?usp=sharing,"Interesante. Proponen una plataforma de programación (así la llaman ""programming platform"") para sistemas embebidos que sirva para aprender/enseñar. 
Combinan el entorno de programación web MakeCode y un runtime para microcontroladores llamado CODAL.
Usan BBC micro:bit",MakeCode (with CODAL runtime),No especifica,"BBC micro:bit
(aunque soportan otros dispositivos)",Presentación/Propuesta de plataforma de programación,Sí,"Visual (bloques)
Textual (TypeScript)","Sí.
Plantean como una de las claves del diseño que es orientado a eventos y concurrente.","No.
Por la forma en que se baja el programa en la placa seguro que no: ""MakeCode devices appear as USB pen drives when plugged into a computer, thanks to UF2. After a user has finished developing a program, the compiled binary is “downloaded"" locally to the user’s computer (lower-right) and then transferred (flashed) to the MCU by a simple file copy operation.""
Lo que sí tienen es un simulador de la placa, capaz los cambios al programa se pueden ver inmediatamente en el simulador...
UPDATE: Se ve que aprendieron y en una versión más actual pueden conectar (""pair"") el device con el entorno, entonces cuando le dan ""download"" al programa automáticamente lo flashean en el device. Sigue sin ser interactivo, y además tarda varios segundos...","No.
No lo mencionan pero por las mismas razones que puse en ""MONITORING"" yo creo que no.","No?
Mencionan que tienen un in-browser simulator de la placa. Yo calculo que ahí tenés capacidad de monitorear valores de variables y sensores. Pero no es en el robot real.
Lo que me induce a pensar que no soportan monitoreo real es que para bajar el programa en la placa primero lo tienen que compilar y después copiar el archivo generado al device (que se presenta como si fuera un pendrive USB)","Sí.
Los programas se compilan y flashean usando un bootloader personalizado."
SI,10.1049/trit.2018.0016,Visual programming language environment for different IoT and robotics platforms in computer science education,"This study presents the authors' recent research and application of a new visual programming language and its development environment: VIPLE (Visual IoT/Robotics Programming Language Environment) at Arizona State University (ASU). ASU VIPLE supports a variety of IoT devices and robots based on an open architecture. Based on computational thinking, VIPLE supports the integration of engineering design process, workflow, fundamental programming concepts, control flow, parallel computing, event-driven programming, and service-oriented computing seamlessly into a wide range of curricula, such as introduction to computing, introduction to engineering, service-oriented computing, and software integration. It is actively used at ASU in several sections of FSE 100: Introduction to Engineering and in CSE 446: Software Integration and Engineering, as well as in several other universities worldwide.",ar,2018-06-01,CAAI Transactions on Intelligence Technology,,2-s2.0-85060735489,,,Article,de Luca G.,60103801;60093807,"University of Jinan;School of Computing, Informatics, and Decision Systems Engineering",Jinan;Tempe,China;United States,4,"de Luca, Gennaro;Li, Zhongtao;Mian, Sami;Chen, Yinong",57191584961;55746502300;57221001189;8884498700,60093807;60103801;60093807;60093807,1 June 2018,24686557,21100970248,24682322,Journal,3,2,,119-130,1,ASU,undefined,Armstrong State University,14,2018,https://ietresearch.onlinelibrary.wiley.com/doi/10.1049/trit.2018.0016,https://drive.google.com/file/d/1qSZ0KJgQzYWTGlRXHoff7yxL9lKT4O4Y/view?usp=sharing,"Cuentan el desarrollo de un lenguaje de programación visual para controlar diferentes tipos de robots.
El objetivo del proyecto es poder usar IoT y physical computing para enseñar computer science.
El lenguaje es tipo workflow diagram, basado en nodos que representan operaciones. Soporta multithreading. Y supuestamente es general-purpose, y turing-complete.
En el paper cuentan algunas experiencias con alumnos de secundaria y universidad, pero el eje del paper es la descripción del lenguaje.","VIPLE, standing for Visual IoT/Robotics Programming Language Environment",De 14 para arriba. Las experiencias con alumnos varían mucho en las edades porque lo usaron en secundaria y universidad,"Lego Mindstorms EV3.
Intel Galileo.
Raspberry Pi.
pcDuino.
Minnow board (Intel).
Curie board (Intel)
Intel edison.
Robotis Bioloid Premium kits.
Arduino (UNO, Mega, Duo, etc.)

Está diseñado para ser fácil de extender a otros dispositivos","Propuesta/Presentación de lenguaje de programación para IoT y physical computing
(también comentan brevemente algunas experiencias con alumnos)","Sí, es un lenguaje propio","Visual (nodos, workflow diagram?)","Sí.
Tienen un ejemplo comparando la solución single-thread vs multithread","No?
En el paper no lo mencionan","No?
No lo mencionan","No?
No lo mencionan","No?
No lo mencionan. Parecería que no, pero no estoy seguro...
Según wikipedia: ""The program is running on a Windows computer, a desktop, a laptop, or a tablet. The computer sends commands to control the robot actuators (motors) and receives the sensory data and motor feedback from the robot."""
SI,10.1007/s10798-017-9397-0,"Dancing robots: integrating art, music, and robotics in Singapore’s early childhood centers","In recent years, Singapore has increased its national emphasis on technology and engineering in early childhood education. Their newest initiative, the Playmaker Programme, has focused on teaching robotics and coding in preschool settings. Robotics offers a playful and collaborative way for children to engage with foundational technology and engineering concepts during their formative early childhood years. This study looks at a sample of preschool children (N = 98) from five early childhood centers in Singapore who completed a 7-week STEAM (Science, Technology, Engineering, Arts, and Mathematics) KIBO robotics curriculum in their classrooms called, “Dances from Around the World.” KIBO is a newly developed robotics kit that teaches both engineering and programming. KIBO’s actions are programmed using tangible programming blocks—no screen-time required. Children’s knowledge of programming concepts were assessed upon completion of the curriculum using the Solve-Its assessment. Results indicate that children were highly successful at mastering foundational programming concepts. Additionally, teachers were successful at promoting a collaborative and creative environment, but less successful at finding ways to engage with the greater school community through robotics. This research study was part of a large country-wide initiative to increase the use of developmentally appropriate engineering tools in early childhood settings. Implications for the design of technology, curriculum, and other resources are addressed.",ar,2018-06-01,International Journal of Technology and Design Education,Early childhood | Programming | Robotics | STEAM,2-s2.0-85010748070,,,Article,Sullivan A.,60023143,Tufts University,Medford,United States,2,"Sullivan, Amanda;Bers, Marina Umaschi",55214724100;57203655429,60023143;60023143,1 June 2018,9577572,21389,15731804,Journal,28,2,,325-346,0,NSF,1118897,National Science Foundation,44,2018,https://link.springer.com/article/10.1007%2Fs10798-017-9397-0,https://drive.google.com/file/d/1qaqNWDexi6ql63wKb0j7oF4cuBLaAqIA/view?usp=sharing,"Mencionan programación tangible (no screen time).
Cada bloque tiene un bar code y el robot tiene un escáner. Cuando querés hacer que el robot ejecute un programa tenés que escanear los bloques 1 por 1. Malísimo...",Kibo se llama el robot (usa un lenguaje tangible que no sé si tiene nombre),"""preschool children""
Children ranged between 3 and 6 years of age at the start of this study, with a mean age of 4.9 years",KIBO,Experimento con alumnos,No (usaron el robot KIBO),Tangible,"No.
En la descripción de los 18 bloques del lenguaje no mencionan nada acerca de concurrencia (además de que es un concepto complejo para trabajar con chicos tan chiquitos)","No.
No lo mencionan","No.
No lo mencionan","No.
No lo mencionan pero tampoco parece haber mucha posibilidad para monitorear nada","Sí.
Cada bloque tiene un bar code y el robot tiene un escáner. Cuando querés hacer que el robot ejecute un programa tenés que escanear los bloques 1 por 1. Malísimo..."
SI,10.1515/itit-2017-0032,Empowering learners with tools in CS education: Physical computing in secondary schools,"In computer science, computer systems are both, objects of investigation and tools that enable creative learning and design. Tools for learning have a long tradition in computer science education. Already in the late 1960s, Papert developed a concept which had an immense impact on the development of informal education in the following years: his theory of constructionism understands learning as a creative process of knowledge construction that is most effective when learners create something purposeful that they can try out, show around, discuss, analyse and receive praise for. By now, there are numerous learning and programming environments that are based on the constructionist ideas. Modern tools offer opportunities for students to learn in motivating ways and gain impressive results in programming games, animations, implementing 3D models or developing interactive objects. This article gives an overview of computer science education research related to tools and media to be used in educational settings. We analyse different types of tools with a special focus on the categorization and development of tools for student adequate physical computing activities in the classroom. Research around the development and evaluation of tools and learning resources in the domain of physical computing is illustrated with the example of ""My Interactive Garden"", a constructionist learning and programming environment. It is explained how the results from empirical studies are integrated in the continuous development of the learning material.",ar,2018-04-25,IT - Information Technology,computer science education | media | physical computing | resources | tools,2-s2.0-85056725153,,,Article,Przybylla M.,60021763;60000765,Universität Potsdam;Friedrich-Alexander-Universität Erlangen-Nürnberg,Potsdam;Erlangen,Germany;Germany,2,"Przybylla, Mareen;Romeike, Ralf",56319769000;24475498800,60021763;60000765,25 April 2018,16112776,21100929583,21967032,Journal,60,2,,,0,,undefined,,4,2018,https://www.degruyter.com/document/doi/10.1515/itit-2017-0032/html,https://drive.google.com/file/d/1ADThXwUGZ0nzQmnbO9zSjNKn6-5-aGVu/view?usp=sharing,"""This article gives an overview of computer science education research related to tools and media to be used in educational settings. We analyse different types of tools with a special focus on the categorization and development of tools for student adequate physical computing activities in the classroom""

Analizan un montón de herramientas usadas para enseñar ""physical computing"". Es como una revisión de las herramientas y lenguajes existentes.
También proponen un ""learning environment"" al que llamaron ""My Interactive Garden"".
Hicieron una experiencia con alumnos y midieron algunos parámetros: pleasure, competence, freedom of choice, and pressure/tension.
No me quedan claras las edades de los pibes. ""N=32 students (25 male, 7 fe- male)""",Snap4Arduino,,Arduino,"Propuesta de ""learning environment"" y experiencia con alumnos",No,,,,,,
SI,10.1016/j.chb.2017.09.029,"Phogo: A low cost, free and “maker” revisit to Logo","Today it is almost impossible to spend a single day without depending on an information system, a computer or any other form of computation. Though the starting barrier is low, fundamental concepts are still required in order to manage the technicalities of the engineering environment and everyday computational systems. In 1967, Logo proposed to teach abstract programming concepts by providing a set of functions that had intuitive, visible effects over a robotic Turtle. LOGO was a success, but the robots quickly migrated into computer simulations. From LOGO, many followed. Scratch and Lego Mindstorm are some of the most notorious examples. Both introduced graphical block-based programming interfaces. We propose to bring back the powerful ideas behind LOGO by updating it with state of the art technologies. Phogo combines Python, Arduino and 3D printing into a low cost robot that is easy to build and control. The robot has a pen to draw shapes and can be commanded from a computer via a wireless link that is transparent to the students. The use of a physical robot can make programming more accessible for students with disabilities. The open and maker philosophies behind Phogo makes it more interesting as students will be able to access and study the electronic components. The textual programing language can be a long life companion for the students. In this work we discuss LOGO and other projects inspired by it, and we also share the methodology and design decisions behind Phogo, the results of its application in a workshop and the improvements we are currently developing.",ar,2018-03-01,Computers in Human Behavior,Computational thinking | Educational robots | LOGO | Pre-university education | Technology education,2-s2.0-85031321658,S0747563217305551,,Article,Molins-Ruano P.,60026796,Universidad Autónoma de Madrid,Madrid,Spain,3,"Molins-Ruano, Pablo;Gonzalez-Sacristan, Carlos;Garcia-Saura, Carlos",55782543400;56014673500;56303433700,60026796;60026796;60026796,March 2018,7475632,19419,,Journal,80,,,428-440,0,MECD,TIN2013-44586-R,Once Upon A Time Foundation,4,2018,https://www.sciencedirect.com/science/article/abs/pii/S0747563217305551?via%3Dihub,https://drive.google.com/file/d/1jirX38GOVODNBtk8nuHE6XFPU73-JJrd/view?usp=sharing,"""We propose to bring back the powerful ideas behind LOGO by updating it with state of the art technologies. Phogo combines Python, Arduino and 3D printing into a low cost robot that is easy to build and control.""

Por lo que leí el robot se llama Phogo porque es Python+LOGO. Usaron una placa compatible con Arduino que además incluye comunicación bluetooth, de esa forma resuelven la comunicación inalámbrica. Después por lo que entendí, desde la librería de python se maneja el protocolo de comunicación y cuando el usuario programa simplemente escribe comandos de alto nivel (como en LOGO) y la librería se los manda al robot. O sea que no sería autónomo. La concurrencia calculo que sí porque en python podés levantar falsos threads, no sé si habrá alguna limitación del lado del protocolo que lo impida pero no parece...

Hicieron también un workshop con alumnos para ver cómo reaccionan a Phogo","Phogo (una especie de Python+LOGO?)
Sí, por lo que dicen el robot es una tortuga pero en vez de manejarla con LOGO usan python","En el workshop participaron estudiantes ""from 16 to 18 years old""
Reconocen que Scratch puede andar para pibes de 8 años pero Phogo es muy complejo para ellos.

En la tablita de comparación dicen que Phogo es para ""14 and beyond""","bq Zum (Arduino derivative)
En el final plantean que están armando una versión nueva usando NodeMCU (ESP8266 y después ESP32)",Propuesta de lenguaje + robot,"Sí.
Hicieron una librería en Python para controlar el robot. No es un lenguaje nuevo ni nada parecido",Textual,En el paper no lo mencionan pero dicen que al usar Python como lenguaje en vez de LOGO se pueden incorporar otras librerías externas. Y python soporta concurrencia así que diría que si,"Si.
Mencionan muuuuy brevemente, así al pasar, el hecho de que python es un lenguaje interactivo. Por lo tanto, dependiendo del IDE supongo que sí, pueden ir ejecutando el código como si tuvieran un REPL y viendo al robot moverse.",Sí. No lo mencionan pero Python lo soporta.,Sí. No lo mencionan explícitamente pero sí mencionan el feedback instantáneo. Además después de cada comando se ve en consola la respuesta del robot o sea que si le preguntan al robot el valor del sensor lo van a ver ahí.,"No.
Los comandos se mandan por Bluetooth desde la PC al robot. No hay nada en el paper que indique que el robot tiene la capacidad de almacenar y ejecutar programas por sí mismo."
SI,10.1109/RITA.2018.2801898,Integrating Formative Feedback in Introductory Programming Modules,"Introductory programming modules are challenging for both the lecturers and students. In previous works, the authors have introduced educational innovations to mitigate these challenges and facilitate learning. This paper presents a further step forward, proposing a learning process enriched with formative feedback. To this end, visual programming environments and educational robots are combined and complemented with automatic source code verification and validation feedback. The feedback integration proposal is presented along with the lessons learned from previously carried out experiments that established the basis of this paper. The proposal has been implemented and tested in the object oriented programming module in the bachelor's in computer management and information systems engineering at the Faculty of Engineering of Vitoria-Gasteiz, UPV/EHU University. The results of the evaluation have been positive and are also presented here.",ar,2018-02-01,Revista Iberoamericana de Tecnologias del Aprendizaje,Computer science education | educational robots | programming environments,2-s2.0-85044504702,,,Article,Anfurrutia F.I.,60027856,Universidad del Pais Vasco,Leioa,Spain,4,"Anfurrutia, Felipe I.;Álvarez, Ainhoa;Larrañaga, Mikel;López-Gil, Juan Miguel",8669806000;7202214675;55885874500;55619312424,60027856;60027856;60027856;60027856,February 2018,,19700201532,19328540,Journal,13,1,,3-10,0,EHU,IT980-16,Euskal Herriko Unibertsitatea,0,2018,https://ieeexplore.ieee.org/document/8289320,https://drive.google.com/file/d/1VfhonuwyG7FFzS27WalEd6ERWfoakkWl/view?usp=sharing,"Acá lo interesante puede ser que proponen la ejecución y validación del programa en un simulador antes de ejecutarlo en el robot real. Similar a lo que queremos hacer con Mendieta. Revisar porque puede servir para justificar el uso del simulador tanto en Mendieta como en Physical Bits.

Plantea también la necesidad de usar un lenguaje que soporte tanto programación visual como programación textual: ""The tools or combinations of tools used in this phase must support both block-based editing and direct editing using a particular programming language. This would allow those students with prior knowledge to tackle only the notational perspective""",BlueJ,"""42 students of the MOOP module at the Faculty of Engineering of Vitoria- Gasteiz at the UPV/EHU University participated in the study""","Lego Mindstorms (creo que EV3, por la foto)","Propuesta de una forma de trabajo con robots que involucra programación, verificación automática del programa, prueba en simulador, y después prueba en robot real.
Experiencia con alumnos de universidad.",No,"Visual (bloques)
Textual","ACAACA no sé...
El paper no menciona, seguramente se pueda. porque el Lego lo soporta pero no sé BlueJ.","No.
Lo ejecutan en un simulador antes de ejecutarlo finalmente en el robot real. Quizás tienen un poco más de interactividad ahí","No.
En el simulador pueden pausar la ejecución y ejecutar paso a paso (o cambiar la velocidad de ejecución) pero en el robot ya no.
BlueJ también soporta debugging...
En el paper no lo mencionan igual","No.
El paper no parece mencionar este tema, a pesar de que hace mucho énfasis en la verificación y validación del programa por el tema de entregar feedback rápido para ayudar en el proceso de aprendizaje.
En el simulador calculo que tendrán acceso a las variables y sensores pero en el robot no parece haber nada de eso",Sí
SI,10.29333/ejmste/93483,Skill Development and Knowledge Acquisition Cultivated by Maker Education: Evidence from Arduino-based Educational Robotics,"This study investigated elementary school students’ learning performances and behaviors in a maker education program. An informal after-school learning environment entitled Robot MakerSpace was created at a public elementary school in Taiwan and 30 grade 5 students voluntarily participated in a 16-week educational experiment. The student participants were randomly divided into two experimental groups. Students in the maker group received weekly educational robotics lessons, whereas those in the nonmaker group only engaged in other after-school learning activities such as homework practice in traditional classrooms. Mixed methods research was used for data collection. An experiment with a pretest–posttest and control group design was employed to measure the students’ electrical engineering and computer programming content knowledge and problem-solving skills. In addition, a qualitative approach with an emphasis on filed observation was adopted to evaluate the instructional implementation of the maker education program. The quantitative findings revealed that maker education training significantly improved the electrical engineering and computer programming content knowledge of the students and improved their problem-solving skills. The qualitative findings showed the students required considerable learning support from the instructor such as strategies for software and hardware debugging",ar,2018-01-01,"Eurasia Journal of Mathematics, Science and Technology Education",educational robotics | problem solving | skill development | STEM education,2-s2.0-85122024352,,,Article,Chou P.N.,60017991,National University of Tainan Taiwan,Tainan,Taiwan,1,"Chou, Pao Nan",36993017100,60017991,2018,13058215,4400151729,13058223,Journal,14,10,,1-15,1,,undefined,,23,2018,https://www.researchgate.net/publication/326411462_Skill_Development_and_Knowledge_Acquisition_Cultivated_by_Maker_Education_Evidence_from_Arduino-based_Educational_Robotics,https://drive.google.com/file/d/1Ii7iPHgZvA9u50NCrqgesnqWSeUsbMsn/view?usp=sharing,,mBlock: Scratch for mBot,"""grade 5 students at one public elementary school in Taiwan""",Arduino-based robot (mBot v1.1),Experimento con alumnos,No,Visual (bloques),"ACAACA probar en mBlock 3
El paper no dice",El paper no menciona pero entiendo que mBlock permite programar y ver el resultado en tiempo real bajando un firmware especial (asumo que es una especie de Firmata) y después cuando el programa funciona como vos querés lo podés bajar permanentemente a la placa (reemplazando al firmware),"No.
El paper no menciona","No?
ACAACA probar mBlock","Sí.
mBlock permite grabar el programa en la placa.
El paper igual no lo menciona"
SI,10.18355/XL.2018.11.01.10,"Teaching English language to young school-age children while making projects, playing games and using robotics","The aim of the article is to identify the most effective methods of teaching English to young schoolchildren and the possibilities of using robotics in primary school. Today, robotics classes are the most popular direction in the field of additional education, they are mainly related to the development of engineering thinking, mastering the basics of design and programming and career guidance. The use of robots as a means of teaching English to 6-10 year old children in the Russian secondary school hasn’t been studied well enough. It is characterized by the novelty of the subject of discussion, the lack of scientifically based programs and teaching materials, the shortage of teachers who are able to implement in practice wide possibilities of educational robotics for experimental verification of our hypothesis. The article presents the main methods which help to develop the highest communicative skills of young schoolchildren, problems in teaching English language to children and ways of their solution. The authors of the article offer to use robotics, project and playing activity of schoolchildren at English lessons and in extracurricular activity as a means of teaching English in elementary school. The article is of practical value for English teachers who work with 6-10 year old children.",ar,2018-01-01,XLinguae,,2-s2.0-85041337185,,,Article,Rozhina V.,,Vyatka State University,Kirov,Russian Federation,,,,,2018,13378384,21100241808,2453711X,Journal,11,1,,102-113,1,,,,19,2018,http://xlinguae.eu/2018_11_01_10.html,https://drive.google.com/file/d/1p6P1Rvq3vnP0UQTgCdvZdX4eNZx7XrlP/view?usp=share_link,Parece que usan robots para enseñar inglés a pibes de entre 6 y 10 años,ScratchDuino (es un scratch extendido),entre 6 y 10,Robbo (un robot basado en arduino aparentemente),Experiencia con alumnos,,,,,,,
SI,10.1007/s11423-019-09648-5,The effect of programming on primary school students’ mathematical and scientific understanding: educational use of mBot,"This study highlights the importance of an educational design that includes robotics and programming through a visual programming language as a means to enable students to improve substantially their understanding of the elements of logic and mathematics. Gaining an understanding of computational concepts as well as a high degree of student participation and commitment emphasize the effectiveness of introducing robotics and visual programming based on active methodologies in primary education. Implementation of this design provides sixth-grade elementary education students with activities that integrate programming and robotics in sciences and mathematics; these practices allow students to understand coding, motion, engines, sequences and conditionals. A quasi-experimental design, descriptive analysis and participant observation were applied across various dimensions to 93 sixth-grade students in four primary education schools. Programming and robotics were integrated in one didactic unit of mathematics and another in sciences. Statistically significant improvements were achieved in the understanding of mathematical concepts and in the acquisition of computational concepts, based on an active pedagogical practice that instills motivation, enthusiasm, commitment, fun and interest in the content studied.",ar,2019-12-01,Educational Technology Research and Development,,2-s2.0-85076438836,,,Article,Sáez-López J.M.,,Universidad Nacional de Educacion a Distancia,Madrid,Spain,,,,,1 December 2019,10421629,20764,15566501,Journal,67,6,,1405-1425,0,,,,39,2019,https://doi.org/10.1007/s11423-019-09648-5,https://drive.google.com/file/d/1IKioQ--gGet00_FPCksaC9G-VwM-V4ts/view?usp=share_link,Parece que hicieron una experiencia con alumnos usando mBot y programando con algo que parece Scratch (pero sólo miré las imágenes),mBlock,"""sixth-grade elementary education""
""sixth-grade students in four primary education schools"" 
Son de España

entre 11 y 12",mBot (basado en Arduino),Experiencia con alumnos,No,,,,,,
SI,10.1007/s40692-019-00147-3,Coding as another language: a pedagogical approach for teaching computer science in early childhood,"Computer programming is an essential skill in the 21st century and new policies and frameworks aim at preparing students for computer science-related professions. Today, the development of new interfaces and block-programming languages facilitates the teaching of coding and computational thinking starting in kindergarten. However, as new programming languages that are developmentally appropriate emerge, there is a need to explicitly conceptualize pedagogical approaches for teaching computer science in the early years that embrace the maturational stages of children by inviting play and discovery, socialization, and creativity. Thus, it is not enough to copy models developed for older children, which mostly grew out of traditional Science, Technology, Engineering and Math (STEM) disciplines and instructional practices. This paper describes a pedagogical approach for early childhood computer science called “Coding as Another Language” (CAL), as well as six coding stages, or learning trajectories, that young children go through when exposed to CAL curriculum. CAL is grounded on the principle that learning to program involves learning how to use a new language (a symbolic system of representation) for communicative and expressive functions. This paper proposes that, due to the critical foundational role of language and literacy in the early years, the teaching of computer science can be augmented by models of literacy instruction. CAL supports young children in transitioning through different six coding stages. Case studies of young children using either the KIBO robot or the ScratchJr app will be used to characterize each coding stage and to illustrate the instructional practices of CAL curriculum.",ar,2019-12-01,Journal of Computers in Education,,2-s2.0-85074048340,,,Article,Bers M.U.,,Tufts University,Medford,United States,,,,,1 December 2019,21979987,21100922758,21979995,Journal,6,4,,499-528,0,,,,26,2019,https://link.springer.com/article/10.1007%2Fs40692-019-00147-3,https://drive.google.com/file/d/1PIqQt_LbMbfsRry04aBbcPpwKpwUETFG/view?usp=sharing,"Revisar porque no sé si habla mucho de robótica

Hablan de usar KIBO robot. Creo que es programación tangible.
También mencionan ScratchJr pero no para programar robots. Es un poco más amplio que robótica pero bueno, cuenta.

Interesante además el planteo, para leer después con más atención.

""The CAL curriculum is explicitly designed to help children move through six coding stages: emergent, coding and decoding, fluency, new knowledge, multiple perspective, and purposefulness""

""Pilot research explored a developmental model of program- ming based on observations of children 4–7 years old using KIBO robotics, and categorized children into four stages: proto-programmer, early programmer, pro- grammer, and fluent programmer (Vizner 2017)""",Kibo,"Entre 6 y 7?
En el paper cuando hablan del caso hipotético de uso de KIBO los chicos están en kindergarten. Pero justo el ejemplo anterior tiene 5 años y el siguiente 7, lo que me lleva a pensar que estos tienen 6.
Después en el último ejemplo, los chicos están en ""first-grade"", eso sería cuánto? 7 años?",KIBO,"Plantea una forma distinta de ver la enseñanza de la programación que llaman ""Coding as Another Language"" (CAL)",No,Tangible,No lo mencionan,No lo mencionan,No lo mencionan,No lo mencionan,No lo mencionan
SI,10.1109/RITA.2019.2950130,Scratch as Driver to Foster Interests for STEM and Educational Robotics,"Today, there are a multitude of initiatives that favor the learning of Science, Technology, Engineering, and Mathematics (STEM) and educational robotics (ER). Thanks to the available means, it is very easy to access a wide variety of tools based on programmable hardware. Although there are many options, most of them either require a high economic investment or require a great deal of time for the development of educational activities. Through the results shown in this paper, the great potential of Scratch as a solution for students who are just starting out in the knowledge related to STEM and ER is shown. To show the usefulness of Scratch a course has been designed, which dedicates three modules to the use of Scratch. The three modules have different levels of difficulty for the students, a basic level of difficulty, another intermediate level of difficulty and a last module with an advanced degree of difficulty.",ar,2019-11-01,Revista Iberoamericana de Tecnologias del Aprendizaje,,2-s2.0-85076641370,,,Article,Plaza P.,,Universidad Nacional de Educacion a Distancia,Madrid,Spain,,,,,November 2019,,19700201532,19328540,Journal,14,4,8890651,117-126,0,,,,10,2019,https://ieeexplore.ieee.org/document/8890651,https://drive.google.com/file/d/1sThFVHsyL9A3V2vk6sHAJKmxE9FCng0N/view?usp=sharing,"Hicieron un workshop en el que usaron Scratch, Crumble, y Arduino. 
Creo que no usaron Scratch para programar los robots, no me queda claro todavía...
Ahh claro, son los mismos autores que el otro paper que usa Crumble. En ese paper usaron Scratch sólo como introducción a la programación pero no para programar robots...","Scratch (no cuenta porque no lo usaron para programar robots)
Crumble
Arduino IDE",entre 6 y 11,"Crumble robot
Arduino",Experiencia con alumnos,No,"Crumble: Visual (bloques)
Arduino: textual",No lo mencionan,No lo mencionan,No lo mencionan,No lo mencionan,No lo mencionan
SI,10.1080/1475939X.2019.1670248,Humanoid robots: learning a programming language to learn a traditional language,"This research is part of a larger three-year study investigating the impact of humanoid robots on students’ learning and engagement. In this case study, Aboriginal and non-Aboriginal students worked with a humanoid robot to develop, in parallel, both their programming skills and their understanding of the traditional Narungga language and culture. For six months a school engaged students in learning two languages: the coding language required to program the robot and the Narungga language. Qualitative data were collected and triangulated to determine how the humanoid robot was utilised in the classroom and re-occurring themes were identified through the case study. This research drew on questionnaires, interviews and journals from teachers to understand the impact of humanoid robots on student learning. The case study demonstrated how using humanoid robots enhanced pride and interest in Aboriginal language and culture.",ar,2019-10-20,"Technology, Pedagogy and Education",,2-s2.0-85073956616,,,Article,Keane T.,,Swinburne University of Technology,Melbourne,Australia,,,,,20 October 2019,1475939X,5800179620,17475139,Journal,28,5,,533-546,0,,,,3,2019,https://www.tandfonline.com/doi/full/10.1080/1475939X.2019.1670248,https://drive.google.com/file/d/1SnLDdltax7zbVHN1NCW8FkAT79Bs1fDO/view?usp=sharing,"Muy interesante, usan la programación de humanoides para enseñar lenguaje natural a alumnos aborígenes (si no entendí cualquiera...).
Otra posible justificación para la importancia del tema","""Choregraphe software and Python code""","""rural school in South Australia""
""Years 1 to 4""
No sé las edades...","NAO (""humanoid robot (Pink)"")",Experiencia con alumnos,No,"Choreographe: Visual (nodos)
Python: Textual",No lo mencionan,"No.
Mencionan que luego de programarlo tienen que bajar el programa al robot para que lo ejecute, lo que sugiere que no hay programación interactiva...",No lo mencionan,No lo mencionan,"Sí?
""The students programmed the robot using a computer and its proprietary software (Choregraphe). Once the students completed the coding sequence on the computer, the program was then uploaded to the robot so that the robot could execute the code through a series of human-like movements such as sitting, standing, moving limbs or speaking"""
SI,10.1080/07380569.2019.1677436,Measurement of Executive Functioning Using a Playful Robot in Kindergarten,"We explored the potential of a robotics application in education as a measurement tool of child executive functioning skills. Sixty-five kindergarteners received assignments to go through a maze with a programmable robot, the Bee-Bot. Via observation we quantified how they solved these tasks. Their performance was successfully aggregated into a latent variable, which was used to predict the outcomes on standardized tasks that measure executive functioning. The latent variable significantly predicted performance on several tasks that measure problem-solving abilities, memory, visuospatial abilities and attention. It did not significantly predict pencil-and-paper tasks that measured visuospatial ability and nonverbal or design fluency. This study showed that it is possible to use a playful robotics task to obtain information on children’s ability. We recommend more research on using diverse robots in larger samples with different age groups to further explore the possibilities of robots as a test instrument.",ar,2019-10-02,Computers in the Schools,,2-s2.0-85075139774,,,Article,Urlings C.C.,,Maastricht University School of Business and Economics,Maastricht,Netherlands,,,,,2 October 2019,7380569,147225,15287033,Journal,36,4,,255-273,1,,,,3,2019,https://www.tandfonline.com/doi/full/10.1080/07380569.2019.1677436,https://drive.google.com/file/d/1xe0xzHFUBpqzT7gD34uNrb0wLrx1GUjZ/view?usp=sharing,"Es un estudio de uso de robótica en jardín, no creo que implique programación pero bueno, hay que revisarlo.

Executive Functioning (EF) -> ""cognitive abilities of children that allow higher order behavioral regulation on a daily basis (...). EF is an umbrella term for cognitive processes that allow goal-directed behavior and self-regulation.""

""Specifically for kindergarten and the lower primary grades, the Bee-Bot was used, followed by Scribbler by Parallax.""

Programación tangible para pre-kinder? No estoy seguro de que Bee-Bot cuente como tangible, por lo que ví tiene unos botones con los que se le carga comandos y después se le da GO! y el robot ejecuta los comandos cargados. Sería programación tangible?",BeeBot,"""kindergarten classes of elementary schools in the southern region of the Netherlands""",BeeBot,Experiencia con alumnos,No,BeeBot (no sería un lenguaje...),,,,,
SI,10.3390/informatics6040043,Educational robotics in primary school: Measuring the development of computational thinking skills with the bebras tasks,"Research has shown that educational robotics can be an effective tool to increase students’ acquisition of knowledge in the subjects of science, technology, engineering, and mathematics and promote, at the same time, a progression in the development of computational thinking (CT) skills in K–12 (kindergarten to 12th grade) education. Within this research field, the present study first sought to assess the effect of a robotics laboratory on the acquisition of CT-related skills in primary school children. The study also aimed to compare the magnitude of the effect of the laboratory across third- and fourth-grade students. For the purpose of the study, a quasi-experimental post-test-only design was adopted, and a group of 51 students, from third- and fourth-grade classrooms, participating in the robotics laboratories, were compared to a control group of 32 students from classrooms of the same grades. A set of Bebras tasks was selected as an overall measure of CT skills and was administered to children in both the intervention and control groups. Overall, the results showed that programming robotics artefacts may exert a positive impact on students’ learning of computational thinking skills. Moreover, the effect of the intervention was found to be greater among third-grade children. View Full-Text",ar,2019-10-01,Informatics,,2-s2.0-85078085252,,,Article,Chiazzese G.,,Consiglio Nazionale delle Ricerche,Rome,Italy,,,,,1 October 2019,,21100897717,22279709,Journal,6,4,informatics6040043,,1,,,,10,2019,https://www.mdpi.com/2227-9709/6/4/43,https://drive.google.com/file/d/1wZnYhURll3Lv0TggfmdCaczgYaErl8DK/view?usp=sharing,"No sé si menciona alguna herramienta de programación concreta

Usan Lego WeDO",Lego WeDo (no sé cómo se llama el lenguaje oficial),"""two third-grade classrooms and one fourth-grade classrooms""
""Students form the third-grade classrooms were all 8 years old; on the other hand, students attending the fourth-grade classrooms were in the age-range from 9 to 10 years""
entre 8 y 10",Lego WeDo,Experiencia con alumnos,No,Visual (bloques),No lo mencionan.,No lo mencionan.,No lo mencionan.,No lo mencionan.,"No?
No lo mencionan.
Creo que WeDo se controlaba desde la compu, no se programa de forma autónoma..."
SI,10.1007/s40299-019-00438-4,Connecting Plans to Action: The Effects of a Card-Coded Robotics Curriculum and Activities on Korean Kindergartners,"This study examined the effects of a card-coded robotics curriculum and associated activities on kindergarteners’ sequencing and problem-solving skills, which are forms of computational thinking. Kindergarteners participated in card-coded programming using a robot called TurtleBot. A card-coded robot curricular intervention was also designed to enhance their planning behaviors using complementary tools. This study examined an 8-week robotic curricular intervention through assessment of 53 participants ranging in age from 5 to 6, while also evaluating sequencing and mathematical problem-solving in both the treatment and comparison groups. It was found that children in the treatment group who engaged in the card-coded robotic curricular intervention performed better on sequencing and problem-solving tests. This finding indicates that an enhanced planning experience using card-coded robots was beneficial for improving young children’s thinking skills. The implications for designing appropriate curricula using robots for kindergarteners are addressed.",ar,2019-10-01,Asia-Pacific Education Researcher,,2-s2.0-85071973175,,,Article,Nam K.W.,,Chung-Ang University,Seoul,South Korea,,,,,1 October 2019,1195646,17900156737,22437908,Journal,28,5,,387-397,0,,,,21,2019,https://link.springer.com/article/10.1007/s40299-019-00438-4,https://drive.google.com/file/d/1xoMtCsKhIOU2Y2UiGi1UOmZiATiDS5Yc/view?usp=share_link,Parece que hicieron una experiencia con alumnos de jardín (entre 5 y 6) programando un tal TurtleBot,"No tiene, es tangible (en realidad usa cartas para indicar instrucciones)",entre 5 y 6,"""card-coded robot called TurtleBot""
Robot juguete",Experiencia con alumnos,No,Tangible,,,,,
SI,10.3390/educsci9030224,"Extending smart phone based techniques to provide ai flavored interaction with DIY robots, over wi-fi and lora interfaces","Inspired by the mobile phone market boost, several low cost credit card-sized computers have made the scene, able to support educational applications with artificial intelligence features, intended for students of various levels. This paper describes the learning experience and highlights the technologies used to improve the function of DIY robots. The paper also reports on the students’ perceptions of this experience. The students participating in this problem based learning activity, despite having a weak programming background and a confined time schedule, tried to find efficient ways to improve the DIY robotic vehicle construction and better interact with it. Scenario cases under investigation, mainly via smart phones or tablets, involved from touch button to gesture and voice recognition methods exploiting modern AI techniques. The robotic platform used generic hardware, namely arduino and raspberry pi units, and incorporated basic automatic control functionality. Several programming environments, from MIT app inventor to C and python, were used. Apart from cloud based methods to tackle the voice recognition issues, locally running software alternatives were assessed to provide better autonomy. Typically, scenarios were performed through Wi-Fi interfaces, while the whole functionality was extended by using LoRa interfaces, to improve the robot’s controlling distance. Through experimentation, students were able to apply cutting edge technologies, to construct, integrate, evaluate and improve interaction with custom robotic vehicle solutions. The whole activity involved technologies similar to the ones making the scene in the modern agriculture era that students need to be familiar with, as future professionals.",ar,2019-09-01,Education Sciences,,2-s2.0-85073377519,,,Article,Loukatos D.,,Geoponiko Panepistimion Athinon,Athens,Greece,,,,,September 2019,,21100897500,22277102,Journal,9,3,224,,1,,,,16,2019,https://www.mdpi.com/2227-7102/9/3/224,https://drive.google.com/file/d/1bPKMis986xouXGgOG5WZVSV6e6eFoe0u/view?usp=share_link,Hicieron un robot de bajo costo (con arduino y raspberry pi) y lo probaron con alumnos,"MIT app inventor 
C
python","""All these students comprised a group of around
20 persons, in total, aged from 21 to 23 years old, 16 males and four females.""

+18",Custom robot (Arduino y Raspberry Pi),Hicieron un robot de bajo costo y experiencia con alumnos,Sí,,,,,,
SI,10.18178/ijmerr.8.5.764-770,The effects for programming learning using actual robots control with scratch,"—Recently, the ICT (Information and Communication Technology) engineers ’workforce shortage has been occurred with the progress of ICT development. In the new educational guidelines of Japan, the learning contents about ICT have been extended. Along with this, effective teaching materials for learning programming are in demand. In this study, we constructed a programming learning environment which can control actual robots using Scratch, which was developed at MIT. Using questionnaire data, we analyzed the effect of the learning environment on the learning experience of students. And by the results, it was found that with this learning environment, it is possible to improve the learning effect of any students, regardless of their original interest in computer operation.",ar,2019-09-01,International Journal of Mechanical Engineering and Robotics Research,,2-s2.0-85071753361,,,Article,Osogami M.,,Fukui University of Technology,Fukui,Japan,,,,,1 September 2019,,21100788860,22780149,Journal,8,5,,764-770,0,,,,0,2019,http://www.ijmerr.com/show-170-1203-1.html,https://drive.google.com/file/d/1-ve6WYqpO7bZJVlRoUkF2MltzMB0OqvO/view?usp=sharing,"Hicieron un programita que convierte el programa en bloques generado por Scratch al código del robot (y entiendo que se lo manda para ejecutar).
No explican mucho las limitaciones de la conversión ni qué código generan. Voy a asumir entonces que cualquier código válido de Scratch funciona (que no tenga que ver con cuestiones visuales, obviamente)",Scratch (con un programa aparte que genera el código del robot a partir de los bloques),"high school students (from two schools in Japan)
1st grade: 13 people
2nd grade: 51 people
3rd grade: 5 people","Micro robots, developed by Citizen Watch LTD.
Lego Mindstorms NXT",Experiencia con alumnos,Sí,Visual (bloques),"Sí.
No lo mencionan","No.
Si tienen que pasar por el paso de conversión de los bloques a código entonces la programación no es muy interactiva que digamos","No.
No lo mencionan","No.
No lo mencionan. En Scratch normalmente tenés la posibilidad de monitorear variables y sensores (te aparecen como watchers en el panel del gatito) pero acá tienen que pasar por el paso extra de la conversión del código, lo cual implica que no hay una conexión entre el robot y Scratch.","Sí.
Entiendo que sí, aunque no lo mencionan."
SI,10.1016/j.sysarc.2019.05.005,MakeCode and CODAL: Intuitive and efficient embedded systems programming for education,"Historically, embedded systems development has been a specialist skill, requiring knowledge of low-level programming languages, complex compilation toolchains, and specialist hardware, firmware, device drivers and applications. However, it has now become commonplace for a broader range of non-specialists to engage in the making (design and development) of embedded systems - including educators to motivate and excite their students in the classroom. This diversity brings its own set of unique requirements, and the complexities of existing embedded systems development platforms introduce insurmountable barriers to entry.

In this paper we present the motivation, requirements, implementation, and evaluation of a new programming platform that enables novice users to create effective and efficient software for embedded systems. The platform has two major components: (1) Microsoft MakeCode (www.makecode.com), a web app that encapsulates an accessible IDE for microcontrollers; and (2) CODAL, an efficient component-oriented C++ runtime for microcontrollers. We show how MakeCode and CODAL combine to provide an accessible, cross-platform, installation-free, high level programming experience for embedded devices without sacrificing performance and efficiency.",ar,2019-09-01,Journal of Systems Architecture,,2-s2.0-85067212468,S1383762118306088,,Article,Devine J.,,Lancaster University,Lancaster,United Kingdom,,,,,September 2019,13837621,12398,,Journal,98,,,468-483,1,,,,7,2019,https://www.sciencedirect.com/science/article/pii/S1383762118306088?via%3Dihub,https://drive.google.com/file/d/18Nahh83o_LDCzsf69k6fTdeCcSPxAVQL/view?usp=sharing,"Este paper es una versión extendida de otro con el mismo nombre publicado 1 año antes. 
Ambos están incluidos en esta lista.
En este paper se agrega una evaluación con alumnos.
Este paper es más interesante que el anterior por la experiencia con alumnos.
Un objetivo de la prueba era evaluar qué bloques eran más ""intuitivos"": si los asincrónicos o los sincrónicos. Por asincrónicos se refieren a aquellos que se basan en eventos (tipo ""when button is pressed {}"") y los sincrónicos son basados en polling (tipo ""forever { if button is pressed {...}}"").
En los resultados indican que los bloques asincrónicos fueron los más utilizados.
Nosotros podríamos agregar esa sintaxis a Physical Bits sin demasiado problema, lo que haríamos es compilar una task que ejecute el if. Sería syntax sugar nomás... (no sé si vale la pena, la verdad)
Otra cosa interesante que plantean es que algunos alumnos tuvieron dificultades para entender por qué no podían poner algunos bloques adentro de otros: “Why can’t I plug ‘on shake’ (capped block) into my forever block (capped)?”, and “Where do I plug this (condi- tion) block into?”. Aclaración: llaman capped block a los top-blocks.
Otro resultado interesante: el uso del simulador: ""This indicates that those who used the simulator advanced further than those who did not. We attribute the lack of testing via the simulator to incomplete assimilation with the environment""
Más resultados interesantes: ""The flashing process involves three steps: (1) in-browser compilation, a user hits compile in the MakeCode editor; (2) the compiled program is downloaded to the PC; and (3) the user saves or “drags” the compiled program onto the micro:bit, which appears as a USB flash drive. This process was clearly not simple and intuitive for our participants.""","MakeCode 
CODAL runtime","""Participants were over the age of 16""",BBC micro:bit (aunque soportan otros dispositivos),"Presentación/Propuesta de plataforma de programación
Experiencia con alumnos",Sí,"Visual (bloques)
Textual (Typescript)","Sí.
Plantean como una de las claves del diseño que es orientado a eventos y concurrente.","No.
Por la forma en que se baja el programa en la placa seguro que no: ""MakeCode devices appear as USB pen drives when plugged into a computer, thanks to UF2. After a user has finished developing a program, the compiled binary is “downloaded"" locally to the user’s computer (lower-right) and then transferred (flashed) to the MCU by a simple file copy operation.""
Lo que sí tienen es un simulador de la placa, capaz los cambios al programa se pueden ver inmediatamente en el simulador...
UPDATE: Se ve que aprendieron y en una versión más actual pueden conectar (""pair"") el device con el entorno, entonces cuando le dan ""download"" al programa automáticamente lo flashean en el device. Sigue sin ser interactivo, y además tarda varios segundos...","No.
No lo mencionan pero por las mismas razones que puse en ""MONITORING"" yo creo que no.","No?
Mencionan que tienen un in-browser simulator de la placa. Yo calculo que ahí tenés capacidad de monitorear valores de variables y sensores. Pero no es en el robot real.
Lo que me induce a pensar que no soportan monitoreo real es que para bajar el programa en la placa primero lo tienen que compilar y después copiar el archivo generado al device (que se presenta como si fuera un pendrive USB)","Sí.
Los programas se compilan y flashean usando un bootloader personalizado."
SI,10.1108/JET-12-2018-0069,High-functioning autistic children programming robotic behaviour,"Purpose

The purpose of this paper is to examine the ability of high-functioning autistic (HFA) children to programme robotic behaviour and sought to elucidate how they describe and construct a robot’s behaviour using iconic programming software.

Design/methodology/approach

The robotic learning environment is based on the iPad, an iconic programming app (KinderBot), and EV3. Two case studies, of A. and N., both HFA children of average age 10.5, are the focus of this research.

Findings

The research revealed how the participants succeeded in programming the behaviour of an “other” at different programming complexity levels (from simple action to combinations of states of two binary sensors and rule with subroutine). A transformation from procedural to declarative description was also found.

Practical implications

This research on the ability of HFA children to programme robotic behaviour yielded results that can be implemented in K-12 education. Furthermore, learning to programme robots and understand how robotic technologies work may help HFA children to better understand other technology in their environment.

Originality/value

In this research, the authors present an innovative approach that for the first time enables HFA children to “design” the behaviour of smart artefacts to use their sensors to adapt in accordance with the environment. For most HFA children, this would be the first opportunity to “design” the behaviour of the other, as opposed to oneself, since in most of their experience they have been largely controlled by another person.",ar,2019-08-19,Journal of Enabling Technologies,,2-s2.0-85070370844,,,Article,Lahav O.,,Tel Aviv University,Tel Aviv-Yafo,Israel,,,,,19 Aug 2019,,21100818512,23986263,Journal,13,2,,82-91,0,,,,0,2019,https://www.emerald.com/insight/content/doi/10.1108/JET-12-2018-0069/full/html,https://drive.google.com/file/d/1RNtH40gI-yzY0hpropKPw701oiZV0sJP/view?usp=sharing,"Enfocado en los efectos de la programación de robots en chicos con autismo (interesante, capaz sirve para complementar la sección ""Importancia del tema"" en la intro de la tesis)","KinderBot (iPad app?)
Me costó encontrar info online porque hay otro robot que se llama igual, acá está la página correcta: https://appadvice.com/app/kinderbot/1114921562","""average age 10.5""",Lego EV3,Experiencia con alumnos (no podríamos llamarlo experimento ya que cuenta con 2 participantes nada más),No,"Visual (icónico, no sé cómo clasificarlo, son como los bloques tangibles pero en la pantalla, capaz puede compararse a ScratchJr? hay que recordar que es un app de IPad así que estás medio limitado en cuanto a la GUI)
""It applies rule-based programming, a declarative approach to programming, in addition to the standard procedural approach of script programming""","No lo mencionan.
Por lo que describen y por las screenshots pareciera que NO","Parece que SÍ.
""feedback for the programming action is presented immediately by the robot action and not by the researcher""","No lo mencionan.
100% seguro de que NO.","No lo mencionan.
Por las screenshots parecería que NO",No lo mencionan. Creería que SÍ porque el EV3 lo soporta.
SI,10.3390/electronics8080899,Pybokids: An innovative python-based educational framework using real and simulated Arduino robots,"In western countries, robotics is becoming increasingly common in primary and secondary education, both as a specific discipline and a tool to make science, technology, engineering, and mathematics (STEM) subjects more appealing to children. The impact of robotics on society is also growing yearly, with new robotics applications in such things as autonomous cars, vacuum cleaners, and the area of logistics. In addition, the labor market is constantly demanding more professionals with robotics skills. This paper presents the PyBoKids framework for teaching robotics in secondary school, where its aim is to improve pre-university robotics education. It is based on the Python programming language and robots using an Arduino microprocessor. It includes a software infrastructure and a collection of practical exercises directed at pre-university students. The software infrastructure provides support for real and simulated robots. Moreover, we describe a pilot teaching project based on this framework, which was used by more than 2000 real students over the last two years. View Full-Text",ar,2019-08-01,Electronics (Switzerland),,2-s2.0-85071875228,,,Article,Vega J.,,Universidad Rey Juan Carlos,Madrid,Spain,,,,,August 2019,,21100829272,20799292,Journal,8,8,899,,1,,,,12,2019,https://www.mdpi.com/2079-9292/8/8/899,https://drive.google.com/file/d/1CoSHlslyFcbsGBlCHdK5E3zgIw3lyVTr/view?usp=sharing,,Python (PyBoKids es el nombre del framework),"""secondary education""
No especifican las edades pero son todos de españa",MakeBlock mBot (Arduino based: it has an arduino UNO processor),"Propuesta de framework.
Experiencia con alumnos",Sí (armaron una librería para Python+Arduino),Textual,"No lo mencionan, pero es Python (o sea SÍ)","No lo mencionan.
Cuando describen el workflow plantean que la forma normal de programar python es escribir en un editor de texto (ponen de ejemplo gedit) y luego ejecutarlo en la terminal. Si tomamos eso como referencia, la respuesta es que NO aprovechan la interactividad. 
Sin embargo, Python soporta interactividad de múltiples formas: por ejemplo el REPL o las notebooks.
En las conclusiones plantean que están considerando usar notebooks en el futuro.","No lo mencionan.
Entiendo que Python soporta un debugger igual. Pero en la descripción del workflow no hacen mención a esto, sólo dicen que ejecutan los programas desde la terminal.","No mencionan.
No hay nada en la librería/framework que indique que pueden monitorear variables/sensores automáticamente.","No.
Usan Firmata.
""The Arduino microprocessor is too limited to run an on-board Python interpreter. Therefore, a module for the real robot, called realMBot was implemented and programmed as a Python library that runs on the computer and communicates continuously (via USB or via Bluetooth 2.4G) with the physical robot mBot using the Firmata protocol"""
SI,10.1145/3336126,Programming embodied interactions with a remotely controlled educational robot,"Contemporary research has explored educational robotics, but it has not examined the development of computational thinking in the context of programming embodied interactions. Apart from the goal of the robot and how the robot will interact with its environment, another important aspect that should be taken into consideration is whether and how the user will physically interact with the robot. We recruited 36 middle school students to participate in a six-session robotics curriculum in an attempt to expand their learning in computational thinking. Participants were asked to develop interfaces for the remote control of a robot using diverse interaction styles from low-level to high-level embodiment, such as touch, speech, and hand and full-body gestures. We measured students’ perception of computing, examined their computational practices, and assessed the development of their computational thinking skills by analyzing the sophistication of the projects they created during a problem-solving task. We found that students who programmed combinations of low embodiment interfaces or interfaces with no embodiment produced more sophisticated projects and adopted more sophisticated computational practices compared to those who programmed full-body interfaces. These findings suggest that there might be a tradeoff between the appeal and the cognitive benefit of rich embodied interaction with a remotely controlled robot. In further work, educational robotics research and competitions might be complemented with a hybrid approach that blends the traditional autonomous robot movement with student enactment.",ar,2019-07-01,ACM Transactions on Computing Education,,2-s2.0-85069514580,,,Article,Merkouris A.,,Ionian Panepistimion,49100 Corfu,Greece,,,,,July 2019,,19700183047,19466226,Journal,19,4,40,,0,,,,1,2019,https://dl.acm.org/doi/10.1145/3336126,https://drive.google.com/file/d/19uL0js5-sDsutWQWYJSQc79LcXYSKIxU/view?usp=sharing,"No sé si mencionan alguna herramienta de programación para robótica educativa concreta

Usan AppInventor y ScratchX. No son estrictamente hablando herramientas de programación para robótica educativa, pero sí son herramientas de programación para educación y tienen la posibilidad de programar robots de LEGO así que yo creo que cuentan. De última los ponemos en una categoría aparte o aclaramos que son lenguajes para educación con la extención necesaria para programar robots o algo por el estilo
","App Inventor
ScratchX",entre 14 y 15 años,Lego Mindstorms NXT,Experimento con alumnos,No,Visual (bloques),No lo mencionan pero entiendo que SÍ (ambos) porque soportan eventos,"No lo mencionan.

Entiendo que SÍ para ambos también.
En App Inventor podes tener el cel conectado con una app y cuando cambias el programa se actualiza automáticamente (para ver el workflow acá hay un video: https://youtu.be/B78IhTTi1OQ)",No lo mencionan pero NO en ambos casos,No lo mencionan,"No?
No lo mencionan.
Entiendo que no, porque según el diagrama, los programas de AppInventor se ejecutan en el cel y Scratch en la PC. Lo que deben hacer es comunicarse con el robot para mandarle comandos.
"
SI,10.20368/1971-8829/1625,Learning distributed algorithms by programming robots,"The learning process of theoretical concepts such as the model of a distributed environment and different distributed algorithms together with their execution and correctness requires time and is often considered by students a hard and non-challenging issue. In this paper we suggest adopting a more practical approach based on real implementations of distributed algorithms with the help of robots. A learning-by-doing approach can, in our opinion, help students acquiring a deeper knowledge of the model and of the algorithms, and can also stimulate them, and let them improve their teamwork skills. In this paper, we present a specific case study of a practical project, run for two consecutive years at the University Cà Foscari of Venice, inside an International Master of Computer Science course of Advanced Algorithms. The students for their final exam had to work in groups and their task was to design and implement a distributed algorithm to solve an assigned problem, using a Lego Mindstorm EV3 robot and a Makeblock mBot robot. In this paper, we discuss the positive effects of such a non-traditional teamwork approach by analyzing the teacher’s perception, the feasible impact on the students’ grades, and the students’ involvement and positive feeling, highlighted by the results of some questionnaires proposed at the beginning and the end of the projects. We finally discuss the limits of such an approach and possible improvements.",ar,2019-05-01,Journal of E-Learning and Knowledge Society,,2-s2.0-85069749028,,,Article,Luccio F.L.,,Università Ca' Foscari Venezia,Venice,Italy,,,,,May 2019,18266223,17700155804,19718829,Journal,15,2,,89-100,0,,,,3,2019,https://www.je-lks.org/ojs/index.php/Je-LKS_EN/article/view/1135009,https://drive.google.com/file/d/1Yl1TBSIvqMvl3lJ4DHN7elwinQtUq2p_/view?usp=sharing,"Proponen usar robots para enseñar acerca de sistemas distribuidos.
Describen un caso de estudio donde los pibes programaron un robot de Lego EV3 y un MakeBlock mBot robot.",Para el robot mBot aclaran que se programa con C/C++ pero para el EV3 no especifican.,"No dice, pero el estudio lo hicieron con alumnos universitarios para ""Advanced Algorithms at the University Ca’ Foscari of Venice""","Lego EV3
mBot","Propuesta de enseñanza usando robots.
Descripción de experiencia con alumnos.",No,Textual,,,,,
SI,10.17275/per.19.8.6.2,The effect of project-based arduino educational robot applications on students' computational thinking skills and their perception of basic stem skill levels,"The aim of this study is to investigate the effects of project-based arduino educational robot applications on students' computational thinking skills and their perception of Stem skill levels. The study group consists of 6th grade students from 2 different secondary schools from Turkey. Within the scope of the research, classes were assigned to experimental and control groups neutrally. There are 15 students in the control group and 18 students in the experimental group. The experimental study continued for 11 weeks in both groups. In the experimental group, project-based arduino educational robot applications were applied in classes whereas in the control group, project development activities were carried out with block based programming tool. The research data were collected by using the computer-based skill level scale (α = 0.809) and the Basic STEM Skill Levels scale (α = 940). The mean, standard deviation, minimum, and maximum, Mann-Withney U tests were used for independent measurements and the associated measurements were performed on the collected data. At the end of the research, it was determined that activities based on block based robotic programming tool did not have a significant effect on both students' total scores of Stem skills and scores related to factors, but when computational thinking skills were analyzed, it was found that they contributed significantly more than the total score and problem solving factor based on block based programming tool.",ar,2019-01-01,Participatory Educational Research,,2-s2.0-85077355097,,,Article,Karaahmetoğlu K.,,Amasya Üniversitesi,Amasya,Turkey,,,,,2019,,21100911837,21486123,Journal,6,2,,1-14,1,,,,19,2019,https://doi.org/10.17275/per.19.8.6.2,https://drive.google.com/file/d/11aMe7sMiwaDX2A7FU2F7xXVjkVB6H_mV/view?usp=share_link,Hicieron un experimento con alumnos programando arduino usando algún lenguaje de bloques,Scratch for Arduino,"""6th grade students from 2 different secondary schools from Turkey""

entre 11 y 12",Arduino,Experiencia con alumnos,,,,,,,
SI,10.14201/eks2019_20_a17,State of the art in the teaching of computational thinking and programming in childhood education,"Aprender a programar es la nueva alfabetización del siglo XXI. El pensamiento computacional, estrechamente relacionado con la programación, requiere pensar y resolver problemas con diferentes niveles de abstracción y es independiente de los dispositivos de hardware. En este artículo se analizan las principales iniciativas relacionadas con el pensamiento computacional en las escuelas, el uso de herramientas específicas, tales como los kits de robótica o entornos de programación educativa, y principales estrategias de enseñanza-aprendizaje utilizadas en educación infantil.",ar,2019-01-01,Education in the Knowledge Society,,2-s2.0-85075451620,,,Article,González-González C.S.,,Universidad de la Laguna,San Cristobal de La Laguna,Spain,,,,,2019,,21100903490,24448729,Journal,20,,a17,,1,,,,21,2019,https://revistas.usal.es/index.php/eks/article/view/eks20192017,https://drive.google.com/file/d/1cw0BB-R7XSoJ3jzMCPZsM-9aIzDzyE7j/view?usp=sharing,"Puede ser interesante que en una sección describe iniciativas a nivel mundial de introducir el pensamiento computacional como un tema central en la educación (puede servir para complementar en la introducción de la tesis en ""Importancia del tema"").

El paper arma una lista con una breve descripción de distintas herramientas para enseñar programación (tipo ScratchJr), cosa que no nos interesa mucho.
Después hace una lista de juguetes robóticos:
- KIBO: Tangible, el de los bar codes, bastante choto.
- BeeBot y Blue-Bot (igual a beebot pero además lo podés programar desde una app mobile)
- Roamer: Parece ser como beebot pero con la posibilidad de cambiar el módulo del teclado (los botones que tiene encima) permitiéndole soportar instrucciones más complejas (como repetición)
- CUBETTO: Tangible
- Code a pillar: Tangible",Revisar las notas,"No diferencia por herramientas pero son todas para chicos muy chiquitos.
En la sección sobre estrategias pedagógicas plantean el rango 3 a 6 para programación tangible.",Ver las notas,Descripción de juguetes robóticos,No,Tangible y beebots,"No.
No lo mencionan","No.
No lo mencionan","No.
No lo mencionan","No.
No lo mencionan","Sí.
No lo mencionan igual"
SI,10.1109/ACCESS.2019.2895913,A study on the suitability of visual languages for non-expert robot programmers,"A visual programming language allows users and developers to create programs by manipulating program elements graphically. Several studies have shown the benefits of visual languages for learning purposes and their applicability to robot programming. However, at present, there are not enough comparative studies on the suitability of textual and visual languages for this purpose. In this paper, we study if, as with a textual language, the use of a visual language could also be suitable in the context of robot programming and, if so, what the main advantages of using a visual language would be. For our experiments, we selected a sample of 60 individuals among students with adequate knowledge of procedural programming, that was divided into three groups. For the first group of 20 students, a learning scenario based on a textual object-oriented language was used for programming a specific commercial robotic ball with sensing, wireless communication, and output capabilities, whereas for the second and the third group, two learning scenarios based on visual languages were used for programming the robot. After taking a course for programming the robot in the corresponding learning scenario, each group was evaluated by completing three programming exercises related to the robot features (i.e. motion, lighting, and collision detection). Our results show that the students that worked with visual languages perceived a higher clarity level in their understanding of the course exposition, and a higher enjoyment level in the use of the programming environment. Moreover, they also achieved an overall better mark.",ar,2019-01-01,IEEE Access,,2-s2.0-85061816279,,,Article,Rodriguez Corral J.,,Universidad de Cádiz,Cadiz,Spain,,,,,2019,,21100374601,21693536,Journal,7,,8629035,17535-17550,1,,,,9,2019,https://ieeexplore.ieee.org/document/8629035,https://drive.google.com/file/d/14B5nMjRSz4hWDzL3Q4iJPaqI69Gaj-u6/view?usp=sharing,"Es un estudio que trata de medir la eficacia de usar programación visual para introducir conceptos. Puede servir como justificación del modelo híbrido bloques/texto (al margen de la revisión del estado del arte)

""We started by developing three courses for programming the Sphero robot in three learning scenarios: Object-oriented Programming (OOP) in C# using the API for Sphero designed in [23], visual programming using the Sphero Edu app [36] and visual programming using the VEDILS authoring tool.""

Por lo que leí, VEDILS es como una extensión a AppInventor o algo así para generar aplicaciones móviles: necesitás generar el apk para bajarlo al android.","C# (con SpheroOOP)
Sphero Edu (Android app)
VEDILS authoring tool",Entre 18 y 19,Sphero robot,Experimento con alumnos universitarios,"Sí y no.
VEDILS fue desarrollada por los autores.
C# y Sphero Edu obviamente no","VEDILS: Visual (bloques)
Sphero Edu: Híbrido (bloques y texto (JS))
C#: Textual (c#)","En el paper no lo mencionan.

C#: Sí.
Sphero Edu: Sí? (también soporta eventos asincrónicos)
VEDILS: Sí? (es basado en eventos así que asumo que sí)","En el paper no lo mencionan.

Creería que no en ninguno de los 3 casos. En C# obviamente no. Sphero Edu por lo que vi de la pantalla tiene un botón gigante de ""Start"". Y VEDILS requiere generar el apk para correr la app an android, así que tampoco.","No lo mencionan.

En el caso de C# sí, el resto NO.","En el paper mencionan brevemente que VEDILS soporta ""monitoring capacities"", no sé a qué se refieren exactamente pero por lo que ví en la página no parece algo muy automático.
Entiendo que Sphero Edu sí tiene la opción de ver ""Sensor Data"" (porque lo ví en la app en el menú) pero no lo pude probar en una sphero.
Y C# es C#... por sí solo no tiene monitoring, a menos que corras el programa en VS y detengas la ejecución con el debugger, o escribas el código para hacer print de variables y sensores...","No.
En los tres casos los programas corren en la PC o Android."
SI,10.3390/educsci10120387,Teachers’ perspectives on the intertwining of tangible and digital modes of activity with a drawing robot for geometry,"The GeomBot is a drawing robot that combines the well-known strengths and opportunities offered by Scratch with those of Papert’s original robotic drawing-turtle. In this study we look at the GeomBot as a physical programmable artifact around which action research with a group of teachers and a researcher was carried out with the aim of designing, implementing and discussing geometry activities for primary school classes. The aim of this article is to investigate teachers’ positioning and perspectives with respect to the activities and the educational environment emerging around the Geombot in the action research. The action research meetings between September 2018 and June 2019 included nine primary school teachers from seven different Italian schools, who met regularly with the first author. After the design and experimentation sessions, in June 2019, the teachers shared their experiences during a final meeting and group discussion guided by the first author. The data collected from the teachers were analyzed using cultural categories from the Semiotic Systems of Cultural Signification, theorized by the Theory of Objectification, to identify the most significant features defining the teachers’ perspectives and identity. The seven emergent features cover teachers’ positioning with respect to: forms of rationality and language and languages: sensuous cognition and the use of ideal and material semiotic resources; accepted teaching practices, problems and situations; mathematical knowledge; the conception of the student; social interaction and forms of rationality; ethical issues; technology.",ar,2020-12-01,Education Sciences,,2-s2.0-85098232412,,,Article,Baccaglini-Frank A.E.,,Università di Pisa,Pisa,Italy,,,,,December 2020,,21100897500,22277102,Journal,10,12,387,1-21,1,,,,2,2020,https://www.mdpi.com/2227-7102/10/12/387,https://drive.google.com/file/d/1djNNs8iV6B6Wgrh08MBDEKbSYyCdm_ET/view?usp=share_link,"Hicieron un estudio para docentes usando un robot tortuga, según entendí los docentes pusieron a prueba con sus alumnos al turtlebot.
La idea era usar al robot para enseñar geometría en primaria",Scratch,"""in primary school grades"" en Italia

entre 6 y 10","GeomBot, a drawing robot (basado en Arduino)",Experiencia con alumnos,"El lenguaje de bloques (tipo scratch) lo diseñaron ellos. O sea, entiendo que modificaron Scratch para incluir bloques nuevos",Bloques,,,,,
SI,10.1016/j.tsc.2020.100714,"The effect of robotics on six graders’ academic achievement, computational thinking skills and conceptual knowledge levels","This study compared the pedagogical effects of educational robot development and the block-based programming perspectives, which are used in programming education, on middle school students. Its participants were 78 sixth graders. Considering the students’ preferences, 38 students were assigned to the experimental group, which studied with robotics (Lego EV3) sets, and 40 students were assigned to the control group, which studied with block-based programming environment (Scratch). All the topics of the programming unit, which are shown in the methods section, were taught to both groups for 10 weeks using the two different approaches. The change created by the implementation between the groups was tested for academic achievement, computational thinking skill efficacy perceptions, and conceptual knowledge levels. The results indicate that educational robotics develop middle school students’ academic achievement and computational thinking skill efficacy perceptions more effectively than block-based programming environments. The connections between the concepts of the students who did robotics were also found to be more solid than those who worked with block-based software.",ar,2020-12-01,Thinking Skills and Creativity,,2-s2.0-85089921070,S1871187120301887,,Article,Kert S.B.,,Yildiz Technical University,Istanbul,Turkey,,,,,December 2020,18711871,5000154503,,Journal,38,,100714,,0,,,,17,2020,https://www.sciencedirect.com/science/article/abs/pii/S1871187120301887,https://drive.google.com/file/d/1pGeS5pYUs838_mHwplF8dffyrJfze8Os/view?usp=share_link,Hicieron un experimento donde a un grupo les dieron robótica con Lego EV3 y al otro programación en bloques con Scratch,Lego EV3 software,entre 11 y 12,Lego EV3,Experimento con alumnos,No,,,,,,
SI,10.1016/j.scico.2020.102534,EUD-MARS: End-user development of model-driven adaptive robotics software systems,"Empowering end-users to program robots is becoming more significant. Introducing software engineering principles into end-user programming could improve the quality of the developed software applications. For example, model-driven development improves technology independence and adaptive systems act upon changes in their context of use. However, end-users need to apply such principles in a non-daunting manner and without incurring a steep learning curve. This paper presents EUD-MARS that aims to provide end-users with a simple approach for developing model-driven adaptive robotics software. End-users include people like hobbyists and students who are not professional programmers but are interested in programming robots. EUD-MARS supports robots like hobby drones and educational humanoids that are available for end-users. It offers a tool for software developers and another one for end-users. We evaluated EUD-MARS from three perspectives. First, we used EUD-MARS to program different types of robots and assessed its visual programming language against existing design principles. Second, we asked software developers to use EUD-MARS to configure robots and obtained their feedback on strengths and points for improvement. Third, we observed how end-users explain and develop EUD-MARS programs, and obtained their feedback mainly on understandability, ease of programming, and desirability. These evaluations yielded positive indications of EUD-MARS.",ar,2020-12-01,Science of Computer Programming,Adaptive | End-user development | Model-driven | Robots | Visual languages and environments,2-s2.0-85089729103,S0167642320301428,,Article,Akiki P.A.,60068771;60012113,"Notre Dame University, Lebanon;The Open University",Zouk Mosbeh;Milton Keynes,Lebanon;United Kingdom,4,"Akiki, Pierre A.;Akiki, Paul A.;Bandara, Arosha K.;Yu, Yijun",50160938400;57195943457;14009565600;35236020500,60068771;60012113;60012113;60012113,1 December 2020,1676423,28416,,Journal,200,,102534,,0,OU,undefined,Open University,2,2020,https://www.sciencedirect.com/science/article/abs/pii/S0167642320301428?via%3Dihub,https://drive.google.com/file/d/1YAHT1-ZNNaSYH8j-DC6L04MbJ6XM5l63/view?usp=sharing,"Revisar porque parece que se enfocan en end-user programming pero no en educación

Si bien están principalmente enfocados en end-users igual mencionan su utilidad en educación así que yo creo que entra.

Además es interesante el model-driven development approach. No sé cuántos otros habrá en esta categoría...

""Since the converter and the interpreter work dynamically, EUD-MARS can reflect program changes such as adaptation constraints on the fly without having to generate code that requires compilation.""
""The interpreter uses robot APIs to execute actions on robots.""

Obviamente, al estar enfocado en MDD hace mucho énfasis en la reutilización del mismo programa y lenguaje para múltiples robots diferentes. Pero no habla mucho de características como la interactividad, debugging, monitoring, etc.

Hicieron 2 experiencias con usuarios: una con desarrolladores de software que teóricamente deberían poder implementar ""robot profiles""; y otra con end-users, que vendrían a ser los verdaderos usuarios del lenguaje. Ésta última experiencia es la que voy a contar, la otra no sería relevante.

Algo interesante del lenguaje es que tiene la posibilidad de controlar múltiples robots a la vez.
",EUD-MARS,"""between 8 and 17 years""","Lego Mindstorms
VEX
Drones (Parrot Bebop)
NAO
iRobot Create (vacuum cleaner)","Presentación de herramienta.
Experiencia con usuarios finales (no son alumnos porque la herramienta no está diseñada específicamente para enseñar pero igual podría usarse para eso, en teoría)",Sí,Visual (bloques),"Sí.
""A program has an entry action sequence that the program interpreter will execute first. This entry action sequence can call other action sequences that can in turn call others and so on. We already explained in Section 3.4 that the interpreter handles events in parallel with the action sequences to monitor changes to the context of use and apply adaptations accordingly"".
No sé exactamente que significa esto pero como el lenguaje tiene bloques para eventos calculo que la concurrencia está contemplada","No.
A juzgar por las screenshots hay un botón de play que hay que presionar para ejecutar los programas. No sé qué pasa si cambiás el programa mientras se ejecuta.
No sé si lo siguiente significa que los cambios son automáticos pero me parece que va para ese lado: ""Since the converter and the interpreter work dynamically, EUD-MARS can reflect program changes such as adaptation constraints on the fly without having to generate code that requires compilation""","No.
No lo mencionan, pero por lo que ví no tienen nada armado para soportar esto, aunque calculo que no sería difícil de implementar considerando que tienen un intérprete de xml que manda comandos a los robots usando una API.","No.
No lo mencionan pero no parecen tenerlo ni siquiera en cuenta.","No.
Mencionan que el control de los robots se hace usando una API"
SI,10.1080/20473869.2019.1565725,Beneficial effects of robot-mediated class activities on a child with ASD and his typical classmates,"Objective: The current educational intervention investigates how the use of the educational robot as an assistive tool can aid young children with Autism Spectrum Disorder helping them strengthen relationships and improving their interaction with typically developing children.

Method: For this purpose an interdisciplinary road safety program was implemented involving the construction, programming and operation of a 3D LEGO robot bicycle model.

Results: The results showed that the use of educational robotics appeared to bring about a change in the indifferent attitude of the typically developing students towards the students with ASD. In addition in contributed to the development of the social, communicational and emotionsl skills of the child with ASD and lead to a reduction in his challenging behaviors.",ar,2020-05-26,International Journal of Developmental Disabilities,,2-s2.0-85061246448,,,Article,Fachantidis N.,,Panepistimion Makedonias,Thessaloniki,Greece,,,,,26 May 2020,20473869,21100235822,20473877,Journal,66,3,,245-253,0,,,,5,2020,https://www.tandfonline.com/doi/abs/10.1080/20473869.2019.1565725?journalCode=yjdd20,https://drive.google.com/file/d/1va3COPSnht8wXcakbLX7V5f6yFWqlV4a/view?usp=share_link,Cuentan un caso donde trabajaron en un curso donde uno de los chicos era autista,Lego EV3 software?,entre 8 y 9,Lego EV3,Experiencia con alumnos,No,,,,,,
SI,10.1080/15391523.2020.1713263,Informal STEM: learning with robotics and game design in an urban context,"This mixed methods study examined how engagement in robotics and game design influenced students’ self-efficacy, STEM attitudes, and computational thinking (CT) skills. Predominantly African-American students engaged in engineering and computer science tasks during informal learning environments. Results revealed students’ self-efficacy scores on computer gaming increased significantly. Focus group data supported these findings, revealing that computer programing was challenging, but students enjoyed the tasks, added elements of culture in some cases, and valued the agency the tasks provided. Focal students were also able to make connections to STEM-related careers. Observational data demonstrated that focal students exhibited substantive CT during robotics and moderate CT during game design. Results support the idea that robotics and game design may be used to broaden underrepresented students’ participation in STEM.",ar,2020-04-02,Journal of Research on Technology in Education,computational thinking | cultural relevance | game design | robotics | Sattitudes | self-efficacy,2-s2.0-85079404080,,,Article,Newton K.J.,60030398;60014662;60008827;100846004,Temple University;Drexel University;University of Wyoming;Princeton High School,Philadelphia;Philadelphia;Laramie;Princeton,United States;United States;United States;United States,5,"Newton, Kristie J.;Leonard, Jacqueline;Buss, Alan;Wright, Christopher G.;Barnes-Johnson, Joy",26027173600;7402283186;22955340900;56820643600;24467491100,60030398;60008827;60008827;60014662;100846004,2 April 2020,15391523,21100301445,19450818,Journal,52,2,,129-147,0,NSF,DRL 1311810,National Science Foundation,5,2020,https://www.tandfonline.com/doi/full/10.1080/15391523.2020.1713263,https://drive.google.com/file/d/1lYaJaj-GfHeUBKTwNcbEEC_Eqiam1Tsv/view?usp=sharing,"No se si mencionan alguna herramienta de programación de robots concreta

Usan Lego EV3 y NXT. Y también hay otra herramienta gráfica que no sé cuál es...","""MINDSTORMS software""","""third, fourth, and fifth graders (from) elementary school""",Lego NXT y EV3,Experiencia con alumnos,No,Visual (bloques),No mencionan,No mencionan,No mencionan,No mencionan,No mencionan
SI,10.3389/frobt.2020.00021,Identification of the Students Learning Process During Education Robotics Activities,"This paper presents the design of an assessment process and its outcomes to investigate the impact of Educational Robotics activities on students' learning. Through data analytics techniques, the authors will explore the activities' output from a pedagogical and quantitative point of view. Sensors are utilized in the context of an Educational Robotics activity to obtain a more effective robot–environment interaction. Pupils work on specific exercises to make their robot smarter and to carry out more complex and inspirational projects: the integration of sensors on a robotic prototype is crucial, and learners have to comprehend how to use them. In the presented study, the potential of Educational Data Mining is used to investigate how a group of primary and secondary school students, using visual programming (Lego Mindstorms EV3 Education software), design programming sequences while they are solving an exercise related to an ultrasonic sensor mounted on their robotic artifact. For this purpose, a tracking system has been designed so that every programming attempt performed by students' teams is registered on a log file and stored in an SD card installed in the Lego Mindstorms EV3 brick. These log files are then analyzed using machine learning techniques (k-means clustering) in order to extract different patterns in the creation of the sequences and extract various problem-solving pathways performed by students. The difference between problem-solving pathways with respect to an indicator of early achievement is studied.",ar,2020-03-13,Frontiers in Robotics and AI,educational data mining | educational robotics | learning analytics | learning process identification | STEM activities assessment,2-s2.0-85082701724,,,Article,Scaradozzi D.,60210090;60031624;60005141;120591073,Laboratoire d’Informatique et Systèmes;Università Politecnica delle Marche;University College Dublin;TALENT srl,Marseille;Ancona;Dublin;Ancona,France;Italy;Ireland;Italy,4,"Scaradozzi, David;Cesaretti, Lorenzo;Screpanti, Laura;Mangina, Eleni",6504056475;57199050850;57191202791;6602986948,60031624-60210090;60031624-120591073;60031624;60005141,13 March 2020,,21100868821,22969144,Journal,7,,21,,1,FSE,2019-1-IT02-KA201-063073,"Faculty of Science and Engineering, University of Manchester",6,2020,https://www.frontiersin.org/articles/10.3389/frobt.2020.00021/full,https://drive.google.com/file/d/1r5bXcqlUnDbZcatH44Amej4UVzqTxBIU/view?usp=sharing,"El abstract menciona visual programming y EV3, así que entra",Lego EV3 programming language,"Un montón de participantes de distintos colegios.
El promedio de edades fue aprox. 12 años.
Aproximadamente entre 9 y 18",Lego EV3,"Experiencia con alumnos (experimento? o sea, tienen un N muy grande y lo que analizaron es el log, pero no propusieron hipótesis sino que hicieron k-means clustering de los datos. yo creo que no sería un experimento sino un estudio preliminar)","Maso.
O sea, modificaron el software del EV3 para agregar logging pero no cambiaron la forma de programar los robots (es decir, es el mismo lenguaje)",Visual (bloques?),No mencionan,No mencionan,No mencionan,No mencionan,No mencionan
SI,10.3389/fpsyg.2019.02813,Improving Executive Functions at School in Children With Special Needs by Educational Robotics,"Children with Special Needs represent a highly heterogeneous group in terms of neurofunctional, behavioral, and socio-cognitive characteristics, but they have in common a frequent impairment of Executive Functions. Educational Robotics is generally dedicated to study the effects of constructing and programming robots based on children’s learning and academic achievement. Recently, we found that being engaged in progressively more challenging robot planning and monitoring (ER-Lab) promotes visual–spatial working memory and response inhibition in early childhood during typical development, and that an ER-Lab can be a feasible rehabilitative tool for children with Special Needs. The present study aimed to verify the efficacy of the ER-Lab on Executive Functions in children with Special Needs for the first time by using an RCT within their school environment. To pursue these aims, this study reports the results obtained in 42 first-grade children with Special Needs engaged in school Educational Robotics Laboratories (ER-Lab) to promote Executive Functions by means of enjoyable, intensive, and incrementally more challenging activities requiring them to program a bee-shaped robot called Bee-bot® (Campus Store). Several adaptations were done to meet different motor, cognitive, and social needs. All children were evaluated by means of standardized tests performed by each child before and at the end of the ER-Lab activities. Children with Special Needs had significantly improved inhibition skills, and children with attentional impairment had more benefits in their inhibition of motor responses tasks with respect to children with a language deficit. Results of the study and future perspectives on how ER-Lab programs could become a powerful tool in classrooms with children with special needs are discussed.",ar,2020-01-09,Frontiers in Psychology,,2-s2.0-85078229302,,,Article,Di Lieto M.C.,,IRCCS Fondazione Stella Maris,San Miniato,Italy,,,,,9 January 2020,,21100216571,16641078,Journal,10,,2813,,1,,,,8,2020,https://www.frontiersin.org/articles/10.3389/fpsyg.2019.02813/full,https://drive.google.com/file/d/1I2osd9kfTEv3EgQNT3nLZsQSrpGt0G2e/view?usp=share_link,Parece que usaron BeeBot con chicos discapacitados,Bee-Bot,"""first-grade children""

entre 5 y 7",BeeBot,,,,,,,,
SI,10.3991/ijoe.v16i14.17069,MakeCode for Lego Mindstorms EV3,"Computer Science is nowadays very popular and requested in almost all companies. Many companies would like to have more IT professionals. Therefore, we would like to motivate students from the beginning of their education to learn Computer Science, especially programming. There are many educational aids, which could be used for showing students, that programming is not so hard, as they think. The contribution describes our experience with using the online environment Microsoft MakeCode and the most popular educational robot Lego Mindstorms EV3 in an extracurricular activity for primary school children at Matej Bel University, Slovakia. In this paper, we present environment Make-Code and examples of tasks, which we are using for teaching programming in this environment.",ar,2020-01-01,International journal of online and biomedical engineering,block-based language | LEGO EV3 | Microsoft MakeCode | Programming,2-s2.0-85106805750,,,Article,Voštinár P.,60005299,Matej Bel University,Banska Bystrica,Slovakia,1,"Voštinár, Patrik",57189294375,60005299,2020,,21100906923,26268493,Journal,16,4,,42-53,1,,undefined,,0,2020,https://online-journals.org/index.php/i-joe/article/view/17069,https://drive.google.com/file/d/1ptxii7hSA3Poqr1tn3cXQ-rZlme-XjUu/view?usp=sharing,,MakeCode,"""primary school children at Matej Bel University, Slovakia""
entre 11 y 14",Lego EV3,Experiencia con alumnos,No,Híbrido (bloques / código Javascript),No lo mencionan,No lo mencionan,No lo mencionan,No lo mencionan,No lo mencionan
SI,10.1109/ACCESS.2020.3035083,BIPES: Block based integrated platform for embedded systems,"This article proposes the BIPES, a Block based Integrated Platform for Embedded Systems, including its architecture, design and validation results. BIPES is an open source software and service that is freely available through the website http://www.bipes.net.br and has been conceived from our experience of several years developing embedded systems and Internet of Things (IoT) applications, and teaching. It allows anyone to quickly and reliably design, program, build, deploy and monitor embedded systems, IoT devices and applications using blocks or Python based programming. It is fully based on web environment, so absolutely no software installation is needed on the client developer machine. In this way, a tablet, a netbook, a Chromebook or any other device can be used to program and test several types of devices. Mainly, it relies on MicroPython or CircuitPython, WebREPL, WebSockets, Web Serial API, HTML, JavaScript and Google Blockly to allow no-code programming (blocks) to be translated into Python code and then deployed to the target board. Moreover, it does not require server side processing, so it can be deployed as a Progressive Web Application (PWA), allowing it to be used even when the computer is offline. It is compatible with several low cost boards such as: mBed, BBC micro:bit, ESP8266, ESP32 and Raspberry Pi using only a web browser and without the need to install any software on the device where the user develops the programming.",ar,2020-01-01,IEEE Access,Block based programming | Embedded systems | Internet of things | STEAM | Wearable devices programming,2-s2.0-85102840743,,,Article,Da Silva A.G.,60023857;60013792;60008088;125919280,Universidade Federal do Rio Grande do Norte;Universidade Federal de São Carlos;Universidade de São Paulo;Academic Directory,Natal;Sao Carlos;Sao Paulo;Mossoro,Brazil;Brazil;Brazil;Brazil,6,"Da Silva, Andouglas Gonçalves;Gonçalves, Luiz Marcos Garcia;De Paula Caurin, Glauco A.;Tamanaka, Gustavo Teruo Bernardino;Hernandes, André Carmona;Aroca, Rafael Vidal",57222476448;8843298100;6602494854;57222473694;55303714300;24490519000,125919280;60023857;60008088;60008088;60013792;60013792,2020,,21100374601,21693536,Journal,8,,,197955-197968,1,FAPESP,2017/01555-7,Fundação de Amparo à Pesquisa do Estado de São Paulo,2,2020,https://ieeexplore.ieee.org/document/9246562,https://drive.google.com/file/d/1cr5HWXRBhbMJUD9fxVRH3O3OWmFsMpCx/view?usp=sharing,"Proponen una herramienta llamada BIPES que básicamente es programación visual (con bloques) que se compila a código python. Y se ejecuta con MicroPython o CircuitPython en los devices.

""Both MicroPython and CircuitPython allow a direct read– eval–print loop (REPL) interactive shells over serial (USB) port.""

En las versiones más nuevas soportan Arduino UNO, para chequear: http://www.bipes.net.br/ide/",BIPES,No explicitan las edades,"Devices que soportan MicroPython o CircuitPython (Mbed- nucleo, m5stick-m5stack, Wemos d1 mini, ESP8266, ESP32, bbc micro:bit)
Devices que soportan Linux+Python (Toradex modules, PC104 and other devices, Beaglebone, Raspberry - any version)",Descripción de herramienta (lenguaje visual),Sí,Visual (bloques),"No lo mencionan.
Por los ejemplos pareciera que no","No lo mencionan, sólo dicen que el proceso de generación de código, transmisión, y startup tarda unos ms. Pero por lo que ví, la acción de ejecutar el programa es siempre manual.
""Note that the code generation, transmission and startup operation runs in a few milliseconds, allowing to perform quickly and simply the testing and debugging steps""","No lo mencionan.
Por las imágenes y descripción creería que NO","Sí
""With the data sent to the server, it is possible to view such data in a graph (single or multi-line), with configurable parameters, such as line names, date and time interval. It is also possible to view a real time graph, with automatic updates of the data sent to the server or to view a table with real time updates""","Sí.
Usan MicroPython/CircuitPython, que corre en los devices"
SI,10.1109/ACCESS.2020.3015533,A Computation Model for Learning Programming and Emotional Intelligence,"Introducing coding in early education improves the logical and computational thinking in kids. However, cognitive skills are not sufficient for a successful life. Understanding and managing the emotions of oneself is another crucial factor in success. The current state of the art teaching methods educates the kids about programming and emotional intelligence independently. In our opinion, it is advantageous to teach kids emotional intelligence, along with the programming concepts. However, the literature lacks the studies that make students emotionally aware while teaching them programming. This research aims to prepare students to be cognitively healthy as well as emotionally intelligent with the hypothesis that a kid's emotional intelligence can be enhanced while teaching them cognitive skills. We proposed a computational model that teaches programming and emotional intelligence side by side to students. The model provides a curriculum and related tools. For evaluations, five hundred students of a public school were involved in different activities to find the effectiveness of the proposed model. These students were divided into five groups (A, B, C, D, and E), each having a mean age of 4, 5, 6, 7, and 8 years, respectively. Students performed multiple adaptive scenarios of path-finding that were based on self-awareness, social-awareness, sharing, and empathy emotions. Students provide the programming instructions such as sequencing, conditional statements, and looping to a robot. The children have successfully improved in both fundamental programming constructs and emotional intelligence skills. The research also successfully reduced screen time problem by providing a screen-free student interface.",ar,2020-01-01,IEEE Access,basic programming | Emotional intelligence | robots based learning | screen-free interface,2-s2.0-85091848953,,,Article,Rafique M.,60138780;60056462,"University of Sialkot;University of Engineering and Technology, Lahore",Sialkot;Lahore,Pakistan;Pakistan,5,"Rafique, Memoona;Hassan, Muhammad Awais;Jaleel, Abdul;Khalid, Hina;Bano, Gulshan",57220472844;57221640958;57202131762;57201591732;57218550495,60056462;60056462;60056462;60056462;60138780,2020,,21100374601,21693536,Journal,8,,9163380,149616-149629,1,,undefined,,1,2020,https://ieeexplore.ieee.org/document/9163380,https://drive.google.com/file/d/1eJOjjSBOKc0PdgWZn_4KcOXrYPsF2WTM/view?usp=sharing,"Juzgando por las imágenes mencionan algunas herramientas de programación por bloques para robots simulados y también un robot que, según entiendo, se puede programar dibujando órdenes en un papel (parece muy interesante)

Si incluimos la programación de bee-bot con lo limitada que es, esta forma de programar el robot con dibujos en papel debería entrar también. Pero no sé cómo clasificarla...","Blockly.
Dibujo en papel que el robot escanea y reconoce (cómo lo clasificaríamos a esto??)",entre 4 y 8,COZMO robot,Experimento con alumnos,"Sí
""We reprogrammed COZMO’s SDK to make it work according to our research specifications and trained it on symbols of left, right, up, down, and loop sequencing""","Visual (bloques)
Dibujos en papel (tangible???)","No.
No lo mencionan","No.
No lo mencionan","No.
No lo mencionan","No.
No lo mencionan","Sí.
No lo mencionan"
SI,10.3390/educsci10080202,The acquisition of computational thinking through mentoring: An exploratory study,"Educational robotics are commonly present in kindergarten and primary school classrooms, particularly Bee-bot. Its ease of use allows the introduction of computer programming to young children in educational contexts from a science, technology, engineering, arts, and mathematics (STEAM) perspective. Despite this rise, there are still few investigations that collect evidence on the effectiveness of robotic interventions. Although mentoring experiences with robotics had been carried out in educational contexts, this work explores their effect on the acquisition of computational thinking skills through mentoring. Participants from the second grade, aged seven through eight years, were exposed to two sessions of robotics with Bee-bot in order to promote hands-on experimentation. The sessions were conducted by nine students of the fourth grade (the mentors), aged 10 to 11 years. A descriptive case-study methodology was employed for the analysis of the mentoring intervention. The effect of the mentoring experience was assessed in terms of motivation and computational thinking skills. Mixed quantitative and qualitative results show two important findings: (i) Mentoring is a powerful tool to be considered for improvement of the motivation and cooperation of students in their teaching–learning process, and (ii) computational thinking skills can be acquired by second-grade students through a mentoring process.",ar,2020-01-01,Education Sciences,Bee-bot | Computational thinking | Educational robotics | Mentoring | STEAM model,2-s2.0-85090618398,,,Article,Cervera N.,60104175;60002644,International University of La Rioja;Universitat de València,Logrono;Valencia,Spain;Spain,4,"Cervera, Núria;Diago, Pascual D.;Orcos, Lara;Yáñez, Dionisio F.",57218901805;36631666400;57113753600;54891906000,60002644;60002644;60104175;60002644,2020,,21100897500,22277102,Journal,10,8,202,1-11,1,GVA,GV/2019/146,Generalitat Valenciana,3,2020,https://www.mdpi.com/2227-7102/10/8/202,https://drive.google.com/file/d/1d01d3Dzk2lRgnDHDd5g-KOZrTjRcKl2-/view?usp=sharing,"Mencionan bee-bots y una interfaz de programación tangible.
No sé si la programación tangible cuenta como entorno pero sí es una herramienta así que la incluyo en el análisis. Después capaz puedo agrupar todos los lenguajes tangibles y analizarlos juntos...

Bee-bots lo incluí en los otros casos. Y programación tangible también así que adentro.

En este estudio lo que analizan es el impacto del ""mentoring"", hicieron una especie de taller para chicos entre 7 y 8 años donde los que llevaban adelante el taller (los mentores) eran pibes entre 10 y 11 años.",BeeBot,"participantes: 7 y 8.
mentores: 10 y 11",Beebot,Experiencia con alumnos (creo que no califica como experimento),No,Tangible,,,,,
SI,10.1109/ACCESS.2020.2972410,LearnBlock: A Robot-Agnostic Educational Programming Tool,"Education is evolving to prepare students for the current sociotechnical changes. An increasing effort to introduce programming and other STEM-related subjects into the core curriculum of primary and secondary education is taking place around the world. The use of robots stands out among STEM initiatives, since robots are proving to be an engaging tool for learning programming and other STEM-related contents. Block-based programming is the option chosen for most educational robotic platforms. However, many robotics kits include their own software tools, as well as their own set of programming blocks. LearnBlock, a new educational programming tool, is proposed here. Its major novelty is its loosely coupled software architecture which makes it, to the best of our knowledge, the first robot-agnostic educational tool. Robot-agnosticism is provided not only in block code, but also in generated code, unifying the translation from blocks to the final programming language. The set of blocks can be easily extended implementing additional Python functions, without modifying the core code of the tool. Moreover, LearnBlock provides an integrated educational programming environment that facilitates a progressive transition from a visual to a general-purpose programming language. To evaluate LearnBlock and demonstrate that it is platform-agnostic, several tests were conducted. Each of them consists of a program implementing a robot behaviour. The block code of each test can run on several educational robots without changes.",ar,2020-01-01,IEEE Access,Educational tool | learning programming | robot-agnostic | software architecture,2-s2.0-85079752882,,,Article,Bachiller-Burgos P.,60017838;60014551;123935047,Universidad de Extremadura;Aston University;Research and Development Department,Badajoz;Birmingham;Caceres,Spain;United Kingdom;Spain,5,"Bachiller-Burgos, Pilar;Barbecho, Ivan;Calderita, Luis V.;Bustos, Pablo;Manso, Luis J.",57205017211;57215036018;36679851100;7004104374;56602601300,60017838;123935047;60017838;60017838;60014551,2020,,21100374601,21693536,Journal,8,,8986589,30012-30026,1,,GR18133,,4,2020,https://ieeexplore.ieee.org/document/8986589,https://drive.google.com/file/d/1tCsLq2bM2K7WS7AcjVRlf8QBXNjROBfG/view?usp=sharing,"Proponen una herramienta llamada LearnBlock, que se supone que es un lenguaje visual para robótica educativa que genera python y es robot-agnostic.

Una característica copada es que LearnBlock permite al usuario escribir código en el target language directamente, no es sólo bloques: ""In LearnBlock the user can directly write the code in the target language, specifying the state- ments that must be executed when the program flow reaches that point""",LearnBlock,No especifican,"Robot-agnostic.
En realidad lo que hicieron es un generador de código python pero el control de los robots se hace mediante una especie de ""cliente"". Para asegurarse el diseño agnóstico lo que tienen es un cliente genérico y agregar nuevos robots es hacer una subclase de este cliente genérico que implemente los métodos para conectarse/desconectarse con el robot y el protocolo de comunicación.",Descripción de herramienta (lenguaje visual/textual),Sí,"Híbrido (bloques/código)
La generación de código tiene 3 pasos: bloques (visual), block-text (textual), python (textual). El 2do paso es un lenguaje textual más cercano a los bloques que a python. Los usuarios pueden modificar cualquiera de las 3 representaciones. No sé qué pasa si querés volver a los bloques después de modificar el código.","Sí.
Mencionan que el lenguaje está basado en eventos.","No lo mencionan, pero parece que No.","No.
No lo mencionan",No lo mencionan pero no pareciera que lo soporten activamente.,"No.
Por lo que entendí, el código generado es sólo un cliente que se comunica con el robot. No se ejecuta directamente en el robot el programa."
SI,10.1002/cae.22184,Robotic system education for young children by collaborative-project-based learning,"This paper presents the fusion of project-based learning (PBL) and collaborative learning (CL) cohesively, coordinated with sensors and Bluetooth advancements, open-source programming, and open-source equipment devices, in a specific microcontroller and installed frameworks designing apply autonomy course for the elementary learners. The major purpose of this study is to evaluate the significance of integrating PBL and CL. The course creates capacities and abilities in critical thinking, problem-solving, independent learning, collaboration, and specialized technical information. Since PBL alone does not guarantee profoundly talented cooperation, it was supplemented with CL. This structure coordinated course substance and understudy pragmatic accomplishment in a reenacted learning environment. The understudies built a line following and Bluetooth-controlled robots by actualizing control programming on the “Arduino” open-source platform, just as utilizing remote interchanges as Arduino offers an instinctive advancement condition and different equipment and programming resources that permit quick improvement of microcontroller-based ventures. The basic findings of this study work reveal that teaching, learning, and student assessment processes can be improved by using PBL when integrated with CL. The research successfully extends onto another group of learners for preparing similar gadgets under different timelines. In addition, this paper also discusses upon the problem identification, selection of the equipment, circuit design, hardware mounting, and critical analysis of the results acquired from the course through the personal learning experience of the teachers as well as in the form of feedback from the two groups of young learners.",ar,2020-01-01,Computer Applications in Engineering Education,cognitive development | collaborative learning (CL) | integrated learning | open-source platform | project-based learning (PBL) | robotics,2-s2.0-85075951428,,,Article,Jawaid I.,60121158;60105168;60103839,University of Education;COMSATS Institute of Information Technology Lahore;University of Central Punjab,Lahore;Lahore;Lahore,Pakistan;Pakistan;Pakistan,6,"Jawaid, Iqra;Javed, Muhammad Yaqoob;Jaffery, Mujtaba H.;Akram, Aftab;Safder, Umair;Hassan, Sarmad",57191953662;57189049928;55776160200;55080293500;57212103101;57204650056,60103839;60105168;60105168;60121158;60105168;60105168,1 January 2020,10613773,18156,10990542,Journal,28,1,,178-192,0,,undefined,,9,2020,https://onlinelibrary.wiley.com/doi/10.1002/cae.22184,https://drive.google.com/file/d/1EKm7jlBkwSjLzRR_BbFFmTapbBOe9Dji/view?usp=sharing,"""The purpose of this study is to present an instructional design framework based on PBL and CL""
""This paper also presents the hardware and software‐ based PBL methodologies to teach robotics courses to primary level learners using open‐source hardware and software tools.""",Arduino C,entre 10 y 18,Arduino (no especifican qué version),"Propuesta de curso.
Experiencia con alumnos",No,Textual,"No.
No lo mencionan","No.
No lo mencionan","No.
No lo mencionan","No.
No lo mencionan","Sí.
No lo mencionan"
SI,10.3390/electronics10243056,Hydra: Introducing a low-cost framework for stem education using open tools,"STEM education is of paramount importance, especially in the lower levels of education, and it has been proven beneficial for students in many ways. Although there are various tools available, there are significant drawbacks mainly related to the cost and the ease of use. In this study, we introduce a new low-cost educational framework oriented toward elementary and secondary educational needs. The proposed system exploits open tools and low-cost devices. The system’s core is based on the popular Arduino microcontroller, a low-cost device supported by a large community. The overall system was designed and developed, providing an expandable, modular system of low complexity suitable for students with no or low prior knowledge in related subjects, among others, to programming, embedded devices, sensors and actuators, as well as robotics. Our scope was to provide a system with a small learning curve. Practically, this makes it possible in a short amount of time for the students to perform appealing yet straightforward tasks which will boost their selfconfidence and creativity, improve their technical skills and simultaneously provide a system with several capabilities usable in different kinds of projects. The introduced system was tested through a preliminary study using flow theory in a team of 68 students of the three last grades in an elementary school in Greece.",ar,2021-12-01,Electronics (Switzerland),Arduino | Petri Nets | STEM educational tool,2-s2.0-85120797336,,,Article,Tsalmpouris G.,60113886;60032307;60022461;60001524,Neapolis University Pafos;Hellenic Mediterranean University;Technical University of Crete;University of Crete,Paphos;Heraklion;Chania;Rethymnon,Cyprus;Greece;Greece;Greece,5,"Tsalmpouris, Georgios;Tsinarakis, George;Gertsakis, Nikolaos;Chatzichristofis, Savvas A.;Doitsidis, Lefteris",57366340500;6507651255;57214316178;24337339000;6507412220,60032307;60022461;60001524;60113886;60022461,December-2 2021,,21100829272,20799292,Journal,10,24,3056,,1,,undefined,,0,2021,https://www.mdpi.com/2079-9292/10/24/3056,https://drive.google.com/file/d/1acT_R4jpWta55hAsgiRGDsp6tAMMXZS3/view?usp=sharing,"Presentan un framework de bajo costo llamado Hydra, que se basa en una extensión del Arduino MEGA y del lenguaje Ardublockly.

Por lo que vi de las fotos usan Ardublockly (modificado con sus propios bloques?)
Sería interesante en el análisis ver cuántos proyectos desarrollan su propio lenguaje, cuántos usan uno ya existente sin modificar y cuántos adaptan uno existente

Después hacen algo con Petri nets que no entendí bien.

""We decided to perform a preliminary pilot study in primary education to identify the feasibility of our proposed approach""",Ardublockly (+ bloques específicos para los módulos de Hydra),"El objetivo de la herramienta son chicos entre 9 y 15 años.
Pero la prueba piloto la hicieron con un grupo de entre 9 y 12.",Hydra modules (based on Arduino MEGA 2560),"Propuesta de herramienta educativa (placa de bajo costo + lenguaje visual).
Experiencia con alumnos.","Sí.
Extendieron Ardublockly con bloques propios (pero sigue siendo ardublockly)",Visual (bloques),"No.
No lo mencionan.","No.
No lo mencionan","No.
No lo mencionan.","No.
No lo mencionan","Sí.
No lo mencionan"
SI,10.1007/s10758-021-09508-3,Learning Newtonian Physics through Programming Robot Experiments,"Novel technology has been applied to improve students’ learning abilities in different disciplines. The research in this field is still finding suitable methodologies, tools, and evaluation mechanisms to devise learning frameworks with high impact on students’ performance. This article describes an instructional method to perform Newtonian physics experiments by programming a mobile robot. Such experiments allow the learners to design, implement and visualize physics concepts, thus using the robot as a cognitive tool or mindtool. An accurate assessment of the students learning gain, involving 29 high-school students, shows that the proposed method provided significant improvements in the students understanding of the first Newton’s law, the second Newton law and the superposition principle. The learning gain has been measured through the Force Concept Inventory questionnaire. From this study, we can state that programming a mobile robot to perform physics experiments can improve knowledge about Newtonian physics, even without giving specific lectures in the subject and with a much shorter lecture plan with respect to traditional lectures.",ar,2021-12-01,"Technology, Knowledge and Learning",,2-s2.0-85103041796,,,Article,Ferrarelli P.,60032350,Sapienza Università di Roma,Rome,Italy,2,"Ferrarelli, Paola;Iocchi, Luca",57195639687;6602922345,60032350;60032350,December 2021,22111662,19700200832,22111670,Journal,26,4,,789-824,1,NSF,undefined,National Science Foundation,0,2021,https://link.springer.com/article/10.1007%2Fs10758-021-09508-3,https://drive.google.com/file/d/1UILfyfjCr_YnHJ2duXLmaddQ_9KDFIe9/view?usp=sharing,"Por lo visto usaron un robot simil Mendieta, pero con un Arduino más poderoso:
MARRtino mobile robot (a box chassis made of Plexiglas, two motors with encoders, an Arduino Mega 2560 running the frmware to control the motors, a Motor Shield to drive the two motors, a 12V battery, a LED display to show the battery voltage, a switch to turn on/of the robot, a charger, and a Raspberry Pi to run high-level programs)

Ugh... usan ROS.

""high-level user-friendly graphical user interface""

Pueden correr los programas en el robot real o en un simulador, interesante.

""Once ROS nodes and services are started, the robot can be programmed in diferent ways through high-level commands that activate specifc behaviors of the robot. Table 1 summarizes such high-level commands in Python style. (...) The programming experience was made more user-friendly using Blockly""

","Lenguaje propio (blockly)
Python","""high school students""
""15–19 years old""",Arduino MEGA 2560 + Raspberry Pi,Experimento con alumnos usando un robot y herramientas custom,"Sí.
Usaron blockly para generar código python que después se ejecuta en el robot","Visual (bloques)
Textual (python)","No.
No lo mencionan, pero el lenguaje visual no parece tener ninguna funcionalidad del estilo","No.
No lo mencionan, pero por la GUI parece que hay un botón para correr el código y para parar la ejecución","No.
No lo mencionan. Supongo que si están ejecutando python lo podrían debuggear pero la herramienta gráfica no tiene nada del estilo","No.
No lo mencionan. En la captura de pantalla de la GUI no se ve nada que permita inspeccionar o visualizar variables/sensores.","Sí.
No lo mencionan pero a juzgar por el hardware del robot seguro que puede funcionar de forma autónoma."
SI,10.1111/jcal.12570,Comparing learning ecologies of primary graphical programming: create or fix?,"In the last few years, programming, computational thinking, and robotics are more frequently integrated into elementary education. This integration can be done in many different ways. However, it is still unclear which teaching methods work in which situations. To provide some clarity in this area, we compared two methods of integrating programming into a primary robotics workshop for learners aged ten to twelve. In one method, students create programs from scratch; in the other, they start with a faulty program they have to fix. These teaching methods were evaluated using the framework of learning ecology, which provides a holistic framework for assessing complex learning environments. We identified different indicators of learning ecology and assessed our workshops using a mixed-methods approach. Our results showed no difference between the groups on the intrinsic dimension of a learning ecology. However, on the experiential dimension, the learners in the create group scored better on all tests. Our results show the value of a multidimensional assessment of learning ecology to understand different teaching techniques. Additionally, the results provide us with important insights on how to integrate programming into a primary robotics curriculum enabling teachers to select better methods for teaching computing in their classroom.",ar,2021-10-01,Journal of Computer Assisted Learning,computational thinking | emotion | learning ecology | programming,2-s2.0-85106655051,,,Article,Neutens T.,60033316,Universiteit Gent,Ghent,Belgium,4,"Neutens, Tom;Barbion, Evelien;Coolsaet, Kris;wyffels, Francis",57191870089;57223964394;8927749700;25822742900,60033316;60033316;60033316;60033316,October 2021,2664909,26183,13652729,Journal,37,5,,1296-1311,0,,undefined,,0,2021,https://onlinelibrary.wiley.com/doi/10.1111/jcal.12570,https://drive.google.com/file/d/1LJ8E1F2M-FiB_QQuKVyftYX2l0ydT8lX/view?usp=sharing,"Revisar... no sé si menciona una herramienta concreta

Interesante lo que mencionan de la ventaja de haber creado una herramienta propia: ¡que podés modificarla para loguear todas las interacciones del usuario con la herramienta! Esto lo podemos usar en nuestro experimento de usabilidad para sacar alguna medición (hay que ver si es una medición útil, por otro lado)
""The final measure we used is the interactions learners had with the programming environment. Since we created the programming environment ourselves, we were able to log all interactions learners had with the environment. We performed a quantitative analysis of these interactions by counting how many times each of the following interactions occurred: total number of code changes, number of programs containing a conditional statement, number of programs containing a loop statement, number of programs containing a wait instruction. This logging data gives us more insight into the actions learners take and how they use the available resources resulting in more information about the experiential dimension of a learning ecology.""

Interesante que agregaron un simulador y el debugger. El simulador es bastante pedorro, similar al de micro:bit que te muestra una representación gráfica de la placa y podés ejecutar el código y ver cómo cambia el estado.

El experimento trata de ver si hay diferencias entre actividades donde los piben tienen que programar todo desde cero vs el programa está incompleto (o mal) y ellos lo tienen que terminar. Conclusiones:
""Overall, our study has shown that integrating programming into a realistic primary robotics workshop is best done using the create method. It gives learners the freedom to explore different programming concepts at their own pace. This gives them more insight into the programming concepts and shows the value of concepts like iteration, which facilitates the learning process. This method takes a more gentle approach when introducing programming resulting in a more pleasant learning process with less negative emotions and more engagement. This pleasant learning experience also results in better test scores""",Herramienta personalizada (basada en Blockly),entre 10 y 12,"A custom-designed Arduino-based microcontroller board with a LCD-screen, 9 LED, a buzzer, five buttons, and a built in motor driver to control different types of motors",Experimento con alumnos,"Sí.
""A tailor-made open-source graphical programming environment based on Google Blockly,2 which includes a robotic simulator and debugger""
""The most important extension is the simulator view. This view provides the learners with a simulated environment in which they can test their code""",Visual (bloques),No lo mencionan,"No.
No lo mencionan","Más o menos.
Mencionan step by step debugging pero me parece que es sólo en el simulador...","No.
Excepto por el simulador, no parece que tengan feedback del robot real","Sí.
Mencionan que pueden uploadear el programa al microcontrolador"
SI,10.3390/s21186243,The data sensor hub (Dash): A physical computing system to support middle school inquiry science instruction,"This article describes a sensor-based physical computing system, called the Data Sensor Hub (DaSH), which enables students to process, analyze, and display data streams collected using a variety of sensors. The system is built around the portable and affordable BBC micro:bit microcontroller (expanded with the gator:bit), which students program using a visual, cloud-based programming environment intended for novices. Students connect a variety of sensors (measuring temperature, humidity, carbon dioxide, sound, acceleration, magnetism, etc.) and write programs to analyze and visualize the collected sensor data streams. The article also describes two instructional units intended for middle grade science classes that use this sensor-based system. These inquiry-oriented units engage students in designing the system to collect data from the world around them to investigate scientific phenomena of interest. The units are designed to help students develop the ability to meaningfully integrate computing as they engage in place-based learning activities while using tools that more closely approximate the practices of contemporary scientists as well as other STEM workers. Finally, the article articulates how the DaSH and units have elicited different kinds of teacher practices using student drawn modeling activities, facilitating debugging practices, and developing place-based science practices.",ar,2021-09-01,Sensors,Inquiry science education | Programmable sensors in education | Sensor use in education,2-s2.0-85115046074,,34577450,Article,Gendreau Chakarov A.,60031706;60015609;60000221,Utah State University;San Jose State University;University of Colorado Boulder,Logan;San Jose;Boulder,United States;United States;United States,4,"Gendreau Chakarov, Alexandra;Biddy, Quentin;Hennessy Elliott, Colin;Recker, Mimi",57208306482;57215850015;57190813463;6603456885,60015609;60000221;60031706;60031706,September 2021,14248220,130124,,Journal,21,18,6243,,1,NSF,1742046,National Science Foundation,0,2021,https://www.mdpi.com/1424-8220/21/18/6243,https://drive.google.com/file/d/1AZJfSXAZPtXuskwGoGgFuo-NpqJUgUok/view?usp=sharing,"""The purpose of this article is to describe a sensor-based physical computing system, called the Data Sensor Hub (DaSH), which integrates low-cost, portable, and easily programmable technologies to support students in engaging in a range of science inquiry activities""",MakeCode,"""middle school science classroom""",BBC micro:bit microcontroller expanded with the gator:bit),"Describe una herramienta para physical computing.
También describe los resultados de llevar a cabo experiencias con alumnos",No,"Híbrido (bloques / js y python).
En la propuesta mencionan que se basan en los bloques pero que la ventaja de MakeCode es que los pibes pueden después pasar a programar en Javascript o Python",No mencionan,"Otro paper que destaca como el proceso de bajar el programa al micro:bit es una cagada:
""Students have to download the file from MakeCode to their laptop and then transfer it to the micro:bit. Students are unfamiliar with this process and cannot easily tell if the process was completed correctly.""",No mencionan,Mencionan el uso de la placa como un data logger,No mencionan (excepto el tema de que bajar el programa copiando el archivo puede ser problemático para algunos pibes)
SI,10.3390/educsci11090518,Fostering computational thinking skills: A didactic proposal for elementary school grades,"There is a growing presence of technology in the daily lives of elementary school students, with a recent exponential rise due to the constraints of remote teaching during the COVID-19 pandemic. It is important to understand how the education system can contribute to helping students develop the required skills for technological careers, without neglecting its obligation to create conditions that allow them to acquire transversal skills and to enable them to exercise full citizenship. The integration of Educational Robotics and block programming activities in collaborative learning environments promotes the development of computational thinking and other ICT skills, as well as critical thinking, social skills, and problem solving. This paper presents a theoretical proposal of a didactic sequence for the introduction to educational robotics and programming with Scratch Jr. It is composed of three learning scenarios, designed for elementary school teaching. Its main goal is to create conditions that favour the development of computational thinking in a collaborative learning environment. With increasing complexity and degree of difficulty, all the tasks root from a common problem: How can we create an algorithm that programs the robot/sprite to reach a predetermined position?.",ar,2021-09-01,Education Sciences,Collaborative learning | Computational thinking | Educational robotics | Elementary school | Scratch Jr,2-s2.0-85114844450,,,Article,Silva R.,60170534;60027072;60017375;60014519,Centro de Investigação Didática e Tecnologia na Formação de Formadores (CIDTFF);Instituto Politcnico de Coimbra;Instituto de Telecomunicacoes;University of Trás-os-Montes and Alto Douro,Aveiro;Coimbra;Lisboa;Vila Real,Portugal;Portugal;Portugal;Portugal,4,"Silva, Ricardo;Fonseca, Benjamim;Costa, Cecília;Martins, Fernando",57224874712;34968950600;7201473794;57217191490,60014519-60170534-60027072;60014519;60014519-60170534;60027072-60017375,September 2021,,21100897500,22277102,Journal,11,9,518,,1,FCT,2020.06821,Fundação para a Ciência e a Tecnologia,0,2021,https://www.mdpi.com/2227-7102/11/9/518,https://drive.google.com/file/d/1P1BLM8itAxVL0YXOl7IWIePmOVQaZ2EV/view?usp=sharing,"""This paper presents a theoretical proposal of a didactic sequence for the introduction to educational robotics and programming with Scratch Jr""","Usan ScratchJr y el Robot DOC, pero por lo que entendí en la secuencia didáctica ScratchJr sólo lo usan para mover un sprite en pantalla (no para programar el robot).
Y el robot DOC es tipo BeeBot así que no tiene un lenguaje aparte","""elementary school teaching""",DOC robot by Clementoni,Propuesta de secuencia didáctica,No,Tipo beebot,No mencionan,No mencionan,No mencionan,No mencionan,No mencionan
SI,10.1016/j.compedu.2021.104222,Learning to code and the acquisition of computational thinking by young children,"This longitudinal study examined changes in Computational Thinking (CT) skills in first and second grade students exposed to a developmentally appropriate coding curriculum. The “Coding as Another Language” (CAL) curriculum spans seven weeks and uses the KIBO robot to engage students in learning that integrates programming and literacy concepts. We compared children receiving CAL (N = 667) to a control group (N = 181) who participated in typical classroom activities without coding (No-CAL). TechCheck, a validated “unplugged” CT assessment suitable for young children regardless of their coding experience, was used to measure CT. Over the course of the study, children who received CAL-KIBO improved on TechCheck (Mchange = 0.94, p < .001) whereas the No-CAL group did not change significantly (Mchange = 0.27, p = .07). Accounting for demographic factors, baseline performance and classroom (teacher) effects, CAL exposure was a significant predictor of post-test CT scores (p < .01). Improvements in CT measured by TechCheck over seven weeks of the CAL-KIBO curriculum were consistent with approximately six months of development without coding instruction. Secondary analysis stratified by grade revealed decisive evidence that CAL exposure improved scores in first grade and anecdotal evidence that second grade scores improved. The CT domains that showed improvement in children who received CAL-KIBO included algorithms, modularity, and representation. Young children who learned to code improved in solving unplugged problems that were not explicitly taught in the coding curriculum. This provides evidence that a developmentally appropriate curriculum for teaching young children to code can accelerate their acquisition of CT skills.",ar,2021-08-01,Computers and Education,Coding | Computational thinking | Curriculum | Early childhood education | Unplugged assessment,2-s2.0-85104914388,S0360131521000993,,Article,Relkin E.,60023143,Tufts University,Medford,United States,3,"Relkin, E.;de Ruiter, L. E.;Bers, M. U.",57202532295;57217890756;57203655429,60023143;60023143;60023143,August 2021,3601315,17645,,Journal,169,,104222,,0,CAL,undefined,"College of Arts and Letters, San Diego State University",6,2021,https://www.sciencedirect.com/science/article/abs/pii/S0360131521000993?via%3Dihub,https://drive.google.com/file/d/1F54VQeNbY4pF2a8mdGv_FN79y-aE7vnP/view?usp=sharing,"Interesante. Compara la efectividad de aprender programación de forma ""unplugged""",KIBO blocks,"""children between ages 5 and 9 (first and second grade)""",KIBO robot,Experiencia con alumnos,No,Tangible,No mencionan,No mencionan,No mencionan,No mencionan,No mencionan
SI,10.1109/RITA.2021.3089919,Robotics as a Tool to Awaken Interest in Engineering and Computing among Children and Young People,"Training is critical on engineering and technology disciplines, and it must be used to encourage today's children and youngsters to become the engineers and scientists of the future. For this reason, the Techno Museum Project carried out a series of workshops that used robotics as a motivational item to bring electronics and programming closer to children from 6 to 18 years. These topics are, a priori, commonly considered complex. The effects of these experiences on engineering and science understanding were analyzed. This work presents those analyses, which prove that learning scenarios based on the use of robotic equipment increases the motivation and curiosity of children and young people towards the use of new technologies. Motivation promotes their will to understand engineering and science. The paper shows the processes carried out by the Techno Museum Project. As for the results, a set of questions was asked to each of the participants in the experience. We will conclude that the use of mechatronics and robotics on education is a powerful motivational tool to enhance the interests of children and young people with minimal training on science and engineering.",ar,2021-05-01,Revista Iberoamericana de Tecnologias del Aprendizaje,Educational activities | Interactive systems | Robot control | Robot programming,2-s2.0-85112682853,,,Article,Carro G.,60028711,Universidad Nacional de Educacion a Distancia,Madrid,Spain,3,"Carro, German;Sancristobal, Elio;Plaza, Pedro",36245883600;6508164379;57191608645,60028711;60028711;60028711,May 2021,,19700201532,19328540,Journal,16,2,9459195,204-212,0,IEEE,P2018/TCS-4307,IEEE Foundation,0,2021,https://ieeexplore.ieee.org/document/9459195,https://drive.google.com/file/d/1mt6nPaRMmp9NLKKW0Kr4mb_wrkeF2bWr/view?usp=sharing,"Describen unos workshops que hicieron de robótica.
Usaron un robot autito basado en un Arduino UNO con un puente H",Arduino IDE,entre 6 y 18,Arduino UNO,Experiencia con alumnos,"Más o menos.
Hicieron librerías personalizadas para facilitar la programación, en español y con instrucciones específicas del robot.",Textual (C/C++),No lo mencionan,No lo mencionan,No lo mencionan,No lo mencionan,No lo mencionan
SI,10.1111/bjet.13079,Debugging by design: A constructionist approach to high school students' crafting and coding of electronic textiles as failure artefacts,"Much attention in constructionism has focused on designing tools and activities that support learners in designing fully finished and functional applications and artefacts to be shared with others. But helping students learn to debug their applications often takes on a surprisingly more instructionist stance by giving them checklists, teaching them strategies or providing them with test programmes. The idea of designing bugs for learning—or debugging by design—makes learners agents of their own learning and, more importantly, of making and solving mistakes. In this paper, we report on our implementation of ‘Debugging by Design’ activities in a high school classroom over a period of 8 hours as part of an electronic textiles unit. Students were tasked to craft the electronic textile artefacts with problems or bugs for their peers to solve. Drawing on observations and interviews, we answer the following research questions: (1) How did students participate in making bugs for others? (2) What did students gain from designing and solving bugs for others? In the discussion, we address the opportunities and challenges that designing personally and socially meaningful failure artefacts provides for becoming objects-to-think-with and objects-to-share-with in student learning and promoting new directions in constructionism.",ar,2021-05-01,British Journal of Educational Technology,,2-s2.0-85103972190,,,Article,Fields D.A.,,Utah State University,Logan,United States,,,,,May 2021,71013,23988,14678535,Journal,52,3,,1078-1092,0,,,,7,2021,https://bera-journals.onlinelibrary.wiley.com/doi/10.1111/bjet.13079,https://drive.google.com/file/d/16WnYSCv_yV4EcO-zZOz9NJU1V1QX48Vd/view?usp=share_link,"Este paper habría que revisarlo porque puede servir en la parte en la que justifico ""debugging"" como un principio de diseño",Arduino C,entre 14 y 15,Arduino LilyPad,Experiencia con alumnos,No,Textual,,,,,
SI,10.1007/s10798-019-09559-9,The influence of SRA programming on algorithmic thinking and self-efficacy using Lego robotics in two types of instruction,"This study investigates the development of algorithmic thinking as a part of computational thinking skills and self-efficacy of primary school pupils using programmable robots in different instruction variants. Computational thinking is defined in the context of twenty-first century skills and describes processes involved in (re)formulating a problem in a way that a computer can process it. Programming robots offers specific affordances as it can be used to develop programs following a Sense-Reason-Act (SRA) cycle. The literature provides evidence that programming robots has the potential to enhance algorithmic thinking as a component of computational thinking. Specifically there are indications that pupils who use SRA-programming learn algorithmic skills better and achieve a higher level of self-efficacy in an open, scaffold learning environment than through direct instruction. In order to determine the influence of the instruction variant used, an experimental research design was made in which pupils solved algorithm-based mathematical problems (grid diagrams) in a preliminary measurement and their self-efficacy determined via a questionnaire. As an intervention, pupils learn to solve programming issues in pairs using “Lego NXT” robots and “Mindstorms” software in two instruction variants. The post-measurement consists of a Lego challenge, solving mathematical problems (grid diagrams), and a repeated self-efficacy questionnaire. This research shows an increase of our measures on algorithmic thinking dependent on the amount of SRA usage (though not significant). Programming using the SRA-cycle can be considered as the cause of the measured effect. The instruction variant used during the robotic intervention seems to play only a marginal role.",ar,2021-04-01,International Journal of Technology and Design Education,Computational thinking | Mathematics | Programming | Robotics | Self-efficacy | Sense-reason-act,2-s2.0-85077144907,,,Article,Fanchamps N.L.J.A.,60085415;60024360;60006288;121501807,Hogeschool Zuyd;Open Universiteit;Delft University of Technology;Fontys University of Applied Science for Teacher Education Sittard,Heerlen;Heerlen;Delft;Sittard,Netherlands;Netherlands;Netherlands;Netherlands,4,"Fanchamps, Nardie L.J.A.;Slangen, Lou;Hennissen, Paul;Specht, Marcus",24400992500;9335098900;23567924700;7005896068,121501807-60024360;121501807;60085415;60024360-60006288,April 2021,9577572,21389,15731804,Journal,31,2,,203-222,1,NRPO-SIA,NWO/Subsidie KIEM.21V01.004,Nationaal Regieorgaan Praktijkgericht Onderzoek SIA,4,2021,https://link.springer.com/article/10.1007%2Fs10798-019-09559-9,https://drive.google.com/file/d/1w5Pjp4aDVxN1hMuoUryRChva7CqGXlOL/view?usp=sharing,"Revisar porque no sé si menciona una herramienta de programación concreta (dicen que usaron LEGO).
Tampoco sé bién qué es SRA (sense-reason-act) cycle...

""Visually oriented programming environments such as Scratch and Lego Mindstorms are
very suitable for use in primary education (Korkmaz 2018). No complicated text based
code language needs to be learned and the user can drag and drop programmable blocks in
the right order (Weintrop and Wilensky 2015). Visual programming environments are also
ideally suited to control tangible objects such as robots (Sapounidis et al. 2015).""

Listo, adentro","Mindstorms software (NXT-G, supongo)
Mencionan también Scratch pero no creo que lo hayan usado...","""pupils from grade 5 and grade 6 or a primary school in the south of the Netherlands""",Lego NXT,Experiencia con alumnos,No,Visual (bloques),"Mencionan que, a pesar de haber visto paralelismo, los alumnos tienden a recurrir a instrucciones secuenciales en vez de aprovechar flujos de ejecución paralela.",No menciona,No menciona,No menciona,No menciona
SI,10.1109/TLT.2021.3058060,Introducing Algorithmic Thinking and Sequencing Using Tangible Robots,"Today, in the era of robotics, different types of educational robots have been used extensively in school classrooms to facilitate teaching activities related to a variety of computer science concepts. Numerous studies have been performed that attempt to examine the effects of using tangible interfaces to enhance collaborative learning experiences. In most of these studies, feedback, which is a vital function for a successful game activity, is mainly provided by the trainers. However, this kind of feedback can be considered as static and general, while each trainee seeks clear, consistent, and even personalized feedback. This article proposes an interactive learning tool for introducing algorithmic thinking and sequencing using educational robots suitable for elementary and intermediate students. In more detail, in this article, we leverage a fuzzy-rule-based system and computer vision techniques to provide immediate, personalized feedback and recommendations to young students while they perform a series of activities using tangible robots. These activities relate to teaching programming skills and improve the algorithmic thinking of students. Experimental results revealed that participants were able to increase their algorithmic/programming thinking skills while developing a positive attitude toward programming. The interactive gaming factor that is embedded in the use of tangible robots, while participating in the activities, was proved to be a compelling and a rewarding experience. The article concludes that the use of the proposed feedback mechanism, when placed in a robot game environment, can lead to a positive and more effective learning process.",ar,2021-02-01,IEEE Transactions on Learning Technologies,Algorithmic thinking | educational robots | sequencing | tangible programming,2-s2.0-85101491068,,,Article,Evripidou S.,60113886;60104028;60030988,Neapolis University Pafos;University of Nicosia;Democritus University of Thrace,Paphos;Nicosia;Komotini,Cyprus;Cyprus;Greece,4,"Evripidou, Salomi;Amanatiadis, Angelos;Christodoulou, Klitos;A. Chatzichristofis, Savvas",57220956303;21933508600;55292732700;24337339000,60113886;60030988;60104028;60113886,February 2021,,19700167026,19391382,Journal,14,1,9351683,93-105,0,,undefined,,3,2021,https://ieeexplore.ieee.org/document/9351683,https://drive.google.com/file/d/1LZq0d9WmpDvX_q8vWFcoIkh-cmFpx0NU/view?usp=sharing,"Habla de programación tangible, asumo que se refiere a la idea de las tarjetas físicas que acomodás para armar programas. ",BeeBot,entre 4 y 10,BeeBot,"Propuesta educativa.
Experiencia con alumnos",No,Tangible,No menciona,No menciona,No menciona,No menciona,No menciona
SI,10.46328/IJEMST.1205,Discovering concepts of geometry through robotics coding activities,"In recent years, mathematics classrooms in the U.S. and around the world have seen an increasing integration of educational robotics with interest from both students and teachers. Through their robotics coding activities, students in the present study discovered the concepts of special angle pairs in geometry.namely, complementary and supplementary angles.as they learned to navigate the immediate feedback from the robot Sphero SPRK+ into a trial-and-error mathematics problem-solving process. Students' experiences in these three coding activities revealed, to a certain extent, that engaging in reflective play could be shaped into meaningful teachable moments where students could participate in a ""doing with learning"" pedagogical method using educational robotics. These activities had transferability implications that might afford STEM learning access and opportunities for students to develop not only mathematical reasoning skills, but also problem solving and critical thinking skills operable to a coding environment. This paper presents students' use of educational robotics in a school geometry curriculum setting to demonstrate the possibility that mathematics concepts could be gathered and mastered in a playful and informal manner, and that robotics games and computer coding could be performed and framed in a thoughtful and challenging manner.",ar,2021-01-01,"International Journal of Education in Mathematics, Science and Technology",Educational robotics | Mathematical pedagogies | Problem solving | Programming | STEM integration,2-s2.0-85106358112,,,Article,Kim Y.R.,60159745;60073787,Texas A&amp;M University-San Antonio;Penn State Berks,San Antonio;Reading,United States;United States,3,"Kim, Young Rae;Park, Mi Sun;Tjoe, Hartono",55779044800;57205716898;55571607700,60159745;60159745;60073787,2021,,21100896316,2147611X,Journal,9,3,,406-425,1,,undefined,,0,2021,https://ijemst.net/index.php/ijemst/article/view/1205,https://drive.google.com/file/d/1npvmLM7NGiHflLAhB_AfaTOA3kV8RTZN/view?usp=sharing,"No sé si programaron la sphero ni con qué lenguaje, habría que revisar el paper

La propuesta del paper es usar la sphero para aprender geometría, entonces los ejercicios se concentran más en eso que en la programación en sí. Por eso casi no mencionan características del lenguaje (Sphero Edu, un lenguaje de bloques para Android)",Sphero Edu,entre 9 y 10,Sphero SPRK+,Experiencia con alumnos,No,Híbrido (bloques y javascript),No lo mencionan,No lo mencionan,No lo mencionan,No lo mencionan,No lo mencionan
SI,10.29333/ejmste/10842,"A Study of the Impact of Arduino and Visual Programming In Self-Efficacy, Motivation, Computational Thinking and 5th Grade Students’ Perceptions on Electricity","This article presents a quasi-experiment which, with the use of Arduino and Scratch for Arduino (S4A), attempts to study their effect on self-efficacy and motivation towards Science Education, Computational Thinking (CT) and the views of 5th Grade students about concepts of electricity. It was conducted on the 5th Grade of a Primary School in Greece. The research team chose the quantitative method, which was conducted through the delivery of four questionnaires that were mainly consisted of close-ended questions. In order to achieve triangulation and a deeper understanding of the topic, it was considered important to include individual open interviews. The data processing failed to prove the effect on motivation, while in self-efficacy it was proved only partially. However, the effect was explicit in view of the conceptual understanding of electricity and CT. The specific project could spur the prosecution of an extended research, aiming at the probe on the one hand of how the existing outcome is confirmed and on the other hand how they are preserved through time, for the purpose of insinuating computational methods and tools into primary education.",ar,2021-01-01,"Eurasia Journal of Mathematics, Science and Technology Education",computational thinking | motivation | physical computing | self-efficacy | visual programming,2-s2.0-85105790327,,,Article,Ntourou V.,60084406;60001524,School of Pedagogical and Technological Education;University of Crete,Athens;Rethymnon,Greece;Greece,3,"Ntourou, Vassiliki;Kalogiannakis, Michail;Psycharis, Sarantos",57223398361;8533759300;25654161400,;60001524;60084406,2021,13058215,4400151729,13058223,Journal,17,5,,1-11,1,,undefined,,3,2021,https://www.ejmste.com/article/a-study-of-the-impact-of-arduino-and-visual-programming-in-self-efficacy-motivation-computational-10842,https://drive.google.com/file/d/1LTPSb-4DIs6Cfrr_E5WFAFKhnR9K_pzq/view?usp=sharing,,Scratch for Arduino (S4A),"""5th Grade students of the 5th Primary School of Agia Varvara in Attica in Greece""",Arduino,Experiencia con alumnos,No,Visual (bloques),"Sí.
No lo mencionan","Sí.
No lo mencionan","No.
No lo mencionan","Sí.
No lo mencionan","No.
No lo mencionan"
SI,10.1080/09669760.2021.1892599,Teachers’ and children’s use of words during early childhood STEM teaching supported by robotics,"With science and digitalisation emphasised further in the new Swedish preschool curriculum, there is a need to clarify teachers’ role in educating children in and about these areas. With research pointing out the importance of a conscious language use in STEM teaching, we here focus on words used by teachers and children during inquiry-based STEM activities in five different preschools. Bers’ powerful ideas about early childhood computational thinking (Bers Citation2018. Coding as a Playground. New York: Routledge.) were used for analysis and results highlight how digital programming and use of robots can promote a more versatile use of robotic words, compared to analogue, ‘unplugged’, programming without robots. Furthermore, it is also found that use of precise decontextualised language by the teacher seems to stimulate children’s use of words related to STEM and the object of learning. The findings add to the discussion about how teachers can scaffold children’s learning by inquiry teaching of STEM supported by robotics.",ar,2021-01-01,International Journal of Early Years Education,,2-s2.0-85101825559,,,Article,Fridberg M.,,Högskolan Kristianstad,Kristianstad,Sweden,,,,,2021,9669760,5700154766,14698463,Journal,,,,,1,,,,4,2021,https://www.tandfonline.com/doi/full/10.1080/09669760.2021.1892599,https://drive.google.com/file/d/1G15jY-17fZ6-lO5bdggI6rak62Xi0uJ8/view?usp=share_link,"Revisar, me parece que mencionan BlueBot pero no sé, lo miré muy por arriba

Sí, los pibes programan el BlueBot que es como BeeBot pero con Bluetooth (creo). Igual sólo lo programaron haciendo click en los botones del robot.
Hicieron un estudio con pibes de entre 5 y 6 años.",BlueBot,entre 5 y 6,BlueBot,Experiencia con alumnos,No,,,,,,